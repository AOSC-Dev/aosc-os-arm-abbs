From b37362a010ad8d5b20826fcdd91681c819257206 Mon Sep 17 00:00:00 2001
From: Bingwu Zhang <xtex@aosc.io>
Date: Fri, 7 Feb 2025 22:31:17 +0800
Subject: [PATCH 3/4] skia: enable LASX explicitly to LASX binary compatible
 objects
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fix skia build on LA64 for the second time (:

Enable LASX intrinsics explicitly when building with LASX binary
compatibility.

In function ‘__lasx_xvsub_h’,
inlined from ‘S32_alpha_D32_filter_DX’ at .../workdir/UnpackedTarball/skia/src/opts/SkBitmapProcState_opts.h:323:43:
/usr/lib/gcc/loongarch64-aosc-linux-gnu/14.2.0/include/lasxintrin.h:539:42: error: built-in function ‘__builtin_lasx_xvsub_h’ is not enabled
539 | return (__m256i)__builtin_lasx_xvsub_h ((v16i16)_1, (v16i16)_2);

cf. https://buildit.aosc.io/logs/62784-libreoffice-25.2.0.3-loongarch64-loong13-2025-02-07-22:04:10.txt

Link: https://skia-review.googlesource.com/c/skia/+/873776
Fixes: I232b4656a87a4c3d87d669769c6483e01425c0e6
Tested-by: Bingwu Zhang <xtex@aosc.io>
Change-Id: I9fbf0f24f28f71a76c10ee31e9a9da00ff350481
Signed-off-by: Bingwu Zhang <xtex@aosc.io>
---
 config_host.mk.in             |  1 +
 configure.ac                  | 16 ++++++++++++++++
 external/skia/Library_skia.mk | 15 ++++++++++++++-
 3 files changed, 31 insertions(+), 1 deletion(-)

diff --git a/config_host.mk.in b/config_host.mk.in
index 7ce742cf3987..8cc36e4e4a6e 100644
--- a/config_host.mk.in
+++ b/config_host.mk.in
@@ -100,6 +100,7 @@ export CPPU_ENV_FOR_BUILD=@CPPU_ENV_FOR_BUILD@
 export CPPUNIT_CFLAGS=$(gb_SPACE)@CPPUNIT_CFLAGS@
 export CPPUNIT_LIBS=$(gb_SPACE)@CPPUNIT_LIBS@
 export CPUNAME=@CPUNAME@
+ENABLE_LASX=@ENABLE_LASX@
 export CROSS_COMPILING=@CROSS_COMPILING@
 export CURL=@CURL@
 export CURL_CFLAGS=$(gb_SPACE)@CURL_CFLAGS@
diff --git a/configure.ac b/configure.ac
index 8dea132cc896..9399d9a3c27f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -5700,6 +5700,22 @@ emscripten*)
     ;;
 esac
 
+dnl ===================================================================
+dnl Target-specific options
+dnl ===================================================================
+
+ENABLE_LASX="TRUE"
+if test "$CPUNAME" == LOONGARCH64; then
+    AC_ARG_ENABLE(lasx,
+        AS_HELP_STRING([--enable-lasx],
+            [build with LASX vectorization])
+    )
+    if test "$enable_lasx" != yes; then
+        ENABLE_LASX=""
+    fi
+fi
+AC_SUBST(ENABLE_LASX)
+
 dnl ===================================================================
 dnl .NET support
 dnl ===================================================================
diff --git a/external/skia/Library_skia.mk b/external/skia/Library_skia.mk
index dd99e6f271ab..e9a43a35bbdf 100644
--- a/external/skia/Library_skia.mk
+++ b/external/skia/Library_skia.mk
@@ -1315,8 +1315,21 @@ $(eval $(call gb_Library_add_generated_exception_objects,skia,\
     UnpackedTarball/skia/src/core/SkSwizzler_opts_lasx \
     UnpackedTarball/skia/src/core/SkBlitRow_opts_lasx \
     UnpackedTarball/skia/src/core/SkBitmapProcState_opts_lasx, \
-        $(LO_SKIA_AVOID_INLINE_COPIES) \
+        $(LO_SKIA_AVOID_INLINE_COPIES) -mlasx \
 ))
+# Always allow LASX builtin functions duraing linking
+# because the above SkOpts_lasx, etc, LASX binary compatibility
+# object requires LASX intrinsics to be available
+$(eval $(call gb_Library_add_ldflags,skia,\
+	-mlasx \
+))
+
+# Apply --enable-lasx to compiling
+ifeq ($(ENABLE_LASX),TRUE)
+$(eval $(call gb_Library_add_cxxflags,skia, \
+    -mlasx \
+))
+endif
 endif
 
 # Skcms code is used by png writer, which is used by SkiaHelper::dump(). Building
-- 
2.48.1

