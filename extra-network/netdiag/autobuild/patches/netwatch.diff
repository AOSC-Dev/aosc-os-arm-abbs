Description: Make program compile and work on Linux.
Author: Michael Meskes <meskes@debian.org>
--- netdiag-1.0.orig/netwatch-1.0c/netwatch.1
+++ netdiag-1.0/netwatch-1.0c/netwatch.1
@@ -1,5 +1,5 @@
 .\" "%W% %G%"
-.TH NETWATCH\ Version 0.9h
+.TH NETWATCH
 .SH NAME
 Netwatch \- Ethernet Internet Protocol Monitor
 .SH SYNOPSIS
--- netdiag-1.0.orig/netwatch-1.0c/warning.c
+++ netdiag-1.0/netwatch-1.0c/warning.c
@@ -1,6 +1,8 @@
 #include "netwatch.h"
 #include <syslog.h>
 #include <stdio.h>
+#include <string.h>
+#include <time.h>
 
 static FILE *tmpfp;
 static char tmpname[256];
--- netdiag-1.0.orig/netwatch-1.0c/netwatch.c
+++ netdiag-1.0/netwatch-1.0c/netwatch.c
@@ -64,6 +64,7 @@
 #endif
 #endif
 
+#include <string.h>
 #include <stdlib.h>
 #include <sys/types.h>
 #include <sys/stat.h> 
@@ -1960,8 +1961,8 @@ int
             close (1);
             dup2 (osocket[1], 1);
             close (osocket[1]);
-            execlp ("netresolv", "netresolv", NULL);
-            perror ("exec netresolv");
+	    execlp ("/usr/lib/netdiag/netresolv", "netresolv", NULL);
+	    perror ("exec /usr/lib/netdiag/netresolv");
             exit (1);
          }
          close (msocket[0]);
@@ -2482,7 +2483,7 @@ void
 int
    tlocal (u_int32_t * addr)
    {
-      static unsigned char lhost[] = {  127, 0, 0, 1  };
+      static unsigned char __attribute__((aligned(32))) lhost[] = {  127, 0, 0, 1  };
       u_int32_t *k = (u_int32_t *) netmask;
       u_int32_t reslocal, restest;
       if (*addr == *(u_int32_t *) lhost)
@@ -2678,7 +2679,7 @@ void
          work->plog = open(nam,O_APPEND|O_WRONLY);
          if (work->plog<0)
          {
-            work->plog = open(nam,O_APPEND|O_CREAT|O_WRONLY);
+	    work->plog = open(nam,O_APPEND|O_CREAT|O_WRONLY, S_IRUSR|S_IWUSR);
             st = write(work->plog,&starttime,sizeof(starttime));
             st = write(work->plog,&simmagic,sizeof(simmagic));
          }
@@ -3402,9 +3403,12 @@ void log_local(char *buf, int length)
 }
 
 void
-   handle_ip (struct ip *buf, int length, int direct)
+   handle_ip (struct ip *argbuf, int length, int direct)
    {
       int wlen;
+      struct ip bufstruct, *buf = &bufstruct;
+
+      memcpy(buf, argbuf, sizeof(struct ip));      /* to fix unaligned accesses */
       new = time (0);
       wlen = ntohs (buf->tot_len);
       selprob = 40;
--- netdiag-1.0.orig/netwatch-1.0c/Makefile.in
+++ netdiag-1.0/netwatch-1.0c/Makefile.in
@@ -11,7 +11,7 @@ EXEC= netwatch netresolv
 # CFLAGS=
 DEFS= curs.h netwatch.h
 OBJECTS= curs.o dispdata.o services.o netwatch.o processinetrc.o gh.o warning.o
-INSTALLDIR=/usr/bin
+INSTALLDIR=/usr
 
 all:	$(EXEC)
 
@@ -24,9 +24,9 @@ netwatch:	$(OBJECTS) $(DEFS)
 install:	$(EXEC)
 	chown root.root $(EXEC)
 	chmod 700 $(EXEC)
-	cp netwatch $(INSTALLDIR)/netwatch
-	cp netresolv $(INSTALLDIR)/netresolv
-	cp netwatch.1 /usr/man/man1
+	cp netwatch $(INSTALLDIR)/sbin/netwatch
+	cp netresolv $(INSTALLDIR)/bin/netresolv
+	cp netwatch.1 $(INSTALLDIR)/share/man/man1
 
 tar:
 	tar -C .. -czf ../netwatch-1.0c.src.tgz netwatch-1.0c
@@ -34,6 +34,10 @@ tar:
 clean:
 	rm -f *~ *.o $(EXEC) config.h config.cache config.log config.status 
 
+# work round ARM GCC bug: builtin memcpy gets alignment wrong.
+netwatch.o: netwatch.c
+	$(CC) $(XCFLAGS) -c $(OLDLINUX) -fno-builtin-memcpy $<
+
 .c.o:
 	$(CC) $(XCFLAGS) -c $(OLDLINUX) $<
 
--- netdiag-1.0.orig/netwatch-1.0c/dispdata.c
+++ netdiag-1.0/netwatch-1.0c/dispdata.c
@@ -12,6 +12,8 @@
 #include "netwatch.h"
 #include "curs.h"
 #include <sys/time.h>
+#include <time.h>
+#include <string.h>
 
 #ifdef NEWCURSES_SUPP
 #include <ncurses/curses.h>
@@ -208,7 +208,7 @@
   return (sn);
 }
 
-void makeaddr (char naddr[], char ascii[]);
+void makeaddr (unsigned char naddr[], char ascii[]);
 
 void
   cleancol (int col, int strow, int finrow)
