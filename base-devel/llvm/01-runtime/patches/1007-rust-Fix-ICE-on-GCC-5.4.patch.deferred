From 5f074ecab0411aeb74efbcd090e3f8f7fcea3208 Mon Sep 17 00:00:00 2001
From: Nikita Popov <npopov@redhat.com>
Date: Tue, 19 Jul 2022 16:52:04 +0200
Subject: [PATCH 1007/1015] [rust] Fix ICE on GCC 5.4

---
 llvm/lib/Support/UnicodeNameToCodepoint.cpp | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/lib/Support/UnicodeNameToCodepoint.cpp b/lib/Support/UnicodeNameToCodepoint.cpp
index 1e8aebf1b8eb..194e8d88a1e1 100644
--- a/lib/Support/UnicodeNameToCodepoint.cpp
+++ b/lib/Support/UnicodeNameToCodepoint.cpp
@@ -499,8 +499,8 @@ nearestMatchesForCodepointName(StringRef Pattern, std::size_t MaxMatchesCount) {
   // Filling (and overriding) the matrix for the name fragment of each node
   // iteratively. CompleteName is used to collect the actual name of potential
   // match, respecting case and spacing.
-  auto VisitNode = [&](const Node &N, std::size_t Row,
-                       auto &VisitNode) -> void {
+  std::function<void(const Node &, std::size_t)> VisitNode;
+  VisitNode = [&](const Node &N, std::size_t Row) -> void {
     std::size_t J = 0;
     for (; J < N.Name.size(); J++) {
       if (!isAlnum(N.Name[J]))
@@ -533,7 +533,7 @@ nearestMatchesForCodepointName(StringRef Pattern, std::size_t MaxMatchesCount) {
         ChildOffset += C.Size;
         if (!C.isValid())
           break;
-        VisitNode(C, Row, VisitNode);
+        VisitNode(C, Row);
         if (!C.HasSibling)
           break;
       }
@@ -541,7 +541,7 @@ nearestMatchesForCodepointName(StringRef Pattern, std::size_t MaxMatchesCount) {
   };
 
   Node Root = createRoot();
-  VisitNode(Root, 1, VisitNode);
+  VisitNode(Root, 1);
   return Matches;
 }
 
-- 
2.38.1

