From fb7629288073088e088b9504aa2526ac967c6077 Mon Sep 17 00:00:00 2001
From: Jiaxun Yang <jiaxun.yang@flygoat.com>
Date: Tue, 18 Aug 2020 15:28:38 +0800
Subject: [PATCH] sm712fb: Map SMEM as writecombine

Signed-off-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
---
 drivers/video/fbdev/sm712fb.c | 56 +++++++++++++++++++++++++----------
 1 file changed, 41 insertions(+), 15 deletions(-)

diff --git a/drivers/video/fbdev/sm712fb.c b/drivers/video/fbdev/sm712fb.c
index 6a1b4a853d9e..e03c5436cfe5 100644
--- a/drivers/video/fbdev/sm712fb.c
+++ b/drivers/video/fbdev/sm712fb.c
@@ -1428,10 +1428,7 @@ static int smtc_map_smem(struct smtcfb_info *sfb,
  */
 static void smtc_unmap_smem(struct smtcfb_info *sfb)
 {
-	if (sfb && sfb->fb->screen_base) {
-		iounmap(sfb->fb->screen_base);
-		sfb->fb->screen_base = NULL;
-	}
+	sfb->fb->screen_base = NULL;
 }
 
 /*
@@ -1521,6 +1518,7 @@ static int smtcfb_pci_probe(struct pci_dev *pdev,
 	u_long smem_size;
 	int err;
 	unsigned long mmio_base;
+	void __iomem *bar_reg;
 
 	dev_info(&pdev->dev, "Silicon Motion display driver.\n");
 
@@ -1570,19 +1568,30 @@ static int smtcfb_pci_probe(struct pci_dev *pdev,
 	case 0x712:
 		sfb->fb->fix.mmio_start = mmio_base + 0x00400000;
 		sfb->fb->fix.mmio_len = 0x00400000;
-		sfb->lfb = ioremap(mmio_base, mmio_addr);
+
+		bar_reg = devm_ioremap(sfb->fb->fix.mmio_start,
+					sfb->fb->fix.mmio_len);
+		if (!bar_reg) {
+			dev_err(&pdev->dev,
+				"%s: unable to map bar_reg!\n",
+				sfb->fb->fix.id);
+			err = -ENOMEM;
+			goto failed_fb;
+		}
+
+		sfb->lfb = devm_ioremap_wc(mmio_base, smem_size);
 		if (!sfb->lfb) {
 			dev_err(&pdev->dev,
-				"%s: unable to map memory mapped IO!\n",
+				"%s: unable to map lfb!\n",
 				sfb->fb->fix.id);
 			err = -ENOMEM;
 			goto failed_fb;
 		}
 
-		sfb->mmio = (smtc_regbaseaddress =
-		    sfb->lfb + 0x00700000);
-		sfb->dp_regs = sfb->lfb + 0x00408000;
-		sfb->vp_regs = sfb->lfb + 0x0040c000;
+		smtc_regbaseaddress = bar_reg + 0x00300000;
+		sfb->mmio = smtc_regbaseaddress;
+		sfb->dp_regs = bar_reg + 0x00008000;
+		sfb->vp_regs = bar_reg + 0x0000c000;
 		if (sfb->fb->var.bits_per_pixel == 32) {
 			sfb->lfb += big_addr;
 			dev_info(&pdev->dev, "sfb->lfb=%p\n", sfb->lfb);
@@ -1601,11 +1610,28 @@ static int smtcfb_pci_probe(struct pci_dev *pdev,
 	case 0x720:
 		sfb->fb->fix.mmio_start = mmio_base;
 		sfb->fb->fix.mmio_len = 0x00200000;
-		sfb->dp_regs = ioremap(mmio_base, 0x00200000 + smem_size);
-		sfb->lfb = sfb->dp_regs + 0x00200000;
-		sfb->mmio = (smtc_regbaseaddress =
-		    sfb->dp_regs + 0x000c0000);
-		sfb->vp_regs = sfb->dp_regs + 0x800;
+		bar_reg = devm_ioremap(sfb->fb->fix.mmio_start,
+			sfb->fb->fix.mmio_len);
+		if (!bar_reg) {
+			dev_err(&pdev->dev,
+				"%s: unable to map bar_reg!\n",
+				sfb->fb->fix.id);
+			err = -ENOMEM;
+			goto failed_fb;
+		}
+
+		sfb->lfb = devm_ioremap_wc(sfb->fb->fix.mmio_start + sfb->fb->fix.mmio_len, smem_size);
+		if (!sfb->lfb) {
+			dev_err(&pdev->dev,
+				"%s: unable to map lfb!\n",
+				sfb->fb->fix.id);
+			err = -ENOMEM;
+			goto failed_fb;
+		}
+
+		sfb->dp_regs = bar_reg;
+		sfb->mmio = (smtc_regbaseaddress = bar_reg + 0x000c0000);
+		sfb->vp_regs = bar_reg + 0x800;
 
 		smtc_seqw(0x62, 0xff);
 		smtc_seqw(0x6a, 0x0d);
-- 
2.28.0


