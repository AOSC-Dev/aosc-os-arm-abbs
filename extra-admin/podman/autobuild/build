function go_build() {
    go build -buildmode=pie -compiler gc -v -tags="${BUILDTAGS:-}" -ldflags "-w -s -extldflags '-Wl,-z,relro -Wl,-z,now -specs=/usr/lib/autobuild3/specs/hardened-ld'" $@
}

abinfo "Exporting go path and disabling Go 1.11 Module system ..."
export GO111MODULE=off
export GOPATH=$(pwd)/_build:$(pwd)

# we cannot use gomod type since podman is too complicated
# Specify BUILDTAGS, taken from Fedora F32 tree
export BUILDTAGS="systemd seccomp exclude_graphdriver_devicemapper $(hack/btrfs_installed_tag.sh) $(hack/btrfs_tag.sh) $(hack/libdm_tag.sh) $(hack/selinux_tag.sh)"

abinfo "Making the source directory as the module directory ..."
mkdir -v _build
pushd _build
mkdir -p src/github.com/containers/podman
ln -sv ../../../../.. src/github.com/containers/podman/v3
popd

abinfo "Stage 1: Building podman itself ..."
go_build -o bin/podman github.com/containers/podman/v3/cmd/podman/

abinfo "Stage 2: Building podman remote ..."
export BUILDTAGS+=" remoteclient"
go_build -o bin/podman-remote github.com/containers/podman/v3/cmd/podman/

abinfo "Stage 3: Building dnsname plugin ..."
unset BUILDTAGS
pushd "$SRCDIR/../dnsname"
mkdir _build && pushd _build
export GOPATH=$(pwd)/_build:$(pwd)

mkdir -p src/github.com/containers/
ln -sv ../../../../ src/github.com/containers/dnsname
popd
# the following modules require Go 1.11+ module system
export GO111MODULE=on
go_build -o bin/dnsname github.com/containers/dnsname/plugins/meta/dnsname
abinfo "Stage 3.5: Installing dnsname plugin ..."
make PREFIX=/usr DESTDIR="$PKGDIR" install
popd

abinfo "Stage 4: Building CNI plugins ..."
pushd "$SRCDIR/../cni-plugins"
bash ./build_linux.sh
cp -v "$SRCDIR/../cni-plugins/bin/"* "$PKGDIR"/usr/libexec/cni/
popd

abinfo "Stage 5: Building documentations ..."
make docs

abinfo "Installing binaries ..."
make PODMAN_VERSION="$PKGVER" PREFIX="$PKGDIR/usr/" ETCDIR="$PKGDIR/etc/" \
     install.bin-nobuild \
     install.man-nobuild \
     install.systemd \
     install.completions \
     install.docker \
     install.remote-nobuild

abinfo "Installing example configurations ..."
install -Dvm644 "$SRCDIR"/test/registries.conf \
    "$PKGDIR"/etc/containers/registries.conf
install -Dvm644 "$SRCDIR"/test/policy.json \
    "$PKGDIR"/etc/containers/policy.json
