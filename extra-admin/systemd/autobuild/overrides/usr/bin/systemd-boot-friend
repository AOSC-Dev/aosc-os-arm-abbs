#!/bin/bash

linfo() {
    bold=$(tput bold)
    normal=$(tput sgr0)
    echo -e "${bold}[systemd-boot-friend]${normal} $*"
}

if [[ -d /boot/efi/EFI/aosc ]]; then
    linfo "/boot/efi/EFI/aosc exists. Moving latest kernel and initramfs to this location."
    # First clean up the old ones
    DISTRO_NAME="aosc"
    rm /boot/efi/EFI/aosc/initramfs-"$DISTRO_NAME"-*.img
    rm /boot/efi/EFI/aosc/vmlinuz-"$DISTRO_NAME"-*

    for i in $(ls /usr/lib/modules | grep -v 'extramodules'); do
        KERNEL_VER=$(echo $i | cut -d'-' -f1)
        DISTRO_NAME=$(echo $i | cut -d'-' -f2)
        KERNEL_FLAVOR=$(echo $i | cut -d'-' -f3)

        # Then move new kernels and initramfs to location
        linfo "Installing $i to /boot/efi/EFI/aosc..."
        cp /boot/initramfs-"$KERNEL_VER"-"$DISTRO_NAME"-"$KERNEL_FLAVOR".img /boot/efi/EFI/aosc/initramfs-"$DISTRO_NAME"-"$KERNEL_FLAVOR".img
        cp /boot/vmlinuz-"$DISTRO_NAME"-"$KERNEL_FLAVOR"-"$KERNEL_VER" /boot/efi/EFI/aosc/vmlinuz-"$DISTRO_NAME"-"$KERNEL_FLAVOR"
    done

    if [[ -e /boot/intel-ucode.img ]]; then
        linfo "intel-ucode detected. Installing..."
        cp /boot/intel-ucode.img /boot/efi/EFI/aosc/intel-ucode.img
    fi
else
    linfo "/boot/efi/EFI/aosc does not exists. Doing nothing."
    linfo "If you wish to use systemd-boot, run systemd-boot-friend-init ."
fi
