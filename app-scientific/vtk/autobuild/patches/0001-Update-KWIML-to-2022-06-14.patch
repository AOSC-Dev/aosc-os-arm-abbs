From e6fb3a17c044e2e997c277fee89e0f340984c67f Mon Sep 17 00:00:00 2001
From: KWIML Upstream <kwrobot@kitware.com>
Date: Tue, 14 Jun 2022 09:33:12 -0400
Subject: [PATCH] KWIML 2022-06-14 (7b9bd7fe)

Code extracted from:

    https://gitlab.kitware.com/utils/kwiml.git

at commit 7b9bd7fe925396d06d3d9540b4863d6d2382661d (master).
---
 Utilities/KWIML/vtkkwiml/include/kwiml/abi.h    | 10 ++++++++++
 Utilities/KWIML/vtkkwiml/include/kwiml/int.h    | 19 ++++++++++++++++---
 Utilities/KWIML/vtkkwiml/test/test_int_format.h |  8 +++++++-
 3 files changed, 33 insertions(+), 4 deletions(-)

diff --git a/Utilities/KWIML/vtkkwiml/include/kwiml/abi.h b/Utilities/KWIML/vtkkwiml/include/kwiml/abi.h
index da525fdcb63..0437854d381 100644
--- a/Utilities/KWIML/vtkkwiml/include/kwiml/abi.h
+++ b/Utilities/KWIML/vtkkwiml/include/kwiml/abi.h
@@ -136,6 +136,8 @@ suppression macro KWIML_ABI_NO_VERIFY was defined.
 #  define KWIML_ABI_SIZEOF_DATA_PTR 8
 # elif defined(__i386) || defined(__i386__)
 #  define KWIML_ABI_SIZEOF_DATA_PTR 4
+# elif defined(_M_ARM64)
+#  define KWIML_ABI_SIZEOF_DATA_PTR 8
 # endif
 #endif
 #if !defined(KWIML_ABI_SIZEOF_DATA_PTR)
@@ -407,6 +409,10 @@ suppression macro KWIML_ABI_NO_VERIFY was defined.
 #elif defined(__hppa) || defined(__hppa__)
 # define KWIML_ABI_ENDIAN_ID KWIML_ABI_ENDIAN_ID_BIG
 
+/* LoongArch64 */
+#elif defined(__loongarch64)
+# define KWIML_ABI_ENDIAN_ID KWIML_ABI_ENDIAN_ID_LITTLE
+
 /* Motorola 68k */
 #elif defined(__m68k__) || defined(M68000)
 # define KWIML_ABI_ENDIAN_ID KWIML_ABI_ENDIAN_ID_BIG
@@ -461,6 +467,10 @@ suppression macro KWIML_ABI_NO_VERIFY was defined.
 #  define KWIML_ABI_ENDIAN_ID KWIML_ABI_ENDIAN_ID_BIG
 # endif
 
+/* Aarch64 (Windows) */
+#elif defined(_M_ARM64)
+# define KWIML_ABI_ENDIAN_ID KWIML_ABI_ENDIAN_ID_LITTLE
+
 /* Xtensa */
 #elif defined(__XTENSA_EB__)
 # define KWIML_ABI_ENDIAN_ID KWIML_ABI_ENDIAN_ID_BIG
diff --git a/Utilities/KWIML/vtkkwiml/include/kwiml/int.h b/Utilities/KWIML/vtkkwiml/include/kwiml/int.h
index b2e14d5f28a..49da373255e 100644
--- a/Utilities/KWIML/vtkkwiml/include/kwiml/int.h
+++ b/Utilities/KWIML/vtkkwiml/include/kwiml/int.h
@@ -162,7 +162,11 @@ An includer may test the following macros after inclusion:
 #elif defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L /* C99 */
 # define KWIML_INT_HAVE_INTTYPES_H 1
 #elif defined(_MSC_VER) /* MSVC */
-# define KWIML_INT_NO_INTTYPES_H 1
+# if _MSC_VER >= 1800
+#  define KWIML_INT_HAVE_INTTYPES_H 1
+# else
+#  define KWIML_INT_NO_INTTYPES_H 1
+# endif
 #elif defined(__BORLANDC__) /* Borland */
 # define KWIML_INT_NO_INTTYPES_H 1
 #elif defined(__WATCOMC__) /* Watcom */
@@ -272,6 +276,15 @@ An includer may test the following macros after inclusion:
 # define KWIML_INT_BROKEN_PRIXPTR 1
 #endif
 
+#if defined(_MSC_VER) && _MSC_VER < 1900
+  /* MSVC scanf seems broken on 8-bit sizes until 19.00 */
+# define KWIML_INT_BROKEN_SCNd8 1
+# define KWIML_INT_BROKEN_SCNi8 1
+# define KWIML_INT_BROKEN_SCNo8 1
+# define KWIML_INT_BROKEN_SCNu8 1
+# define KWIML_INT_BROKEN_SCNx8 1
+#endif
+
 #if (defined(__SUNPRO_C)||defined(__SUNPRO_CC)) && defined(_CHAR_IS_UNSIGNED)
 # define KWIML_INT_BROKEN_INT8_T 1 /* system type defined incorrectly */
 #elif defined(__BORLANDC__) && defined(_CHAR_UNSIGNED)
@@ -303,7 +316,7 @@ An includer may test the following macros after inclusion:
 #elif defined(__BORLANDC__)
 # define KWIML_INT_private_NO_SCN8
 # define KWIML_INT_private_NO_SCN64
-#elif defined(_MSC_VER)
+#elif defined(_MSC_VER) && _MSC_VER < 1900
 # define KWIML_INT_private_NO_SCN8
 #elif defined(__WATCOMC__)
 # define KWIML_INT_private_NO_SCN8
@@ -706,7 +719,7 @@ An includer may test the following macros after inclusion:
 #endif
 
 #if defined(__INTEL_COMPILER)
-#elif defined(__BORLANDC__)
+#elif defined(__BORLANDC__) && !defined(__CODEGEARC_VERSION__)
 # define KWIML_INT_private_NO_FMTLL /* type 'long long' but not 'll' format */
 # define KWIML_INT_BROKEN_INT64_C 1  /* system macro defined incorrectly */
 # define KWIML_INT_BROKEN_UINT64_C 1 /* system macro defined incorrectly */
diff --git a/Utilities/KWIML/vtkkwiml/test/test_int_format.h b/Utilities/KWIML/vtkkwiml/test/test_int_format.h
index 2e0310ce4ef..e139bdb16ea 100644
--- a/Utilities/KWIML/vtkkwiml/test/test_int_format.h
+++ b/Utilities/KWIML/vtkkwiml/test/test_int_format.h
@@ -24,6 +24,12 @@
 # define STATIC_CAST(t,v) (t)(v)
 #endif
 
+#if defined(_MSC_VER) && _MSC_VER < 1900
+# define SNPRINTF(buf, sz, fmt, x) sprintf(buf, fmt, x)
+#else
+# define SNPRINTF(buf, sz, fmt, x) snprintf(buf, sz, fmt, x)
+#endif
+
 #define VALUE(T, U) STATIC_CAST(T, STATIC_CAST(U, 0xab) << ((sizeof(T)-1)<<3))
 
 #define TEST_C_(C, V, PRI, T, U)                                        \
@@ -48,7 +54,7 @@
   {                                                                     \
   T const x = VALUE(T, U);                                              \
   char const* str = STR;                                                \
-  sprintf(buf, "%" KWIML_INT_PRI##PRI, x);                              \
+  SNPRINTF(buf, sizeof(buf), "%" KWIML_INT_PRI##PRI, x);                \
   printf(LANG "KWIML_INT_PRI" #PRI ":"                                  \
          " expected [%s], got [%s]", str, buf);                         \
   if(strcmp(str, buf) == 0)                                             \
