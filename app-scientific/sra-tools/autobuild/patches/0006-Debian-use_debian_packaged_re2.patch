Author: Andreas Tille <tille@debian.org>
        Aaron M. Ucko <ucko@debian.org>
Last-Update: 2023-01-15 20:56:15
Description: use Debian packaged re2

Index: b/tools/loaders/sharq/CMakeLists.txt
===================================================================
--- a/tools/loaders/sharq/CMakeLists.txt
+++ b/tools/loaders/sharq/CMakeLists.txt
@@ -64,25 +64,25 @@ set(LOCAL_LIBDIR ${LOCAL_BUILD_DIR}/lib)
 # Google RE2 release
 set(RE2_TAG 2021-09-01)
 
-include (ExternalProject)
-ExternalProject_Add(RE2
-  PREFIX RE2
-  GIT_REPOSITORY https://github.com/google/re2.git
-  GIT_TAG ${RE2_TAG}
-  BUILD_IN_SOURCE 1
-  UPDATE_COMMAND "" # No update as we use specific tag
-  INSTALL_DIR ${LOCAL_BUILD_DIR}
-  CMAKE_ARGS
-    -DCMAKE_BUILD_TYPE:STRING=Release
-    -DRE2_BUILD_TESTING:BOOL=OFF
-    -DCMAKE_INSTALL_PREFIX:PATH=${LOCAL_BUILD_DIR}
-    -DCMAKE_INSTALL_LIBDIR:PATH=lib
-    -DCMAKE_VERBOSE_MAKEFILE:BOOL=OFF
-    -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON
-    -DCMAKE_INSTALL_MESSAGE:STRING=LAZY
-
-)
-set(RE2_STATIC_LIBRARIES -L${LOCAL_LIBDIR} -lre2 )
+#include (ExternalProject)
+#ExternalProject_Add(RE2
+#  PREFIX RE2
+#  GIT_REPOSITORY https://github.com/google/re2.git
+#  GIT_TAG ${RE2_TAG}
+#  BUILD_IN_SOURCE 1
+#  UPDATE_COMMAND "" # No update as we use specific tag
+#  INSTALL_DIR ${LOCAL_BUILD_DIR}
+#  CMAKE_ARGS
+#    -DCMAKE_BUILD_TYPE:STRING=Release
+#    -DRE2_BUILD_TESTING:BOOL=OFF
+#    -DCMAKE_INSTALL_PREFIX:PATH=${LOCAL_BUILD_DIR}
+#    -DCMAKE_INSTALL_LIBDIR:PATH=lib
+#    -DCMAKE_VERBOSE_MAKEFILE:BOOL=OFF
+#    -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON
+#    -DCMAKE_INSTALL_MESSAGE:STRING=LAZY
+#
+#)
+set(RE2_STATIC_LIBRARIES -lre2 )
 
 #file(COPY ${CMAKE_SOURCE_DIR}/tools/sharq/sharq.py  DESTINATION ${BINDIR})
 
@@ -94,7 +94,7 @@ add_custom_target(
     ${BINDIR}/sharq.py)
 
 add_executable(sharq fastq_parse)
-add_dependencies(sharq RE2 sharq.py)
+add_dependencies(sharq sharq.py)
 target_include_directories(sharq PUBLIC ${LOCAL_INCDIR} ./ ../../../)
 if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
         set(CXX_FILESYSTEM_LIBRARIES "stdc++fs")
Index: b/test/loaders/sharq/CMakeLists.txt
===================================================================
--- a/test/loaders/sharq/CMakeLists.txt
+++ b/test/loaders/sharq/CMakeLists.txt
@@ -37,7 +37,7 @@ if( SINGLE_CONFIG )
         set(LOCAL_BUILD_DIR ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
         set(LOCAL_INCDIR ${LOCAL_BUILD_DIR}/include)
         set(LOCAL_LIBDIR ${LOCAL_BUILD_DIR}/lib)
-        set(RE2_STATIC_LIBRARIES -L${LOCAL_LIBDIR} -lre2 )
+        set(RE2_STATIC_LIBRARIES -lre2 )
 
         if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
             set(CXX_FILESYSTEM_LIBRARIES "stdc++fs")
@@ -45,21 +45,21 @@ if( SINGLE_CONFIG )
 
         # test-regexpr
         add_executable(test-regexpr test-regexpr.cpp )
-        add_dependencies(test-regexpr RE2)
+        # add_dependencies(test-regexpr RE2)
         target_include_directories(test-regexpr PUBLIC ${LOCAL_INCDIR})
         target_link_libraries(test-regexpr ${COMMON_LINK_LIBRARIES} ${COMMON_LIBS_READ} ${RE2_STATIC_LIBRARIES})
         add_test( NAME Test_regexpr COMMAND test-regexpr WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} )
 
         # test-sharq-parser
         add_executable(test-sharq-parser test-sharq-parser.cpp )
-        add_dependencies(test-sharq-parser RE2 sharq)
+        add_dependencies(test-sharq-parser sharq)
         target_include_directories(test-sharq-parser PUBLIC ${LOCAL_INCDIR} ../../../tools/loaders/sharq)
         target_link_libraries(test-sharq-parser ${CXX_FILESYSTEM_LIBRARIES} ZLIB::ZLIB ${COMMON_LINK_LIBRARIES} ${COMMON_LIBS_READ} ${BZIP2_LIBRARIES} ${RE2_STATIC_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
         add_test( NAME Test_sharq_parser COMMAND test-sharq-parser WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} )
 
         # test-sharq-writer
         add_executable(test-sharq-writer test-sharq-writer.cpp )
-        add_dependencies(test-sharq-writer RE2 sharq)
+        add_dependencies(test-sharq-writer sharq)
         target_include_directories(test-sharq-writer PUBLIC ${LOCAL_INCDIR} ../../../tools/loaders/sharq)
         target_link_libraries(test-sharq-writer ${COMMON_LINK_LIBRARIES} ${COMMON_LIBS_READ})
         add_test( NAME Test_sharq_writer COMMAND test-sharq-writer WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} )
@@ -73,7 +73,7 @@ if( SINGLE_CONFIG )
             set( asan_defs "-fsanitize=address" )
 
             add_executable(test-sharq-parser-asan test-sharq-parser.cpp )
-            add_dependencies(test-sharq-parser-asan RE2 sharq-asan)
+            add_dependencies(test-sharq-parser-asan sharq-asan)
             target_include_directories(test-sharq-parser-asan PUBLIC ${LOCAL_INCDIR} ../../../tools/loaders/sharq)
             target_compile_options( test-sharq-parser-asan PRIVATE ${asan_defs} )
             target_link_libraries(test-sharq-parser-asan ${CXX_FILESYSTEM_LIBRARIES} ZLIB::ZLIB ${COMMON_LINK_LIBRARIES} ${COMMON_LIBS_READ} ${BZIP2_LIBRARIES} ${RE2_STATIC_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
@@ -85,7 +85,7 @@ if( SINGLE_CONFIG )
             set( tsan_defs "-fsanitize=thread" )
 
             add_executable(test-sharq-parser-tsan test-sharq-parser.cpp )
-            add_dependencies(test-sharq-parser-tsan RE2 sharq-tsan)
+            add_dependencies(test-sharq-parser-tsan sharq-tsan)
             target_include_directories(test-sharq-parser-tsan PUBLIC ${LOCAL_INCDIR} ../../../tools/loaders/sharq)
             target_compile_options( test-sharq-parser-tsan PRIVATE ${tsan_defs} )
             target_link_libraries(test-sharq-parser-tsan ${CXX_FILESYSTEM_LIBRARIES} ZLIB::ZLIB ${COMMON_LINK_LIBRARIES} ${COMMON_LIBS_READ} ${BZIP2_LIBRARIES} ${RE2_STATIC_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
@@ -208,4 +208,4 @@ if( SINGLE_CONFIG )
 
     endif()
 
-endif()
\ No newline at end of file
+endif()
