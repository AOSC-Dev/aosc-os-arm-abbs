abinfo "Copying build directories for PC BIOS/EFI32 targets ..."
cp -rv "$SRCDIR"/{grub-${__GRUBVER},build-efi32}

cd "$SRCDIR"/grub-${__GRUBVER}

abinfo "Configuring GRUB for PC BIOS ..."
./configure \
    --with-platform=pc \
    --target=i386 \
    --disable-efiemu \
    --disable-mm-debug \
    --disable-nls \
    --disable-device-mapper \
    --disable-cache-stats \
    --disable-boot-time \
    --disable-grub-mkfont \
    --disable-grub-mount \
    --disable-liblzma \
    --disable-grub-themes \
    --prefix=/usr \
    --bindir=/usr/bin \
    --sbindir=/usr/bin \
    --mandir=/usr/share/man \
    --infodir=/usr/share/info \
    --datarootdir=/usr/share \
    --sysconfdir=/etc \
    --program-prefix= \
    --with-bootdir=/boot \
    --with-grubdir=grub \
    --enable-silent-rules \
    --enable-build-id \
    --disable-rpm-sort

abinfo "Building GRUB for PC BIOS ..."
make

abinfo "Installing GRUB for PC BIOS ..."
make install \
    DESTDIR="$PKGDIR" \
    bashcompletiondir="/usr/share/bash-completion/completions"

abinfo "Installing pre-generated GRUB fonts ..."
cp -v "$SRCDIR"/*.pf2 \
    "$PKGDIR"/usr/share/grub/


cd "$SRCDIR"/build-efi32

abinfo "Configuring GRUB for EFI32 ..."
./configure \
    --with-platform=efi \
    --target=i386 \
    --disable-efiemu \
    --disable-mm-debug \
    --disable-nls \
    --disable-device-mapper \
    --disable-cache-stats \
    --disable-boot-time \
    --disable-grub-mkfont \
    --disable-grub-mount \
    --prefix=/usr \
    --bindir=/usr/bin \
    --sbindir=/usr/bin \
    --mandir=/usr/share/man \
    --infodir=/usr/share/info \
    --datarootdir=/usr/share \
    --sysconfdir=/etc \
    --program-prefix= \
    --with-bootdir=/boot \
    --with-grubdir=grub \
    --disable-rpm-sort

abinfo "Building GRUB for EFI32 ..."
make

abinfo "Installing GRUB for EFI32 ..."
make install \
    DESTDIR="$PKGDIR" \
    bashcompletiondir="/usr/share/bash-completion/completions"

abinfo "Removing extraneous files ..."
rm -fv \
    "$PKGDIR"/usr/lib/grub/i386-efi/{*.{module,image},kernel.exec,gdb_grub,gmodule.pl}
