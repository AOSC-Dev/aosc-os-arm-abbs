From 55868fa34adb66d47990379318268fd463fdb850 Mon Sep 17 00:00:00 2001
From: Mingcong Bai <jeffbai@aosc.io>
Date: Thu, 5 Dec 2024 16:01:03 +0800
Subject: [PATCH 183/274] AOSCOS: drm: radeon: feed driver_for_each_device()
 into an error return

The result from `driver_for_each_device()' is not used in the function, so
feed the return value into `err' and print an error in case any of the two
DPMS handler methods fail.

Fixes: "AOSCOS: MIPS: Loongson: Add a hook to turn on/off DPMS when Fn+F7 is pressed"
Signed-off-by: Mingcong Bai <jeffbai@aosc.io>

Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/gpu/drm/radeon/radeon_drv.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/radeon/radeon_drv.c b/drivers/gpu/drm/radeon/radeon_drv.c
index 2e852e35a10c..837a880a7c7b 100644
--- a/drivers/gpu/drm/radeon/radeon_drv.c
+++ b/drivers/gpu/drm/radeon/radeon_drv.c
@@ -639,20 +639,28 @@ static int radeon_lvds_dpms_callback(struct device *dev, void *arg)
 
 void radeon_lvds_dpms_off(void)
 {
+	int err;
 	int on = 0;
 	struct device_driver *drv;
 
 	drv = driver_find("radeon", &pci_bus_type);
-	driver_for_each_device(drv, NULL, &on, radeon_lvds_dpms_callback);
+	err = driver_for_each_device(drv, NULL, &on, radeon_lvds_dpms_callback);
+
+	if (err)
+		pr_err("radeon: failed to disable DPMS: %d\n", err);
 }
 
 void radeon_lvds_dpms_on(void)
 {
+	int err;
 	int on = 1;
 	struct device_driver *drv;
 
 	drv = driver_find("radeon", &pci_bus_type);
-	driver_for_each_device(drv, NULL, &on, radeon_lvds_dpms_callback);
+	err = driver_for_each_device(drv, NULL, &on, radeon_lvds_dpms_callback);
+
+	if (err)
+		pr_err("radeon: failed to enable DPMS: %d\n", err);
 }
 
 static int __init radeon_module_init(void)
-- 
2.47.1

