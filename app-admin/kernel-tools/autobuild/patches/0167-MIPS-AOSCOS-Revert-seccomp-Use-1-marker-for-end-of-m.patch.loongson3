From 49b1ae1773ec5ed203ef566839f92c316cd0421d Mon Sep 17 00:00:00 2001
From: Kexy Biscuit <kexybiscuit@aosc.io>
Date: Tue, 10 Dec 2024 22:59:25 +0800
Subject: [PATCH 167/167] MIPS: AOSCOS: Revert "seccomp: Use -1 marker for end
 of mode 1 syscall list"

This reverts commit fe4bfff86ec54773df3db79e8112e3b0f820c799.

Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 arch/mips/include/asm/seccomp.h |  4 ++--
 include/asm-generic/seccomp.h   |  2 +-
 kernel/seccomp.c                | 10 +++++-----
 3 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/arch/mips/include/asm/seccomp.h b/arch/mips/include/asm/seccomp.h
index aa809589a181..e383d7e27b93 100644
--- a/arch/mips/include/asm/seccomp.h
+++ b/arch/mips/include/asm/seccomp.h
@@ -9,12 +9,12 @@ static inline const int *get_compat_mode1_syscalls(void)
 	static const int syscalls_O32[] = {
 		__NR_O32_Linux + 3, __NR_O32_Linux + 4,
 		__NR_O32_Linux + 1, __NR_O32_Linux + 193,
-		-1, /* negative terminated */
+		0, /* null terminated */
 	};
 	static const int syscalls_N32[] = {
 		__NR_N32_Linux + 0, __NR_N32_Linux + 1,
 		__NR_N32_Linux + 58, __NR_N32_Linux + 211,
-		-1, /* negative terminated */
+		0, /* null terminated */
 	};
 
 	if (IS_ENABLED(CONFIG_MIPS32_O32) && test_thread_flag(TIF_32BIT_REGS))
diff --git a/include/asm-generic/seccomp.h b/include/asm-generic/seccomp.h
index 6b6f42bc58f9..1321ac7821d7 100644
--- a/include/asm-generic/seccomp.h
+++ b/include/asm-generic/seccomp.h
@@ -33,7 +33,7 @@ static inline const int *get_compat_mode1_syscalls(void)
 	static const int mode1_syscalls_32[] = {
 		__NR_seccomp_read_32, __NR_seccomp_write_32,
 		__NR_seccomp_exit_32, __NR_seccomp_sigreturn_32,
-		-1, /* negative terminated */
+		0, /* null terminated */
 	};
 	return mode1_syscalls_32;
 }
diff --git a/kernel/seccomp.c b/kernel/seccomp.c
index 385d48293a5f..f7031d89d6a7 100644
--- a/kernel/seccomp.c
+++ b/kernel/seccomp.c
@@ -1023,20 +1023,20 @@ static inline void seccomp_log(unsigned long syscall, long signr, u32 action,
  */
 static const int mode1_syscalls[] = {
 	__NR_seccomp_read, __NR_seccomp_write, __NR_seccomp_exit, __NR_seccomp_sigreturn,
-	-1, /* negative terminated */
+	0, /* null terminated */
 };
 
 static void __secure_computing_strict(int this_syscall)
 {
-	const int *allowed_syscalls = mode1_syscalls;
+	const int *syscall_whitelist = mode1_syscalls;
 #ifdef CONFIG_COMPAT
 	if (in_compat_syscall())
-		allowed_syscalls = get_compat_mode1_syscalls();
+		syscall_whitelist = get_compat_mode1_syscalls();
 #endif
 	do {
-		if (*allowed_syscalls == this_syscall)
+		if (*syscall_whitelist == this_syscall)
 			return;
-	} while (*++allowed_syscalls != -1);
+	} while (*++syscall_whitelist);
 
 #ifdef SECCOMP_DEBUG
 	dump_stack();
-- 
2.47.1

