From 9e746abf44a5905d75b834dfbb14cc93bd436fc9 Mon Sep 17 00:00:00 2001
From: Mingcong Bai <jeffbai@aosc.io>
Date: Mon, 27 Jan 2025 04:58:49 +0800
Subject: [PATCH 5/5] FROMLIST: feat: decompress kernel modules and firmware
 before final compression

Decompress all kernel modules and firmware (if compressed), this allows
for better compression ratio as we make the compressed initramfs.

This may save over 10MiB post-XZ.

Link: https://github.com/dracut-ng/dracut-ng/pull/1176
Signed-off-by: Mingcong Bai <jeffbai@aosc.io>
---
 dracut-init.sh | 48 ++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 48 insertions(+)

diff --git a/dracut-init.sh b/dracut-init.sh
index 84dbda24..cd620377 100755
--- a/dracut-init.sh
+++ b/dracut-init.sh
@@ -1093,6 +1093,54 @@ dracut_kernel_post() {
         fi
     fi
 
+    # Check for the necessary if(1) command for post-processing.
+    if ! find_binary find &> /dev/null; then
+        derror "Will not process kernel modules and firmware as find(1) is not available!"
+        return 1
+    fi
+
+    # Check for necessary compression utilities.
+    for cmd in gzip xz zstd; do
+        if ! find_binary "$cmd" &> /dev/null; then
+            derror "Will not process kernel modules and firmware compressed with '$cmd' as the command is not available!"
+            return 1
+        fi
+    done
+
+    # Decompress all firmware and module data for more optimal final
+    # compression ratio.
+    for kerndir in "${dstdir}/lib/firmware" \
+        "${dstdir}/lib/modules/$kernel"; do
+        [ -d "$kerndir" ] && find "$kerndir" -type f -print0 \
+            | while read -r -d $'\0' kernfile; do
+                case "$kernfile" in
+                    *.gz)
+                        ddebug "Decompressing gzipped kernel module/firmware: $kernfile ..."
+                        gzip -d "$kernfile"
+                        ;;
+                    *.xz)
+                        ddebug "Decompressing xz-compressed kernel module/firmware: $kernfile ..."
+                        xz -d "$kernfile"
+                        ;;
+                    *.zst)
+                        ddebug "Decompressing zstd-compressed kernel module/firmware: $kernfile ..."
+                        zstd -q --rm -d "$kernfile"
+                        ;;
+                esac
+            done
+    done
+
+    # Fixup symlinks to compressed firmware.
+    [ -d "${dstdir}/lib/firmware" ] && find "${dstdir}/lib/firmware" \
+        \( -name '*.gz' -o -name '*.xz' -o -name '*.zst' \) \
+        -type l -print0 \
+        | while read -r -d $'\0' fwlink; do
+            ddebug "Fixing up decompressed firmware: $fwlink ..."
+            fwtarget=$(readlink "$fwlink")
+            rm "$fwlink"
+            ln -s "${fwtarget%.*}" "${fwlink%.*}" && break
+        done
+
     for _f in modules.builtin modules.builtin.alias modules.builtin.modinfo modules.order; do
         [[ -e $srcmods/$_f ]] && inst_simple "$srcmods/$_f" "/lib/modules/$kernel/$_f"
     done
-- 
2.48.1

