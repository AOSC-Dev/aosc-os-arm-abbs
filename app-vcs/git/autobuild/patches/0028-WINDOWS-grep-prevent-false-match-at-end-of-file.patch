From ce7bc0c6ec5169c5df68d87b6ba68bee27e782b7 Mon Sep 17 00:00:00 2001
From: Jeff King <peff@peff.net>
Date: Mon, 13 Jan 2025 01:26:01 -0500
Subject: [PATCH 28/28] WINDOWS: grep: prevent `^$` false match at end of file

In some implementations, `regexec_buf()` assumes that it is fed lines;
Without `REG_NOTEOL` it thinks the end of the buffer is the end of a
line. Which makes sense, but trips up this case because we are not
feeding lines, but rather a whole buffer. So the final newline is not
the start of an empty line, but the true end of the buffer.

This causes an interesting bug:

  $ echo content >file.txt
  $ git grep --no-index -n '^$' file.txt
  file.txt:2:

This bug is fixed by making the end of the buffer consistently the end
of the final line.

The patch was applied from
https://lore.kernel.org/git/20250113062601.GD767856@coredump.intra.peff.net/

Reported-by: Olly Betts <olly@survex.com>
Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

Link: https://github.com/git-for-windows/git/commit/b7a9905f756b42aa4d2bafc07c489fa69e4fffca
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 grep.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/grep.c b/grep.c
index 4e155ee9e..c4bb9f108 100644
--- a/grep.c
+++ b/grep.c
@@ -1646,6 +1646,8 @@ static int grep_source_1(struct grep_opt *opt, struct grep_source *gs, int colle
 
 	bol = gs->buf;
 	left = gs->size;
+	if (left && gs->buf[left-1] == '\n')
+		left--;
 	while (left) {
 		const char *eol;
 		int hit;
-- 
2.48.1

