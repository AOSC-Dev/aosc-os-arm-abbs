abinfo "Symlinking Chromium build modules ..."
ln -sv "$SRCDIR"/../build \
    "$SRCDIR"/build

for i in abseil-cpp icu zlib; do
    abinfo "Symlinking $i sources ..."
    ln -sv "$SRCDIR"/../$i \
        "$SRCDIR"/third_party/$i
done

abinfo "AUR: Debundling ICU ..."
mkdir -pv "$SRCDIR"/third_party/icu
ln -sfv "$SRCDIR"/build/linux/unbundle/icu.gn \
    "$SRCDIR"/third_party/icu/BUILD.gn

mkdir -pv "$SRCDIR"/tools/generate_shim_headers/
curl https://chromium.googlesource.com/chromium/src/+/master/tools/generate_shim_headers/generate_shim_headers.py?format=TEXT \
    | base64 --decode > "$SRCDIR"/tools/generate_shim_headers/generate_shim_headers.py

abinfo "Creating gclient_args.gni ..."
touch "$SRCDIR"/build/config/gclient_args.gni

abinfo "AUR: Excluding test fonts from build ..."
sed -e '/"\/\/third_party\/test_fonts",/s/^/#/g' \
    -i "$SRCDIR"/testing/BUILD.gn

if [[ "${CROSS:-$ARCH}" = "arm64" ]]; then
    abinfo "Creating symlinks for AArch64/arm64 toolchain ..."
    ln -sv /usr/bin/gcc "$SRCDIR"/aarch64-linux-gnu-gcc
    ln -sv /usr/bin/ld.bfd "$SRCDIR"/aarch64-linux-gnu-ld
    ln -sv aarch64-linux-gnu-ld "$SRCDIR"/ld
    ln -sv /usr/bin/clang "$SRCDIR"/aarch64-linux-gnu-clang
    ln -sv /usr/bin/clang++ "$SRCDIR"/aarch64-linux-gnu-clang++
    ln -sv /usr/bin/g++ "$SRCDIR"/aarch64-linux-gnu-g++
    ln -sv /usr/bin/ar "$SRCDIR"/aarch64-linux-gnu-ar
    ln -sv /usr/bin/as "$SRCDIR"/aarch64-linux-gnu-as
    ln -sv /usr/bin/nm "$SRCDIR"/aarch64-linux-gnu-nm
    ln -sv /usr/bin/readelf "$SRCDIR"/aarch64-linux-gnu-readelf
    export PATH="$SRCDIR:$PATH"

    abinfo "Tweaking compiler flags for AArch64/arm64 ..."
    export CFLAGS="${CFLAGS} -march=armv8-a+crc+crypto+memtag -Os"
    export CXXFLAGS="${CXXFLAGS} -march=armv8-a+crc+crypto+memtag -Os"
fi
