From 4fa94918c2cf572dcaf61ca07016f3b5c231c14c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Achard?= <remiachard@gmail.com>
Date: Thu, 24 Mar 2022 18:33:32 +0000
Subject: [PATCH] Minor build and CI fixes (#1599)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

* Build and CI fix

Signed-off-by: Rémi Achard <remiachard@gmail.com>

* Make OpenColorIO_SKIP_IMPORTS public

Signed-off-by: Rémi Achard <remiachard@gmail.com>

* Avoid exporting header only libs in static builds

Signed-off-by: Rémi Achard <remiachard@gmail.com>

* Fix cpu unit test linkage

Signed-off-by: Rémi Achard <remiachard@gmail.com>

* Explain the look syntax fallback

Signed-off-by: Rémi Achard <remiachard@gmail.com>

* Fix typos

Signed-off-by: Rémi Achard <remiachard@gmail.com>

* Improve OFX building documentation

Signed-off-by: Rémi Achard <remiachard@gmail.com>
---
 .github/workflows/analysis_workflow.yml   | 50 ++++++++++--------
 .github/workflows/wheel_workflow.yml      |  2 +-
 docs/quick_start/installation.rst         | 12 ++++-
 include/OpenColorIO/OpenColorABI.h.in     |  2 +-
 share/cmake/projects/Buildlcms2.cmake     |  2 +
 share/cmake/projects/Buildpystring.cmake  |  2 +
 src/OpenColorIO/CMakeLists.txt            |  8 +--
 src/OpenColorIO/FileRules.cpp             |  1 +
 src/apps/ociobakelut/CMakeLists.txt       |  7 ---
 src/apps/ociocheck/CMakeLists.txt         |  7 ---
 src/apps/ociochecklut/CMakeLists.txt      |  7 ---
 src/apps/ocioconvert/CMakeLists.txt       |  7 ---
 src/apps/ociodisplay/CMakeLists.txt       |  7 ---
 src/apps/ociolutimage/CMakeLists.txt      |  7 ---
 src/apps/ociomakeclf/CMakeLists.txt       |  7 ---
 src/apps/ocioperf/CMakeLists.txt          |  7 ---
 src/apps/ociowrite/CMakeLists.txt         |  7 ---
 src/bindings/python/CMakeLists.txt        |  2 +-
 src/libutils/oglapphelpers/CMakeLists.txt |  2 +-
 src/libutils/oiiohelpers/CMakeLists.txt   |  2 +-
 tests/cpu/Config_tests.cpp                | 64 +++++++++++++++++++++++
 tests/gpu/CMakeLists.txt                  |  7 ---
 tests/osl/CMakeLists.txt                  |  7 ---
 tests/utils/CMakeLists.txt                |  5 --
 vendor/openfx/CMakeLists.txt              |  7 ---
 25 files changed, 117 insertions(+), 121 deletions(-)

diff --git a/docs/quick_start/installation.rst b/docs/quick_start/installation.rst
index 7a356c1bc..07dcf5883 100644
--- a/docs/quick_start/installation.rst
+++ b/docs/quick_start/installation.rst
@@ -435,5 +435,13 @@ Note: For other user facing environment variables, see :ref:`using_env_vars`.
 
     When building the OCIO OpenFX plugins, include the installed 
     ``OpenColorIO/lib`` directory (where ``OpenColorIO.ofx.bundle`` is located) 
-    in this path. The path to a shared OpenColorIO lib (*.so, *.dll, *.dylib) 
-    should also be present on ``PATH``.
+    in this path.
+
+    It is recommended to build OFX plugins in static mode 
+    (``BUILD_SHARED_LIBS=OFF``) to avoid any issue loading the OpenColorIO
+    library from the plugin once it has been moved. Otherwise, please make sure
+    the shared OpenColorIO lib (*.so, *.dll, *.dylib) is visible from the
+    plugin by mean of ``PATH``, ``LD_LIBRARY_PATH`` or ``DYLD_LIBRARY_PATH``
+    for Windows, Linux and macOS respectively. For systems that supports it,
+    it is also possible to edit the RPATH of the plugin to add the location of
+    the shared OpenColorIO lib.
diff --git a/include/OpenColorIO/OpenColorABI.h.in b/include/OpenColorIO/OpenColorABI.h.in
index e3cc6b300..93714f761 100644
--- a/include/OpenColorIO/OpenColorABI.h.in
+++ b/include/OpenColorIO/OpenColorABI.h.in
@@ -47,7 +47,7 @@
 
 // If supported, define OCIOEXPORT, OCIOHIDDEN
 // (used to choose which symbols to export from OpenColorIO)
-#if defined(_WIN32)
+#if defined(_WIN32) || defined(__CYGWIN__)
     // Windows requires you to export from the main library and then import in any others
     // only when compiling a dynamic library (i.e. DLL)
     #ifndef OpenColorIO_SKIP_IMPORTS
diff --git a/share/cmake/projects/Buildlcms2.cmake b/share/cmake/projects/Buildlcms2.cmake
index 0f05bb72d..ba3c7d095 100644
--- a/share/cmake/projects/Buildlcms2.cmake
+++ b/share/cmake/projects/Buildlcms2.cmake
@@ -5,6 +5,8 @@ project(lcms2)
 
 cmake_minimum_required(VERSION 3.10)
 
+include(GNUInstallDirs)
+
 include_directories(include)
 
 file(GLOB HEADERS "include/*.h")
diff --git a/share/cmake/projects/Buildpystring.cmake b/share/cmake/projects/Buildpystring.cmake
index e7daf8f62..e580aa08e 100644
--- a/share/cmake/projects/Buildpystring.cmake
+++ b/share/cmake/projects/Buildpystring.cmake
@@ -5,6 +5,8 @@ project(pystring)
 
 cmake_minimum_required(VERSION 3.10)
 
+include(GNUInstallDirs)
+
 set(HEADERS
     pystring.h
 )
diff --git a/src/OpenColorIO/CMakeLists.txt b/src/OpenColorIO/CMakeLists.txt
index 919504673..34515210c 100755
--- a/src/OpenColorIO/CMakeLists.txt
+++ b/src/OpenColorIO/CMakeLists.txt
@@ -226,9 +226,9 @@ target_link_libraries(OpenColorIO
         expat::expat
         ${OCIO_HALF_LIB}
         pystring::pystring
-        sampleicc::sampleicc
-        utils::from_chars
-        utils::strings
+        "$<BUILD_INTERFACE:sampleicc::sampleicc>"
+        "$<BUILD_INTERFACE:utils::from_chars>"
+        "$<BUILD_INTERFACE:utils::strings>"
         yaml-cpp
 )
 
@@ -242,7 +242,7 @@ endif()
 
 if(NOT BUILD_SHARED_LIBS)
     target_compile_definitions(OpenColorIO
-        PRIVATE
+        PUBLIC
             OpenColorIO_SKIP_IMPORTS
     )
 else()
diff --git a/src/OpenColorIO/FileRules.cpp b/src/OpenColorIO/FileRules.cpp
index 794dfdbee..61a5e0f15 100644
--- a/src/OpenColorIO/FileRules.cpp
+++ b/src/OpenColorIO/FileRules.cpp
@@ -3,6 +3,7 @@
 
 #include <algorithm>
 #include <cctype>
+#include <cstring>
 #include <map>
 #include <regex>
 #include <sstream>
diff --git a/src/apps/ociobakelut/CMakeLists.txt b/src/apps/ociobakelut/CMakeLists.txt
index b5a57e0a9..a50e87e48 100755
--- a/src/apps/ociobakelut/CMakeLists.txt
+++ b/src/apps/ociobakelut/CMakeLists.txt
@@ -8,13 +8,6 @@ set(SOURCES
 
 add_executable(ociobakelut ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-    target_compile_definitions(ociobakelut
-        PRIVATE
-            OpenColorIO_SKIP_IMPORTS
-    )
-endif()
-
 if(MSVC)
     set(PLATFORM_COMPILE_FLAGS "${PLATFORM_COMPILE_FLAGS} /wd4996")
 endif()
diff --git a/src/apps/ociocheck/CMakeLists.txt b/src/apps/ociocheck/CMakeLists.txt
index d3700699d..0307849c1 100755
--- a/src/apps/ociocheck/CMakeLists.txt
+++ b/src/apps/ociocheck/CMakeLists.txt
@@ -7,13 +7,6 @@ set(SOURCES
 
 add_executable(ociocheck ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-    target_compile_definitions(ociocheck
-        PRIVATE
-        OpenColorIO_SKIP_IMPORTS
-    )
-endif()
-
 if(MSVC)
     set(PLATFORM_COMPILE_FLAGS "${PLATFORM_COMPILE_FLAGS} /wd4996")
 endif()
diff --git a/src/apps/ociochecklut/CMakeLists.txt b/src/apps/ociochecklut/CMakeLists.txt
index 52514c0cc..e676d3707 100644
--- a/src/apps/ociochecklut/CMakeLists.txt
+++ b/src/apps/ociochecklut/CMakeLists.txt
@@ -14,13 +14,6 @@ set(SOURCES
 
 add_executable(ociochecklut ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-    target_compile_definitions(ociochecklut
-        PRIVATE
-        OpenColorIO_SKIP_IMPORTS
-    )
-endif()
-
 if(MSVC)
     set(PLATFORM_COMPILE_FLAGS "${PLATFORM_COMPILE_FLAGS} /wd4996")
 endif()
diff --git a/src/apps/ocioconvert/CMakeLists.txt b/src/apps/ocioconvert/CMakeLists.txt
index 2269286af..ecbaef604 100755
--- a/src/apps/ocioconvert/CMakeLists.txt
+++ b/src/apps/ocioconvert/CMakeLists.txt
@@ -14,13 +14,6 @@ set(SOURCES
 
 add_executable(ocioconvert ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-    target_compile_definitions(ocioconvert
-        PRIVATE
-            OpenColorIO_SKIP_IMPORTS
-    )
-endif()
-
 set_target_properties(ocioconvert PROPERTIES 
     COMPILE_FLAGS "${PLATFORM_COMPILE_FLAGS}")
 
diff --git a/src/apps/ociodisplay/CMakeLists.txt b/src/apps/ociodisplay/CMakeLists.txt
index f3ffb1f8d..716cb491d 100755
--- a/src/apps/ociodisplay/CMakeLists.txt
+++ b/src/apps/ociodisplay/CMakeLists.txt
@@ -12,13 +12,6 @@ set(SOURCES
 
 add_executable(ociodisplay ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-    target_compile_definitions(ociodisplay
-        PRIVATE
-            OpenColorIO_SKIP_IMPORTS
-    )
-endif()
-
 set(CUSTOM_COMPILE_FLAGS ${PLATFORM_COMPILE_FLAGS})
 if(APPLE)
     # Mute the deprecated warning for some GLUT methods.
diff --git a/src/apps/ociolutimage/CMakeLists.txt b/src/apps/ociolutimage/CMakeLists.txt
index c21a632fe..0fcd72ef6 100755
--- a/src/apps/ociolutimage/CMakeLists.txt
+++ b/src/apps/ociolutimage/CMakeLists.txt
@@ -7,13 +7,6 @@ set(SOURCES
 
 add_executable(ociolutimage ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-	target_compile_definitions(ociolutimage
-		PRIVATE
-			OpenColorIO_SKIP_IMPORTS
-	)
-endif()
-
 set_target_properties(ociolutimage PROPERTIES
 	COMPILE_FLAGS "${PLATFORM_COMPILE_FLAGS}")
 
diff --git a/src/apps/ociomakeclf/CMakeLists.txt b/src/apps/ociomakeclf/CMakeLists.txt
index 752b26345..e69036b05 100644
--- a/src/apps/ociomakeclf/CMakeLists.txt
+++ b/src/apps/ociomakeclf/CMakeLists.txt
@@ -7,13 +7,6 @@ set(SOURCES
 
 add_executable(ociomakeclf ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-    target_compile_definitions(ociomakeclf
-        PRIVATE
-        OpenColorIO_SKIP_IMPORTS
-    )
-endif()
-
 if(MSVC)
     set(PLATFORM_COMPILE_FLAGS "${PLATFORM_COMPILE_FLAGS} /wd4996")
 endif()
diff --git a/src/apps/ocioperf/CMakeLists.txt b/src/apps/ocioperf/CMakeLists.txt
index a141c4ed5..a374f5d78 100644
--- a/src/apps/ocioperf/CMakeLists.txt
+++ b/src/apps/ocioperf/CMakeLists.txt
@@ -7,13 +7,6 @@ set(SOURCES
 
 add_executable(ocioperf ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-    target_compile_definitions(ocioperf
-        PRIVATE
-            OpenColorIO_SKIP_IMPORTS
-    )
-endif()
-
 set_target_properties(ocioperf PROPERTIES
     COMPILE_FLAGS "${PLATFORM_COMPILE_FLAGS}")
 
diff --git a/src/apps/ociowrite/CMakeLists.txt b/src/apps/ociowrite/CMakeLists.txt
index 786ce57be..8c9c1729c 100644
--- a/src/apps/ociowrite/CMakeLists.txt
+++ b/src/apps/ociowrite/CMakeLists.txt
@@ -7,13 +7,6 @@ set(SOURCES
 
 add_executable(ociowrite ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-    target_compile_definitions(ociowrite
-        PRIVATE
-            OpenColorIO_SKIP_IMPORTS
-    )
-endif()
-
 set_target_properties(ociowrite PROPERTIES 
     COMPILE_FLAGS "${PLATFORM_COMPILE_FLAGS}")
 
diff --git a/src/bindings/python/CMakeLists.txt b/src/bindings/python/CMakeLists.txt
index 1109357b2..041c670de 100644
--- a/src/bindings/python/CMakeLists.txt
+++ b/src/bindings/python/CMakeLists.txt
@@ -154,7 +154,7 @@ set_target_properties(PyOpenColorIO
 
 if(NOT BUILD_SHARED_LIBS)
 	target_compile_definitions(PyOpenColorIO
-		PRIVATE
+		PUBLIC
 			OpenColorIO_SKIP_IMPORTS
 	)
 endif()
diff --git a/src/libutils/oglapphelpers/CMakeLists.txt b/src/libutils/oglapphelpers/CMakeLists.txt
index 00dfbc8eb..d5eeb4d6b 100644
--- a/src/libutils/oglapphelpers/CMakeLists.txt
+++ b/src/libutils/oglapphelpers/CMakeLists.txt
@@ -37,7 +37,7 @@ set_target_properties(oglapphelpers PROPERTIES OUTPUT_NAME OpenColorIOoglapphelp
 
 if(NOT BUILD_SHARED_LIBS)
     target_compile_definitions(oglapphelpers
-        PRIVATE
+        PUBLIC
             OpenColorIO_SKIP_IMPORTS
     )
 endif()
diff --git a/src/libutils/oiiohelpers/CMakeLists.txt b/src/libutils/oiiohelpers/CMakeLists.txt
index 6f0661c21..eec50f082 100644
--- a/src/libutils/oiiohelpers/CMakeLists.txt
+++ b/src/libutils/oiiohelpers/CMakeLists.txt
@@ -11,7 +11,7 @@ set_target_properties(oiiohelpers PROPERTIES OUTPUT_NAME OpenColorIOoiiohelpers)
 
 if(NOT BUILD_SHARED_LIBS)
     target_compile_definitions(oiiohelpers
-        PRIVATE
+        PUBLIC
             OpenColorIO_SKIP_IMPORTS
     )
 endif()
diff --git a/tests/cpu/Config_tests.cpp b/tests/cpu/Config_tests.cpp
index 429227d7d..6fdd8bb35 100644
--- a/tests/cpu/Config_tests.cpp
+++ b/tests/cpu/Config_tests.cpp
@@ -8676,3 +8676,67 @@ OCIO_ADD_TEST(Config, look_is_noop)
         OCIO_CHECK_ASSERT(proc->isNoOp());
     }
 }
+
+OCIO_ADD_TEST(Config, look_fallback)
+{
+    // Test that the look fallback syntax works for look with missing file.
+    // The fallback syntax allow to specify looks to try in order and use the
+    // first valid one. When the syntax "my_look | " is used, the fallback
+    // is empty and there will be no look applied (no-op) if my_look is invalid.
+    // This may happen if my_look relies on a missing environment variable.
+
+    {
+        static const std::string CONFIG =
+            "ocio_profile_version: 1\n"
+            "\n"
+            "search_path: " + OCIO::GetTestFilesDir() + "\n"
+            "\n"
+            "roles:\n"
+            "  scene_linear: cs\n"
+            "\n"
+            "displays:\n"
+            "  disp1:\n"
+            "    - !<View>\n"
+            "      name: view1\n"
+            "      colorspace: cs\n"
+            "      looks: missing_file_look | \n"
+            "\n"
+            "looks:\n"
+            "  - !<Look>\n"
+            "    name: missing_file_look\n"
+            "    process_space: cs\n"
+            "    transform: !<FileTransform> {src: \"${LOOK_CDL}.cc\"}\n"
+            "\n"
+            "colorspaces:\n"
+            "  - !<ColorSpace>\n"
+            "    name: cs\n"
+            "\n";
+
+        // Check that the look is correctly used when file is present.
+
+        OCIO::Platform::Setenv("LOOK_CDL", "cdl_test1");
+
+        std::istringstream iss;
+        iss.str(CONFIG);
+
+        OCIO::ConstConfigRcPtr config;
+
+        OCIO_CHECK_NO_THROW(config = OCIO::Config::CreateFromStream(iss));
+        OCIO_CHECK_NO_THROW(config->validate());
+
+        OCIO::ConstProcessorRcPtr proc;
+        OCIO_CHECK_NO_THROW(proc = config->getProcessor("cs", "disp1", "view1", OCIO::TRANSFORM_DIR_FORWARD));
+        OCIO_CHECK_ASSERT(!proc->isNoOp());
+
+        // Now remove the variable pointing to the look file and check that we fallback to a no-op.
+
+        OCIO::Platform::Unsetenv("LOOK_CDL");
+
+        iss.str(CONFIG);
+
+        OCIO_CHECK_NO_THROW(config = OCIO::Config::CreateFromStream(iss));
+
+        OCIO_CHECK_NO_THROW(proc = config->getProcessor("cs", "disp1", "view1", OCIO::TRANSFORM_DIR_FORWARD));
+        OCIO_CHECK_ASSERT(proc->isNoOp());
+    }
+}
diff --git a/tests/gpu/CMakeLists.txt b/tests/gpu/CMakeLists.txt
index aeeb66f7f..051abe72e 100644
--- a/tests/gpu/CMakeLists.txt
+++ b/tests/gpu/CMakeLists.txt
@@ -26,13 +26,6 @@ set(SOURCES
 
 add_executable(test_gpu_exec ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-	target_compile_definitions(test_gpu_exec
-		PRIVATE
-			OpenColorIO_SKIP_IMPORTS
-	)
-endif()
-
 if(OCIO_USE_SSE)
 	target_compile_definitions(test_gpu_exec
 		PRIVATE
diff --git a/tests/osl/CMakeLists.txt b/tests/osl/CMakeLists.txt
index 1d9454dac..6e2c107a8 100644
--- a/tests/osl/CMakeLists.txt
+++ b/tests/osl/CMakeLists.txt
@@ -18,13 +18,6 @@ set(SOURCES
 
 add_executable(test_osl_exec ${SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-    target_compile_definitions(test_osl_exec
-        PRIVATE
-            OpenColorIO_SKIP_IMPORTS
-    )
-endif()
-
 if(OCIO_USE_SSE)
     target_compile_definitions(test_osl_exec
         PRIVATE
diff --git a/tests/utils/CMakeLists.txt b/tests/utils/CMakeLists.txt
index 6ea38ca9d..9fc1e6b47 100644
--- a/tests/utils/CMakeLists.txt
+++ b/tests/utils/CMakeLists.txt
@@ -10,11 +10,6 @@ set(SOURCES
 
 add_executable(test_utils_exec ${SOURCES})
 
-target_compile_definitions(test_utils_exec
-    PRIVATE
-        OpenColorIO_SKIP_IMPORTS
-)
-
 target_link_libraries(test_utils_exec
     PRIVATE
         utils::strings
diff --git a/vendor/openfx/CMakeLists.txt b/vendor/openfx/CMakeLists.txt
index 87dbf2283..57e26253a 100644
--- a/vendor/openfx/CMakeLists.txt
+++ b/vendor/openfx/CMakeLists.txt
@@ -30,13 +30,6 @@ set(RESOURCES
 
 add_library(ofxplugin MODULE ${SOURCES} ${OFXS_SOURCES})
 
-if(NOT BUILD_SHARED_LIBS)
-    target_compile_definitions(ofxplugin
-        PRIVATE
-            OpenColorIO_SKIP_IMPORTS
-    )
-endif()
-
 # Disable known compiler warnings from OpenFX Support Library
 if(MSVC)
     set(PLATFORM_COMPILE_FLAGS "${PLATFORM_COMPILE_FLAGS} /wd4996 /wd4101")
