Description: spell fixes in code
Author: Mattia Rizzolo <mattia@debian.org>
Forwarded: https://sourceforge.net/p/podofo/mailman/podofo-users/thread/20170215175420.ecb4tagm3rz7wino%40mapreri.org/#msg35668073
Last-Update: 2017-02-15

--- a/src/doc/PdfAnnotation.cpp
+++ b/src/doc/PdfAnnotation.cpp
@@ -379,7 +379,7 @@
          m_eAnnotation != ePdfAnnotation_Underline &&
 	 m_eAnnotation != ePdfAnnotation_Squiggly  &&
 	 m_eAnnotation != ePdfAnnotation_StrikeOut )
-        PODOFO_RAISE_ERROR_INFO( ePdfError_InternalLogic, "Must be a text markup annotation (hilight, underline, squiggly or strikeout) to set quad points" );
+        PODOFO_RAISE_ERROR_INFO( ePdfError_InternalLogic, "Must be a text markup annotation (highlight, underline, squiggly or strikeout) to set quad points" );
 
     this->GetObject()->GetDictionary().AddKey( "QuadPoints", rQuadPoints );
 }
--- a/src/doc/PdfAnnotation.h
+++ b/src/doc/PdfAnnotation.h
@@ -302,7 +302,7 @@
  
     /** Get the quad points associated with the annotation (if appropriate).
      *  This array is used in text markup annotations to describe the
-     *  regions affected by the markup (i.e. the hilighted words, one
+     *  regions affected by the markup (i.e. the highlighted words, one
      *  quadrilateral per word)
      *
      *  \returns a PdfArray of 8xn numbers describing the
@@ -314,7 +314,7 @@
 
     /** Set the quad points associated with the annotation (if appropriate).
      *  This array is used in text markup annotations to describe the
-     *  regions affected by the markup (i.e. the hilighted words, one
+     *  regions affected by the markup (i.e. the highlighted words, one
      *  quadrilateral per word)
      *
      *  \param rQuadPoints a PdfArray of 8xn numbers describing the
--- a/tools/podofoencrypt/podofoencrypt.cpp
+++ b/tools/podofoencrypt/podofoencrypt.cpp
@@ -92,9 +92,9 @@
     printf("       -o <password> The required owner password\n");
     printf(" Permissions:\n");
     printf("       --print       Allow printing the document\n");
-    printf("       --edit        Allow modifying the document besides annotations, form fields or chaning pages\n");
+    printf("       --edit        Allow modifying the document besides annotations, form fields or changing pages\n");
     printf("       --copy        Allow text and graphic extraction\n");
-    printf("       --editnotes   Add or modify text annoations or form fields (if ePdfPermissions_Edit is set also allow to create interactive form fields including signature)\n");
+    printf("       --editnotes   Add or modify text annoations or form fields (if ePdfPermissions_Edit is set also allow the creation of interactive form fields including signature)\n");
     printf("       --fillandsign Fill in existing form or signature fields\n");
     printf("       --accessible  Extract text and graphics to support user with disabillities\n");
     printf("       --assemble    Assemble the document: insert, create, rotate delete pages or add bookmarks\n");
@@ -231,7 +231,7 @@
   }
 
 
-  printf("%s was sucessfully encrypted to: %s\n", pszInput, pszOutput );
+  printf("%s was successfully encrypted to: %s\n", pszInput, pszOutput );
   
   return 0;
 }
--- a/tools/podofoimgextract/podofoimgextract.cpp
+++ b/tools/podofoimgextract/podofoimgextract.cpp
@@ -60,7 +60,7 @@
 
   nNum = extractor.GetNumImagesExtracted();
 
-  printf("Extracted %i images sucessfully from the PDF file.\n", nNum );
+  printf("Extracted %i images successfully from the PDF file.\n", nNum );
   
   return 0;
 }
--- a/tools/podofouncompress/podofouncompress.cpp
+++ b/tools/podofouncompress/podofouncompress.cpp
@@ -67,7 +67,7 @@
       */
 
 
-  printf("%s was sucessfully uncompressed to: %s\n", pszInput, pszOutput );
+  printf("%s was successfully uncompressed to: %s\n", pszInput, pszOutput );
   
   return 0;
 }
