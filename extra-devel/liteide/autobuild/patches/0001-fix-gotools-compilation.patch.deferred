--- a/src/github.com/visualfc/gotools/debugflags/debugflags.go	2021-04-27 15:52:52.779277437 -0500
+++ b/src/github.com/visualfc/gotools/debugflags/debugflags.go	2021-04-27 15:53:16.380811693 -0500
@@ -22,7 +22,7 @@
 func runDebugFlags(cmd *command.Command, args []string) error {
 	var buildFlagsDefault string
 	if runtime.GOOS == "windows" {
-		ver, _ := goversion.Installed()
+		ver, _, _ := goversion.Installed()
 		if ver.Major > 0 && !ver.AfterOrEqual(goversion.GoVersion{1, 9, -1, 0, 0, ""}) {
 			// Work-around for https://github.com/golang/go/issues/13154
 			buildFlagsDefault = "-ldflags='-linkmode internal'"
@@ -42,7 +42,7 @@
 	// after go1.10 specifying -a is unnecessary because of the new caching strategy, but we should pass -gcflags=all=-N -l to have it applied to all packages
 	// see https://github.com/golang/go/commit/5993251c015dfa1e905bdf44bdb41572387edf90
 
-	ver, _ := goversion.Installed()
+	ver, _, _ := goversion.Installed()
 	var flags string
 	switch {
 	case ver.Major < 0 || ver.AfterOrEqual(goversion.GoVersion{1, 10, -1, 0, 0, ""}):
--- a/src/github.com/visualfc/gotools/godoc/godoc.go	2021-04-27 16:00:18.953493947 -0500
+++ b/src/github.com/visualfc/gotools/godoc/godoc.go	2021-04-27 16:00:33.701942879 -0500
@@ -26,7 +26,7 @@
 	if len(args) < 1 {
 		return nil
 	}
-	ver, _ := goversion.Installed()
+	ver, _, _ := goversion.Installed()
 	gocmd, err := exec.LookPath("go")
 	if err != nil {
 		return err
