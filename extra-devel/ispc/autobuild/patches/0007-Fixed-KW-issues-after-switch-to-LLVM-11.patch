From 99debf3801c0141cd7279dca428f28f98dd3f96a Mon Sep 17 00:00:00 2001
From: Arina Neshlyaeva <arina.neshlyaeva@intel.com>
Date: Sat, 6 Feb 2021 21:46:43 -0800
Subject: [PATCH] Fixed KW issues after switch to LLVM 11

---
 src/module.cpp | 1 +
 src/opt.cpp    | 4 ++++
 2 files changed, 5 insertions(+)

diff --git a/src/module.cpp b/src/module.cpp
index c8d0f0b5..33a5dd2e 100644
--- a/src/module.cpp
+++ b/src/module.cpp
@@ -2480,6 +2480,7 @@ static void lCreateDispatchFunction(llvm::Module *module, llvm::Function *setISA
     // Now we can load the system's ISA enumerant
 #if ISPC_LLVM_VERSION >= ISPC_LLVM_11_0
     llvm::PointerType *ptr_type = llvm::dyn_cast<llvm::PointerType>(systemBestISAPtr->getType());
+    Assert(ptr_type);
     llvm::Value *systemISA =
         new llvm::LoadInst(ptr_type->getPointerElementType(), systemBestISAPtr, "system_isa", bblock);
 #else
diff --git a/src/opt.cpp b/src/opt.cpp
index 3ff191a0..f8d12a82 100644
--- a/src/opt.cpp
+++ b/src/opt.cpp
@@ -2785,6 +2785,7 @@ static bool lGSToLoadStore(llvm::CallInst *callInst) {
 
             lCopyMetadata(ptr, callInst);
 #if ISPC_LLVM_VERSION >= ISPC_LLVM_11_0
+            Assert(llvm::isa<llvm::PointerType>(ptr->getType()));
             llvm::Value *scalarValue =
                 new llvm::LoadInst(llvm::dyn_cast<llvm::PointerType>(ptr->getType())->getPointerElementType(), ptr,
                                    callInst->getName(), callInst);
@@ -3107,6 +3108,7 @@ static bool lImproveMaskedLoad(llvm::CallInst *callInst, llvm::BasicBlock::itera
                     .valueOrOne(),
                 (llvm::Instruction *)NULL);
 #else // LLVM 11.0+
+            Assert(llvm::isa<llvm::PointerType>(ptr->getType()));
             load = new llvm::LoadInst(
                 llvm::dyn_cast<llvm::PointerType>(ptr->getType())->getPointerElementType(), ptr, callInst->getName(),
                 false /* not volatile */,
@@ -3462,6 +3464,7 @@ llvm::Value *lGEPAndLoad(llvm::Value *basePtr, int64_t offset, int align, llvm::
 #if ISPC_LLVM_VERSION < ISPC_LLVM_11_0
     return new llvm::LoadInst(ptr, "gather_load", false /* not volatile */, llvm::MaybeAlign(align), insertBefore);
 #else // LLVM 11.0+
+    Assert(llvm::isa<llvm::PointerType>(ptr->getType()));
     return new llvm::LoadInst(llvm::dyn_cast<llvm::PointerType>(ptr->getType())->getPointerElementType(), ptr,
                               "gather_load", false /* not volatile */, llvm::MaybeAlign(align).valueOrOne(),
                               insertBefore);
@@ -6638,6 +6641,7 @@ llvm::Instruction *FixAddressSpace::processSVMVectorLoad(llvm::Instruction *CI)
     ptr = new llvm::IntToPtrInst(ptr, llvm::PointerType::get(retType, 0), CI->getName() + "_inttoptr", CI);
     llvm::Instruction *loadInst = NULL;
 #if ISPC_LLVM_VERSION >= ISPC_LLVM_11_0
+    Assert(llvm::isa<llvm::PointerType>(ptr->getType()));
     loadInst = new llvm::LoadInst(llvm::dyn_cast<llvm::PointerType>(ptr->getType())->getPointerElementType(), ptr,
                                   CI->getName(), false /* not volatile */,
                                   llvm::MaybeAlign(g->target->getNativeVectorAlignment()).valueOrOne(),
-- 
2.30.0

