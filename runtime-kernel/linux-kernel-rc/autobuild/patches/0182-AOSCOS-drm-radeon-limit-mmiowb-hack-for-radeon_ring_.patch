From 11e6ea90ce6ca545626b227550eaa95a7618563c Mon Sep 17 00:00:00 2001
From: Mingcong Bai <jeffbai@aosc.io>
Date: Mon, 24 Feb 2025 14:01:03 +0800
Subject: [PATCH 182/299] AOSCOS: drm/radeon: limit mmiowb() hack for
 radeon_ring_commit() to MACH_LOONGSON64

As mentioned in the previous patch ("LOONGARCH64: FROMLIST: drm/radeon:
Call mmiowb() at the end of radeon_ring_commit()") that attempts to fix
improper removal of all `mmiowb()' calls in commit fb24ea52f78e ("drivers:
Remove explicit invocations of mmiowb()"), the the wptr needs to be more
effectively updated on weak ordering architectures such as LoongArch, as
the `radeon_ring_commit()' was protected by a mutex.

To quote Huacai Chen:

"The mmio in radeon_ring_commit() is protected by a mutex rather than a
spinlock, but in the mutex fastpath it behaves similar to spinlock and
need a mmiowb() to make sure the wptr is up-to-date for hardware."

From what could be seen in arch/, `mmiowb()' is only implemented for
loongarch, mips, powerpc, riscv64, s390, and sh. With regards to the
analysis above, this hack should technically be enabled for all the
aforementioned architecture/machine with PCI support.

However, according to our testing, this hack is only needed for LoongArch
and Loongson 3 (MIPS) platforms based on the 7A bridge chip.

Limit this hack to MACH_LOONGSON64 which matches this description to
free the previous patch from a .loongarch64 suffix in AOSC OS, easing
patchset maintenance.

Fixes: "FROMLIST: drm/radeon: Call mmiowb() at the end of radeon_ring_commit()"
Signed-off-by: Mingcong Bai <jeffbai@aosc.io>

Link: https://t.me/c/1109254909/768003
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/gpu/drm/radeon/radeon_ring.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/drivers/gpu/drm/radeon/radeon_ring.c b/drivers/gpu/drm/radeon/radeon_ring.c
index 346f0e49bb2e..92aa8e1364c3 100644
--- a/drivers/gpu/drm/radeon/radeon_ring.c
+++ b/drivers/gpu/drm/radeon/radeon_ring.c
@@ -185,7 +185,9 @@ void radeon_ring_commit(struct radeon_device *rdev, struct radeon_ring *ring,
 	if (hdp_flush && rdev->asic->mmio_hdp_flush)
 		rdev->asic->mmio_hdp_flush(rdev);
 	radeon_ring_set_wptr(rdev, ring);
+#if defined(CONFIG_MACH_LOONGSON64)
 	mmiowb(); /* Make sure wptr is up-to-date for hw */
+#endif
 }
 
 /**
-- 
2.48.1

