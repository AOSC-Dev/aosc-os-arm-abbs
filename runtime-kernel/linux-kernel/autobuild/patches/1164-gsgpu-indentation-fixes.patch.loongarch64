From d3a97210dae379cc0496d88384657fdb6a77ec33 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Tue, 24 Oct 2023 15:58:32 +0800
Subject: [PATCH] gsgpu: indentation fixes

---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_drv.c | 24 +++++++++++++-----------
 1 file changed, 13 insertions(+), 11 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_drv.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_drv.c
index ccf0ff21ab83..394b6da9dbd5 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_drv.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_drv.c
@@ -142,7 +142,8 @@ static struct gsgpu_dc *dc_construct(struct gsgpu_device *adev)
 	return dc;
 }
 
-bool dc_submit_timing_update(struct gsgpu_dc *dc, u32 link, struct dc_timing_info *timing)
+bool dc_submit_timing_update(struct gsgpu_dc *dc, u32 link,
+			     struct dc_timing_info *timing)
 {
 	if (IS_ERR_OR_NULL(dc) || (link >= dc->links))
 		return false;
@@ -150,7 +151,8 @@ bool dc_submit_timing_update(struct gsgpu_dc *dc, u32 link, struct dc_timing_inf
 	return dc_crtc_timing_set(dc->link_info[link].crtc, timing);
 }
 
-bool dc_submit_plane_update(struct gsgpu_dc *dc, u32 link, struct dc_plane_update *update)
+bool dc_submit_plane_update(struct gsgpu_dc *dc, u32 link,
+			    struct dc_plane_update *update)
 {
 	if (IS_ERR_OR_NULL(dc) || (link >= dc->links))
 		return false;
@@ -336,12 +338,12 @@ static void prepare_flip_isr(struct gsgpu_crtc *acrtc)
 	acrtc->base.state->event = NULL;
 
 	DRM_DEBUG_DRIVER("crtc:%d, pflip_stat:GSGPU_FLIP_SUBMITTED\n",
-						 acrtc->crtc_id);
+			 acrtc->crtc_id);
 }
 
 static void gsgpu_dc_do_flip(struct drm_crtc *crtc,
-			      struct drm_framebuffer *fb,
-			      uint32_t target)
+			     struct drm_framebuffer *fb,
+			     uint32_t target)
 {
 	unsigned long flags;
 	uint32_t target_vblank;
@@ -499,8 +501,7 @@ static void gsgpu_dc_commit_planes(struct drm_atomic_state *state,
 		struct drm_display_mode *mode = &pcrtc->mode;
 		uint64_t address;
 
-		struct gsgpu_framebuffer *afb =
-				to_gsgpu_framebuffer(modeset_fbs[0]);
+		struct gsgpu_framebuffer *afb = to_gsgpu_framebuffer(modeset_fbs[0]);
 
 		struct gsgpu_bo *bo = gem_to_gsgpu_bo(afb->base.obj[0]);
 		ret = gsgpu_bo_reserve(bo, false);
@@ -609,14 +610,16 @@ void gsgpu_dc_atomic_commit_tail(struct drm_atomic_state *state)
 		 * aconnector as needed
 		 */
 		if (modeset_required(new_crtc_state)) {
-			DRM_DEBUG_DRIVER("Atomic commit: SET crtc id %d: [0x%px]\n", acrtc->crtc_id, acrtc);
+			DRM_DEBUG_DRIVER("Atomic commit: SET crtc id %d: [0x%px]\n",
+					 acrtc->crtc_id, acrtc);
 			pm_runtime_get_noresume(dev->dev);
 			acrtc->enabled = true;
 			acrtc->hw_mode = new_crtc_state->mode;
 			crtc->hwmode = new_crtc_state->mode;
 		} else if (modereset_required(new_crtc_state)) {
-			DRM_DEBUG_DRIVER("gsgpu_crtc id:%d enable:%d, active:%d\n", acrtc->crtc_id,
-				new_crtc_state->enable,	new_crtc_state->active);
+			DRM_DEBUG_DRIVER("gsgpu_crtc id:%d enable:%d, active:%d\n",
+					 acrtc->crtc_id, new_crtc_state->enable,
+					 new_crtc_state->active);
 			acrtc->enabled = false;
 		}
 	} /* for_each_crtc_in_state() */
@@ -650,7 +653,6 @@ void gsgpu_dc_atomic_commit_tail(struct drm_atomic_state *state)
 	 */
 	spin_lock_irqsave(&adev->ddev->event_lock, flags);
 	for_each_new_crtc_in_state(state, crtc, new_crtc_state, i) {
-
 		if (new_crtc_state->event)
 			drm_send_event_locked(dev, &new_crtc_state->event->base);
 
-- 
2.43.0

