From d4e4323514697ac114318245e9eb425a63049f32 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Fri, 29 Sep 2023 11:20:28 +0800
Subject: [PATCH] gsgpu: Fix GTT and VRAM mgrs

---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_cs.c       |  5 ++---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_device.c   |  4 +---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c      | 16 +++++++--------
 drivers/gpu/drm/gsgpu/gpu/gsgpu_object.c   |  3 +--
 drivers/gpu/drm/gsgpu/gpu/gsgpu_vram_mgr.c | 24 ++++++++--------------
 drivers/gpu/drm/gsgpu/include/gsgpu_ttm.h  |  8 ++++----
 drivers/gpu/drm/gsgpu/include/gsgpu_vm.h   |  3 +++
 7 files changed, 27 insertions(+), 36 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_cs.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_cs.c
index a71e055b2a46..d4fd5586b548 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_cs.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_cs.c
@@ -280,7 +280,7 @@ static void gsgpu_cs_get_threshold_for_moves(struct gsgpu_device *adev,
 	}
 
 	total_vram = adev->gmc.real_vram_size - atomic64_read(&adev->vram_pin_size);
-	used_vram = gsgpu_vram_mgr_usage(adev->mman.bdev.man_drv[TTM_PL_VRAM]);
+	used_vram = gsgpu_vram_mgr_usage(&adev->mman.vram_mgr);
 	free_vram = used_vram >= total_vram ? 0 : total_vram - used_vram;
 
 	spin_lock(&adev->mm_stats.lock);
@@ -326,8 +326,7 @@ static void gsgpu_cs_get_threshold_for_moves(struct gsgpu_device *adev,
 	/* Do the same for visible VRAM if half of it is free */
 	if (!gsgpu_gmc_vram_full_visible(&adev->gmc)) {
 		u64 total_vis_vram = adev->gmc.visible_vram_size;
-		u64 used_vis_vram =
-			gsgpu_vram_mgr_vis_usage(adev->mman.bdev.man_drv[TTM_PL_VRAM]);
+		u64 used_vis_vram = gsgpu_vram_mgr_vis_usage(&adev->mman.vram_mgr);
 
 		if (used_vis_vram < total_vis_vram) {
 			u64 free_vis_vram = total_vis_vram - used_vis_vram;
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_device.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_device.c
index 3f3b03004a26..5e0108c8c492 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_device.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_device.c
@@ -2061,9 +2061,7 @@ static int gsgpu_device_reset(struct gsgpu_device *adev)
 				atomic_inc(&adev->vram_lost_counter);
 			}
 
-			r = gsgpu_gtt_mgr_recover(adev->mman.bdev.man_drv[TTM_PL_TT]);
-			if (r)
-				goto out;
+			gsgpu_gtt_mgr_recover(&adev->mman.gtt_mgr);
 
 			r = gsgpu_device_ip_resume_phase2(adev);
 			if (r)
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c
index f6f3c082e488..e73680b3c960 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c
@@ -302,13 +302,13 @@ static int gsgpu_info_ioctl(struct drm_device *dev, void *data, struct drm_file
 		ui64 = atomic64_read(&adev->num_vram_cpu_page_faults);
 		return copy_to_user(out, &ui64, min(size, 8u)) ? -EFAULT : 0;
 	case GSGPU_INFO_VRAM_USAGE:
-		ui64 = gsgpu_vram_mgr_usage(adev->mman.bdev.man_drv[TTM_PL_VRAM]);
+		ui64 = gsgpu_vram_mgr_usage(&adev->mman.vram_mgr);
 		return copy_to_user(out, &ui64, min(size, 8u)) ? -EFAULT : 0;
 	case GSGPU_INFO_VIS_VRAM_USAGE:
-		ui64 = gsgpu_vram_mgr_vis_usage(adev->mman.bdev.man_drv[TTM_PL_VRAM]);
+		ui64 = gsgpu_vram_mgr_vis_usage(&adev->mman.vram_mgr);
 		return copy_to_user(out, &ui64, min(size, 8u)) ? -EFAULT : 0;
 	case GSGPU_INFO_GTT_USAGE:
-		ui64 = gsgpu_gtt_mgr_usage(adev->mman.bdev.man_drv[TTM_PL_TT]);
+		ui64 = gsgpu_gtt_mgr_usage(&adev->mman.gtt_mgr);
 		return copy_to_user(out, &ui64, min(size, 8u)) ? -EFAULT : 0;
 	case GSGPU_INFO_GDS_CONFIG:
 		return -ENODATA;
@@ -333,7 +333,7 @@ static int gsgpu_info_ioctl(struct drm_device *dev, void *data, struct drm_file
 		mem.vram.usable_heap_size = adev->gmc.real_vram_size -
 			atomic64_read(&adev->vram_pin_size);
 		mem.vram.heap_usage =
-			gsgpu_vram_mgr_usage(adev->mman.bdev.man_drv[TTM_PL_VRAM]);
+			gsgpu_vram_mgr_usage(&adev->mman.vram_mgr);
 		mem.vram.max_allocation = mem.vram.usable_heap_size * 3 / 4;
 
 		mem.cpu_accessible_vram.total_heap_size =
@@ -341,7 +341,7 @@ static int gsgpu_info_ioctl(struct drm_device *dev, void *data, struct drm_file
 		mem.cpu_accessible_vram.usable_heap_size = adev->gmc.visible_vram_size -
 			atomic64_read(&adev->visible_pin_size);
 		mem.cpu_accessible_vram.heap_usage =
-			gsgpu_vram_mgr_vis_usage(adev->mman.bdev.man_drv[TTM_PL_VRAM]);
+			gsgpu_vram_mgr_vis_usage(&adev->mman.vram_mgr);
 		mem.cpu_accessible_vram.max_allocation =
 			mem.cpu_accessible_vram.usable_heap_size * 3 / 4;
 
@@ -349,13 +349,11 @@ static int gsgpu_info_ioctl(struct drm_device *dev, void *data, struct drm_file
 		mem.gtt.total_heap_size *= PAGE_SIZE;
 		mem.gtt.usable_heap_size = mem.gtt.total_heap_size -
 			atomic64_read(&adev->gart_pin_size);
-		mem.gtt.heap_usage =
-			gsgpu_gtt_mgr_usage(adev->mman.bdev.man_drv[TTM_PL_TT]);
+		mem.gtt.heap_usage = gsgpu_gtt_mgr_usage(&adev->mman.gtt_mgr);
 		mem.gtt.max_allocation = mem.gtt.usable_heap_size * 3 / 4;
 
 		return copy_to_user(out, &mem,
-				    min((size_t)size, sizeof(mem)))
-				    ? -EFAULT : 0;
+				    min((size_t)size, sizeof(mem))) ? -EFAULT : 0;
 	}
 	case GSGPU_INFO_READ_MMR_REG: {
 		unsigned n, alloc_size;
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_object.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_object.c
index 8333e2a35289..5de6e6223a6d 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_object.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_object.c
@@ -465,8 +465,7 @@ static int gsgpu_bo_create_shadow(struct gsgpu_device *adev,
 	bp.size = size;
 	bp.byte_align = byte_align;
 	bp.domain = GSGPU_GEM_DOMAIN_GTT;
-	bp.flags = GSGPU_GEM_CREATE_CPU_GTT_USWC |
-		GSGPU_GEM_CREATE_SHADOW;
+	bp.flags = GSGPU_GEM_CREATE_CPU_GTT_USWC | GSGPU_GEM_CREATE_SHADOW;
 	bp.type = ttm_bo_type_kernel;
 	bp.resv = bo->tbo.base.resv;
 
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_vram_mgr.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_vram_mgr.c
index dc2bcb74f8a4..b4d278fe50d7 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_vram_mgr.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_vram_mgr.c
@@ -163,7 +163,6 @@ static struct attribute *gsgpu_vram_mgr_attributes[] = {
 	&dev_attr_mem_info_vis_vram_total.attr,
 	&dev_attr_mem_info_vram_used.attr,
 	&dev_attr_mem_info_vis_vram_used.attr,
-	&dev_attr_mem_info_vram_vendor.attr,
 	NULL
 };
 
@@ -540,10 +539,11 @@ static int gsgpu_vram_mgr_new(struct ttm_resource_manager *man,
 	if (gsgpu_is_vram_mgr_blocks_contiguous(&vres->blocks))
 		vres->base.placement |= TTM_PL_FLAG_CONTIGUOUS;
 
-	if (adev->gmc.xgmi.connected_to_cpu)
-		vres->base.bus.caching = ttm_cached;
-	else
+	struct gsgpu_bo *abo = ttm_to_gsgpu_bo(tbo);
+	if (abo->flags & GSGPU_GEM_CREATE_CPU_GTT_USWC)
 		vres->base.bus.caching = ttm_write_combined;
+	else
+		vres->base.bus.caching = ttm_cached;
 
 	atomic64_add(vis_usage, &mgr->vis_usage);
 	*res = &vres->base;
@@ -849,16 +849,11 @@ int gsgpu_vram_mgr_init(struct gsgpu_device *adev)
 	INIT_LIST_HEAD(&mgr->reserved_pages);
 	mgr->default_page_size = PAGE_SIZE;
 
-	if (!adev->gmc.is_app_apu) {
-		man->func = &gsgpu_vram_mgr_func;
+	man->func = &gsgpu_vram_mgr_func;
 
-		err = drm_buddy_init(&mgr->mm, man->size, PAGE_SIZE);
-		if (err)
-			return err;
-	} else {
-		man->func = &gsgpu_dummy_vram_mgr_func;
-		DRM_INFO("Setup dummy vram mgr\n");
-	}
+	err = drm_buddy_init(&mgr->mm, man->size, PAGE_SIZE);
+	if (err)
+		return err;
 
 	ttm_set_driver_manager(&adev->mman.bdev, TTM_PL_VRAM, &mgr->manager);
 	ttm_resource_manager_set_used(man, true);
@@ -894,8 +889,7 @@ void gsgpu_vram_mgr_fini(struct gsgpu_device *adev)
 		drm_buddy_free_list(&mgr->mm, &rsv->allocated);
 		kfree(rsv);
 	}
-	if (!adev->gmc.is_app_apu)
-		drm_buddy_fini(&mgr->mm);
+	drm_buddy_fini(&mgr->mm);
 	mutex_unlock(&mgr->lock);
 
 	ttm_resource_manager_cleanup(man);
diff --git a/drivers/gpu/drm/gsgpu/include/gsgpu_ttm.h b/drivers/gpu/drm/gsgpu/include/gsgpu_ttm.h
index 85def07aebb2..9eb258fce434 100644
--- a/drivers/gpu/drm/gsgpu/include/gsgpu_ttm.h
+++ b/drivers/gpu/drm/gsgpu/include/gsgpu_ttm.h
@@ -47,12 +47,12 @@ int gsgpu_gtt_mgr_init(struct gsgpu_device *adev, uint64_t gtt_size);
 void gsgpu_gtt_mgr_fini(struct gsgpu_device *adev);
 
 bool gsgpu_gtt_mgr_has_gart_addr(struct ttm_resource *mem);
-uint64_t gsgpu_gtt_mgr_usage(struct ttm_resource_manager *man);
-void gsgpu_gtt_mgr_recover(struct ttm_resource_manager *man);
+uint64_t gsgpu_gtt_mgr_usage(struct gsgpu_gtt_mgr *man);
+void gsgpu_gtt_mgr_recover(struct gsgpu_gtt_mgr *man);
 
 u64 gsgpu_vram_mgr_bo_visible_size(struct gsgpu_bo *bo);
-uint64_t gsgpu_vram_mgr_usage(struct ttm_resource_manager *man);
-uint64_t gsgpu_vram_mgr_vis_usage(struct ttm_resource_manager *man);
+uint64_t gsgpu_vram_mgr_usage(struct gsgpu_vram_mgr *man);
+uint64_t gsgpu_vram_mgr_vis_usage(struct gsgpu_vram_mgr *man);
 
 int gsgpu_ttm_init(struct gsgpu_device *adev);
 void gsgpu_ttm_late_init(struct gsgpu_device *adev);
diff --git a/drivers/gpu/drm/gsgpu/include/gsgpu_vm.h b/drivers/gpu/drm/gsgpu/include/gsgpu_vm.h
index 4e7da1925a4d..2f9fc72876ae 100644
--- a/drivers/gpu/drm/gsgpu/include/gsgpu_vm.h
+++ b/drivers/gpu/drm/gsgpu/include/gsgpu_vm.h
@@ -54,6 +54,9 @@ struct gsgpu_bo_list_entry;
  */
 #define GSGPU_VA_HOLE_MASK			0x0000ffffffffffffULL
 
+/* Reserve 1MB VRAM for page tables */
+#define GSGPU_VM_RESERVED_VRAM                (1ULL << 20)
+
 /* max vmids dedicated for process */
 #define GSGPU_VM_MAX_RESERVED_VMID	1
 
-- 
2.39.1

