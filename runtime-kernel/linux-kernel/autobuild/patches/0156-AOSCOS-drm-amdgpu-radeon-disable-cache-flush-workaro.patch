From 8dd15f16491c51740ea608a8fd1533910f275724 Mon Sep 17 00:00:00 2001
From: Mingcong Bai <baimingcong@uniontech.com>
Date: Sun, 22 Sep 2024 01:07:11 +0800
Subject: [PATCH 156/294] AOSCOS: drm: amdgpu: radeon: disable cache flush
 workaround for LoongArch and Loongson64

This workaround causes instability for LoongArch/Loongson (MIPS) devices
based on the 7A1000/2000 chipset under heavy I/O load.

FIXME: Disable this workaround until we find a better fix (possibly in the
platform-specific PCI code).

Signed-off-by: Mingcong Bai <baimingcong@uniontech.com>

Link: https://lore.kernel.org/all/20240617105846.1516006-1-uwu@icenowy.me/
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c | 8 ++++++++
 drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c | 8 ++++++++
 drivers/gpu/drm/radeon/cik.c          | 8 ++++++++
 3 files changed, 24 insertions(+)

diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c
index f146806c4633..3067333faae0 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c
@@ -2116,6 +2116,13 @@ static void gfx_v7_0_ring_emit_fence_gfx(struct amdgpu_ring *ring, u64 addr,
 	bool int_sel = flags & AMDGPU_FENCE_FLAG_INT;
 	bool exec = flags & AMDGPU_FENCE_FLAG_EXEC;
 
+/* This workaround causes instability for LoongArch/Loongson (MIPS)
+ * devices based on the 7A1000/2000 chipset under heavy I/O load.
+ *
+ * FIXME: Disable this workaround until we find a better fix (possibly in
+ * the platform-specific PCI code).
+ */
+#ifndef CONFIG_MACH_LOONGSON64
 	/* Workaround for cache flush problems. First send a dummy EOP
 	 * event down the pipe with seq one below.
 	 */
@@ -2129,6 +2136,7 @@ static void gfx_v7_0_ring_emit_fence_gfx(struct amdgpu_ring *ring, u64 addr,
 				DATA_SEL(1) | INT_SEL(0));
 	amdgpu_ring_write(ring, lower_32_bits(seq - 1));
 	amdgpu_ring_write(ring, upper_32_bits(seq - 1));
+#endif
 
 	/* Then send the real EOP event down the pipe. */
 	amdgpu_ring_write(ring, PACKET3(PACKET3_EVENT_WRITE_EOP, 4));
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
index 9d741695ca07..739858505385 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
@@ -6158,6 +6158,13 @@ static void gfx_v8_0_ring_emit_fence_gfx(struct amdgpu_ring *ring, u64 addr,
 	bool int_sel = flags & AMDGPU_FENCE_FLAG_INT;
 	bool exec = flags & AMDGPU_FENCE_FLAG_EXEC;
 
+/* This workaround causes instability for LoongArch/Loongson (MIPS)
+ * devices based on the 7A1000/2000 chipset under heavy I/O load.
+ *
+ * FIXME: Disable this workaround until we find a better fix (possibly in
+ * the platform-specific PCI code).
+ */
+#ifndef CONFIG_MACH_LOONGSON64
 	/* Workaround for cache flush problems. First send a dummy EOP
 	 * event down the pipe with seq one below.
 	 */
@@ -6172,6 +6179,7 @@ static void gfx_v8_0_ring_emit_fence_gfx(struct amdgpu_ring *ring, u64 addr,
 				DATA_SEL(1) | INT_SEL(0));
 	amdgpu_ring_write(ring, lower_32_bits(seq - 1));
 	amdgpu_ring_write(ring, upper_32_bits(seq - 1));
+#endif
 
 	/* Then send the real EOP event down the pipe:
 	 * EVENT_WRITE_EOP - flush caches, send int */
diff --git a/drivers/gpu/drm/radeon/cik.c b/drivers/gpu/drm/radeon/cik.c
index b1e4155ef31b..f20fd5ae6c45 100644
--- a/drivers/gpu/drm/radeon/cik.c
+++ b/drivers/gpu/drm/radeon/cik.c
@@ -3543,6 +3543,13 @@ void cik_fence_gfx_ring_emit(struct radeon_device *rdev,
 	struct radeon_ring *ring = &rdev->ring[fence->ring];
 	u64 addr = rdev->fence_drv[fence->ring].gpu_addr;
 
+/* This workaround causes instability for LoongArch/Loongson (MIPS)
+ * devices based on the 7A1000/2000 chipset under heavy I/O load.
+ *
+ * FIXME: Disable this workaround until we find a better fix (possibly in
+ * the platform-specific PCI code).
+ */
+#ifndef CONFIG_MACH_LOONGSON64
 	/* Workaround for cache flush problems. First send a dummy EOP
 	 * event down the pipe with seq one below.
 	 */
@@ -3556,6 +3563,7 @@ void cik_fence_gfx_ring_emit(struct radeon_device *rdev,
 				DATA_SEL(1) | INT_SEL(0));
 	radeon_ring_write(ring, fence->seq - 1);
 	radeon_ring_write(ring, 0);
+#endif
 
 	/* Then send the real EOP event down the pipe. */
 	radeon_ring_write(ring, PACKET3(PACKET3_EVENT_WRITE_EOP, 4));
-- 
2.48.1

