From b826e9e453e0eb4fee8359770489513e2d2e5575 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Mon, 16 Oct 2023 14:51:34 +0800
Subject: [PATCH] gsgpu: Warn if MSI is requested but not enabled.

Warn if MSI is requested but pci_enable_msi failed.
---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c |  6 +++---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_irq.c | 26 ++++----------------------
 2 files changed, 7 insertions(+), 25 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c
index fa83a764271b..b8381dea9c6c 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c
@@ -28,7 +28,7 @@ int gsgpu_moverate = -1; /* auto */
 int gsgpu_benchmarking;
 int gsgpu_testing;
 int gsgpu_disp_priority;
-int gsgpu_msi = -1;
+int gsgpu_msi = 1;
 int gsgpu_lockup_timeout = 10000;
 int gsgpu_runtime_pm = -1;
 int gsgpu_vm_size = -1;
@@ -108,9 +108,9 @@ module_param_named(disp_priority, gsgpu_disp_priority, int, 0444);
 
 /**
  * DOC: msi (int)
- * To disable Message Signaled Interrupts (MSI) functionality (1 = enable, 0 = disable). The default is -1 (auto, enabled).
+ * Specify whether to enable Message Signaled Interrupts (MSI) functionality (1 = enable, 0 = disable). The default is 1 (enable).
  */
-MODULE_PARM_DESC(msi, "MSI support (1 = enable, 0 = disable, -1 = auto)");
+MODULE_PARM_DESC(msi, "MSI support (1 = enable, 0 = disable)");
 module_param_named(msi, gsgpu_msi, int, 0444);
 
 /**
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_irq.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_irq.c
index 9fe90e48674e..748fe11216e4 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_irq.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_irq.c
@@ -146,27 +146,6 @@ static void gsgpu_irq_uninstall(struct gsgpu_device *adev)
 	free_irq(pdev->irq, dev);
 }
 
-/**
- * gsgpu_msi_ok - check whether MSI functionality is enabled
- *
- * @adev: gsgpu device pointer (unused)
- *
- * Checks whether MSI functionality has been disabled via module parameter
- * (all ASICs).
- *
- * Returns:
- * *true* if MSIs are allowed to be enabled or *false* otherwise
- */
-static bool gsgpu_msi_ok(struct gsgpu_device *adev)
-{
-	if (gsgpu_msi == 1)
-		return true;
-	else if (gsgpu_msi == 0)
-		return false;
-
-	return true;
-}
-
 /**
  * gsgpu_irq_init - initialize interrupt handling
  *
@@ -188,11 +167,14 @@ int gsgpu_irq_init(struct gsgpu_device *adev)
 	/* Enable MSI if not disabled by module parameter */
 	adev->irq.msi_enabled = false;
 
-	if (gsgpu_msi_ok(adev)) {
+	if (gsgpu_msi) {
 		int ret = pci_enable_msi(adev->pdev);
 		if (!ret) {
 			adev->irq.msi_enabled = true;
 			dev_dbg(adev->dev, "gsgpu: using MSI.\n");
+		} else {
+			dev_err(adev->dev, "gsgpu: MSI requested but pci_enable_msi "
+				"returned error (%d). Disabling MSI.\n", ret);
 		}
 	}
 
-- 
2.43.0

