From 9a65272fbcfa06d116de11dce05632996ee239f5 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Fri, 29 Sep 2023 13:06:36 +0800
Subject: [PATCH] gsgpu: Remove unused functions

---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_hdmi.c     | 81 -------------------
 drivers/gpu/drm/gsgpu/include/gsgpu_dc_hdmi.h |  1 -
 2 files changed, 82 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_hdmi.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_hdmi.c
index 651e1eceb12e..aa7cd616fc92 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_hdmi.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_hdmi.c
@@ -40,87 +40,6 @@ void hdmi_phy_pll_config(struct gsgpu_device *adev, int index, int clock)
 	dc_writel(adev, CURRENT_REG(DC_HDMI_PHY_CTRL_REG, index), 0xf03);
 }
 
-static int hdmi_set_avi_infoframe(struct drm_encoder *encoder,
-			   struct drm_display_mode *mode)
-{
-	struct gsgpu_device *adev = encoder->dev->dev_private;
-	struct hdmi_avi_infoframe avi_frame;
-	u8 buffer[HDMI_INFOFRAME_HEADER_SIZE + HDMI_AVI_INFOFRAME_SIZE];
-	int err, val;
-	uint8_t *frame;
-	int index = encoder->index;
-
-	err = drm_hdmi_avi_infoframe_from_display_mode(&avi_frame, mode, false);
-	if (err < 0) {
-		DRM_ERROR("failed to setup AVI infoframe: %d\n", err);
-		return err;
-	}
-
-	err = hdmi_avi_infoframe_pack(&avi_frame, buffer, sizeof(buffer));
-	if (err < 0) {
-		DRM_ERROR("failed to pack AVI infoframe: %d\n", err);
-		return err;
-	}
-
-	/* PHY config */
-	hdmi_phy_pll_config(adev, index, mode->clock);
-
-	/* set avi infoframe */
-	frame = buffer + 3;
-	val = (avi_frame.scan_mode << 0) | /*scan_info*/
-		(0 << 2) | /*bar_info*/
-		(1 << 4) | /*active_format_info_present*/
-		(avi_frame.colorspace << 5) | /*RGB_OR_YCBCR*/
-		(avi_frame.active_aspect << 8) | /*active_format_aspect_ratio*/
-		(2 << 12) | /*picture_aspect_ratio*/
-		(avi_frame.colorimetry << 14) | /*colorimetry*/
-		(0 << 16) | /*nonuniform_picture_scaling*/
-		(0 << 18) | /*RGB_quantization_range*/
-		(0 << 20) | /*ectended_colorimetry*/
-		(avi_frame.itc << 23) | /*it_content*/
-		(avi_frame.video_code << 24); /*video_format_id_code*/
-	dc_writel(adev, val, (DC_HDMI_AVI_CONT0_REG + (index*0x10)));
-
-	val = (avi_frame.pixel_repeat << 0) | /*pixel_repetition*/
-		(avi_frame.content_type << 4) | /*content_type*/
-		(avi_frame.ycc_quantization_range << 6); /*YCC_quantization_range*/
-	dc_writel(adev, val, (DC_HDMI_AVI_CONT1_REG + (index*0x10)));
-
-	val = ((avi_frame.top_bar & 0xff) << 0) | /*end_top_bar_l*/
-		(((avi_frame.top_bar >> 8) & 0xff) << 8) | /*end_top_bar_h*/
-		((avi_frame.bottom_bar & 0xff) << 16) | /*start_bottom_bar_l*/
-		(((avi_frame.bottom_bar >> 8) & 0xff) << 24); /*start_bottom_bar_h*/
-	dc_writel(adev, val, (DC_HDMI_AVI_CONT2_REG + (index*0x10)));
-
-	val = ((avi_frame.left_bar & 0xff) << 0) | /*end_left_bar_l*/
-		(((avi_frame.left_bar >> 8) & 0xff) << 8) | /*end_left_bar_h*/
-		((avi_frame.right_bar & 0xff) << 16) | /*start_right_bar_l*/
-		(((avi_frame.right_bar >> 8) & 0xff) << 24); /*start_right_bar_h*/
-	dc_writel(adev, val, (DC_HDMI_AVI_CONT3_REG + (index*0x10)));
-
-	dc_writel(adev, HDMI_AVI_ENABLE_PACKET | HDMI_AVI_FREQ_EACH_FRAME | HDMI_AVI_UPDATE,
-		    (DC_HDMI_AVI_CTRL_REG + (index*0x10)));
-
-	return 0;
-}
-
-void dc_hdmi_encoder_enable(struct drm_encoder *encoder)
-{
-	struct gsgpu_device *adev = encoder->dev->dev_private;
-	struct drm_display_mode *mode = &encoder->crtc->state->adjusted_mode;
-	u32 value;
-	u32 index = encoder->index;
-
-	/* hdmi enable */
-	value = dc_readl(adev, DC_HDMI_CTRL_REG + (index*0x10));
-	value |= (1 << 0);
-	dc_writel(adev, value, DC_HDMI_CTRL_REG + (index*0x10));
-	DRM_INFO("hdmi encoder enable %d CTRL reg 0x%x\n",
-		 encoder->index, value);
-
-	hdmi_set_avi_infoframe(encoder, mode);
-}
-
 void gsgpu_hdmi_suspend(struct gsgpu_device *adev)
 {
 	u32 link = 0;
diff --git a/drivers/gpu/drm/gsgpu/include/gsgpu_dc_hdmi.h b/drivers/gpu/drm/gsgpu/include/gsgpu_dc_hdmi.h
index c1ab093b96f6..654742ec51e8 100644
--- a/drivers/gpu/drm/gsgpu/include/gsgpu_dc_hdmi.h
+++ b/drivers/gpu/drm/gsgpu/include/gsgpu_dc_hdmi.h
@@ -4,7 +4,6 @@
 int gsgpu_hdmi_init(struct gsgpu_device *adev);
 void gsgpu_hdmi_suspend(struct gsgpu_device *adev);
 int gsgpu_hdmi_resume(struct gsgpu_device *adev);
-void dc_hdmi_encoder_enable(struct drm_encoder *encoder);
 void dc_hdmi_encoder_mode_set(struct drm_encoder *encoder,
 			      struct drm_display_mode *mode,
 			      struct drm_display_mode *adjusted_mode);
-- 
2.43.0

