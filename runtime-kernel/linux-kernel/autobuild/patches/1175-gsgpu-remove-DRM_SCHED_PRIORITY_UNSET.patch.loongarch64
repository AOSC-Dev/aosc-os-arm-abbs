From 39d0e00a5a224dd527cc7e462fc96afdff0a5d68 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Fri, 3 Nov 2023 11:23:18 +0800
Subject: [PATCH] gsgpu: remove DRM_SCHED_PRIORITY_UNSET

Following commit fa8391ad68c we convert DRM_SCHED_PRIORITY_UNSET
to DRM_SCHED_PRIORITY_NORMAL and use GSGPU_CTX_PRIORITY_UNSET to
as the internal 'UNSET' priority.
---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c   | 4 ++--
 drivers/gpu/drm/gsgpu/gpu/gsgpu_sched.c | 3 ++-
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c
index a0d14d38e372..0e0e52f37bb0 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c
@@ -53,7 +53,7 @@ static int gsgpu_ctx_init(struct gsgpu_device *adev,
 	ctx->reset_counter_query = ctx->reset_counter;
 	ctx->vram_lost_counter = atomic_read(&adev->vram_lost_counter);
 	ctx->init_priority = priority;
-	ctx->override_priority = DRM_SCHED_PRIORITY_UNSET;
+	ctx->override_priority = GSGPU_CTX_PRIORITY_UNSET;
 
 	/* create context entity for each ring */
 	for (i = 0; i < adev->num_rings; i++) {
@@ -361,7 +361,7 @@ void gsgpu_ctx_priority_override(struct gsgpu_ctx *ctx,
 
 	ctx->override_priority = priority;
 
-	ctx_prio = (ctx->override_priority == DRM_SCHED_PRIORITY_UNSET) ?
+	ctx_prio = (ctx->override_priority == GSGPU_CTX_PRIORITY_UNSET) ?
 			ctx->init_priority : ctx->override_priority;
 
 	for (i = 0; i < adev->num_rings; i++) {
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_sched.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_sched.c
index c4030173da7e..a2eb405d98ca 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_sched.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_sched.c
@@ -18,7 +18,8 @@ enum drm_sched_priority gsgpu_to_sched_priority(int gsgpu_priority)
 	case GSGPU_CTX_PRIORITY_VERY_LOW:
 		return DRM_SCHED_PRIORITY_MIN;
 	case GSGPU_CTX_PRIORITY_UNSET:
-		return DRM_SCHED_PRIORITY_UNSET;
+		pr_warn_once("GSGPU-->DRM context priority value UNSET-->NORMAL");
+		return DRM_SCHED_PRIORITY_NORMAL;
 	default:
 		WARN(1, "Invalid context priority %d\n", gsgpu_priority);
 		return -EINVAL;
-- 
2.39.1

