From 6fd55ffd4ea485ee84801b12c02a0192295b67c2 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Mon, 16 Oct 2023 15:41:07 +0800
Subject: [PATCH] gsgpu: Remove late_init_work

This is a no-op in the current version of the driver so we remove
it entirely.
---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_device.c | 38 ------------------------
 drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c    |  3 --
 drivers/gpu/drm/gsgpu/include/gsgpu.h    |  3 --
 3 files changed, 44 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_device.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_device.c
index 05b934b737a6..bae5866d16f1 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_device.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_device.c
@@ -947,9 +947,6 @@ static int gsgpu_device_ip_late_init(struct gsgpu_device *adev)
 		}
 	}
 
-	queue_delayed_work(system_wq, &adev->late_init_work,
-			   msecs_to_jiffies(GSGPU_RESUME_MS));
-
 	gsgpu_device_fill_reset_magic(adev);
 
 	return 0;
@@ -1015,34 +1012,6 @@ static int gsgpu_device_ip_fini(struct gsgpu_device *adev)
 	return 0;
 }
 
-/**
- * gsgpu_device_ip_late_init_func_handler - work handler for clockgating
- *
- * @work: work_struct
- *
- * Work handler for gsgpu_device_ip_late_set_cg_state.  We put the
- * clockgating setup into a worker thread to speed up driver init and
- * resume from suspend.
- */
-static void gsgpu_device_ip_late_init_func_handler(struct work_struct *work)
-{
-#if 1
-	return;
-#else
-	struct gsgpu_device *adev =
-		container_of(work, struct gsgpu_device, late_init_work.work);
-	int r;
-
-	r = gsgpu_ib_ring_tests(adev);
-	if (r)
-		DRM_ERROR("ib ring test failed (%d).\n", r);
-
-	r = gsgpu_ring_test_xdma(&adev->xdma.instance[0].ring, msecs_to_jiffies(5000));
-	if (r)
-		DRM_ERROR("xdma test failed (%d).\n", r);
-#endif
-}
-
 /**
  * gsgpu_device_ip_suspend_phase1 - run suspend for hardware IPs (phase 1)
  *
@@ -1295,9 +1264,6 @@ int gsgpu_device_init(struct gsgpu_device *adev,
 	INIT_LIST_HEAD(&adev->ring_lru_list);
 	spin_lock_init(&adev->ring_lru_list_lock);
 
-	INIT_DELAYED_WORK(&adev->late_init_work,
-			  gsgpu_device_ip_late_init_func_handler);
-
 	/* pci get dc revision */
 	pci_read_config_byte(adev->loongson_dc, 0x8, &adev->dc_revision);
 	DRM_DEBUG_DRIVER("GSGPU dc revision id 0x%x\n", adev->dc_revision);
@@ -1474,7 +1440,6 @@ void gsgpu_device_fini(struct gsgpu_device *adev)
 		adev->firmware.gpu_info_fw = NULL;
 	}
 	adev->accel_working = false;
-	cancel_delayed_work_sync(&adev->late_init_work);
 
 	gsgpu_cp_fini(adev);
 
@@ -1725,9 +1690,6 @@ int gsgpu_device_resume(struct drm_device *dev, bool resume, bool fbcon)
 	if (r)
 		return r;
 
-	/* Make sure IB tests flushed */
-	flush_delayed_work(&adev->late_init_work);
-
 	/* blat the mode back in */
 	if (fbcon)
 		gsgpu_fbdev_set_suspend(adev, 0);
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c
index e73680b3c960..8162196e669d 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c
@@ -531,9 +531,6 @@ int gsgpu_driver_open_kms(struct drm_device *dev, struct drm_file *file_priv)
 	struct gsgpu_fpriv *fpriv;
 	int r, pasid;
 
-	/* Ensure IB tests are run on ring */
-	flush_delayed_work(&adev->late_init_work);
-
 	file_priv->driver_priv = NULL;
 
 	r = pm_runtime_get_sync(dev->dev);
diff --git a/drivers/gpu/drm/gsgpu/include/gsgpu.h b/drivers/gpu/drm/gsgpu/include/gsgpu.h
index 6f1b34622e02..d26818ce74c2 100644
--- a/drivers/gpu/drm/gsgpu/include/gsgpu.h
+++ b/drivers/gpu/drm/gsgpu/include/gsgpu.h
@@ -1086,9 +1086,6 @@ struct gsgpu_device {
 	atomic64_t visible_pin_size;
 	atomic64_t gart_pin_size;
 
-	/* delayed work_func for deferring clockgating during resume */
-	struct delayed_work     late_init_work;
-
 	//zl prior virt
 	uint32_t			reg_val_offs;
 	/* firmware VRAM reservation */
-- 
2.43.0

