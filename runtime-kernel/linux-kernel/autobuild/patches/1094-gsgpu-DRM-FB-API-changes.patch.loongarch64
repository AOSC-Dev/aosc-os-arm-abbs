From a45f8493d87ca929e56e473737e5d243c55d4656 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Thu, 28 Sep 2023 13:53:58 +0800
Subject: [PATCH] gsgpu: DRM FB API changes

---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_fb.c | 34 +++++++++++-----------------
 1 file changed, 13 insertions(+), 21 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_fb.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_fb.c
index d73ab4377371..ddde3f4bd755 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_fb.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_fb.c
@@ -48,9 +48,8 @@ static struct fb_ops gsgpufb_ops = {
 	DRM_FB_HELPER_DEFAULT_OPS,
 	.fb_open = gsgpufb_open,
 	.fb_release = gsgpufb_release,
-	.fb_fillrect = drm_fb_helper_cfb_fillrect,
-	.fb_copyarea = drm_fb_helper_cfb_copyarea,
-	.fb_imageblit = drm_fb_helper_cfb_imageblit,
+	FB_DEFAULT_IOMEM_OPS,
+	DRM_FB_HELPER_DEFAULT_OPS,
 };
 
 
@@ -84,6 +83,7 @@ static int gsgpufb_create_pinned_object(struct gsgpu_fbdev *rfbdev,
 					 struct drm_gem_object **gobj_p)
 {
 	struct gsgpu_device *adev = rfbdev->adev;
+	const struct drm_format_info *info = drm_get_format_info(adev->ddev, mode_cmd);
 	struct drm_gem_object *gobj = NULL;
 	struct gsgpu_bo *abo = NULL;
 	bool fb_tiled = false; /* useful for testing */
@@ -93,7 +93,7 @@ static int gsgpufb_create_pinned_object(struct gsgpu_fbdev *rfbdev,
 	int height = mode_cmd->height;
 	u32 cpp;
 
-	cpp = drm_format_plane_cpp(mode_cmd->pixel_format, 0);
+	cpp = info->cpp[0];
 
 	/* need to align pitch with crtc limits */
 	mode_cmd->pitches[0] = gsgpu_align_pitch(adev, mode_cmd->width, cpp,
@@ -189,7 +189,7 @@ static int gsgpufb_create(struct drm_fb_helper *helper,
 	abo = gem_to_gsgpu_bo(gobj);
 
 	/* okay we have an object now allocate the framebuffer */
-	info = drm_fb_helper_alloc_fbi(helper);
+	info = drm_fb_helper_alloc_info(helper);
 	if (IS_ERR(info)) {
 		ret = PTR_ERR(info);
 		goto out;
@@ -199,7 +199,7 @@ static int gsgpufb_create(struct drm_fb_helper *helper,
 	info->skip_vt_switch = true;
 
 	ret = gsgpu_display_framebuffer_init(adev->ddev, &rfbdev->rfb,
-					      &mode_cmd, gobj);
+					     &mode_cmd, gobj);
 	if (ret) {
 		DRM_ERROR("failed to initialize framebuffer %d\n", ret);
 		goto out;
@@ -212,8 +212,6 @@ static int gsgpufb_create(struct drm_fb_helper *helper,
 
 	strcpy(info->fix.id, "gsgpudrmfb");
 
-	drm_fb_helper_fill_fix(info, fb->pitches[0], fb->format->depth);
-
 	info->fbops = &gsgpufb_ops;
 
 	/* not alloc from VRAM but GTT */
@@ -223,11 +221,7 @@ static int gsgpufb_create(struct drm_fb_helper *helper,
 	info->screen_base = gsgpu_bo_kptr(abo);
 	info->screen_size = gsgpu_bo_size(abo);
 
-	drm_fb_helper_fill_var(info, &rfbdev->helper, sizes->fb_width, sizes->fb_height);
-
-	/* setup aperture base/size for vesafb takeover */
-	info->apertures->ranges[0].base = adev->ddev->mode_config.fb_base;
-	info->apertures->ranges[0].size = adev->gmc.aper_size;
+	drm_fb_helper_fill_info(info, &rfbdev->helper, sizes);
 
 	/* Use default scratch pixmap (info->pixmap.flags = FB_PIXMAP_SYSTEM) */
 
@@ -244,7 +238,7 @@ static int gsgpufb_create(struct drm_fb_helper *helper,
 	DRM_INFO("screen_base 0x%llX\n", (u64)info->screen_base);
 	DRM_INFO("screen_size 0x%lX\n", info->screen_size);
 
-	vga_switcheroo_client_fb_set(adev->ddev->pdev, info);
+	vga_switcheroo_client_fb_set(adev->pdev, info);
 	return 0;
 
 out:
@@ -264,7 +258,7 @@ static int gsgpu_fbdev_destroy(struct drm_device *dev, struct gsgpu_fbdev *rfbde
 {
 	struct gsgpu_framebuffer *rfb = &rfbdev->rfb;
 
-	drm_fb_helper_unregister_fbi(&rfbdev->helper);
+	drm_fb_helper_unregister_info(&rfbdev->helper);
 
 	if (rfb->base.obj[0]) {
 		gsgpufb_destroy_pinned_object(rfb->base.obj[0]);
@@ -306,18 +300,16 @@ int gsgpu_fbdev_init(struct gsgpu_device *adev)
 	rfbdev->adev = adev;
 	adev->mode_info.rfbdev = rfbdev;
 
-	drm_fb_helper_prepare(adev->ddev, &rfbdev->helper,
-			&gsgpu_fb_helper_funcs);
+	drm_fb_helper_prepare(adev->ddev, &rfbdev->helper, bpp_sel,
+			      &gsgpu_fb_helper_funcs);
 
-	ret = drm_fb_helper_init(adev->ddev, &rfbdev->helper,
-				 GSGPUFB_CONN_LIMIT);
+	ret = drm_fb_helper_init(adev->ddev, &rfbdev->helper);
 	if (ret) {
 		kfree(rfbdev);
 		return ret;
 	}
 
-	drm_fb_helper_single_add_all_connectors(&rfbdev->helper);
-	drm_fb_helper_initial_config(&rfbdev->helper, bpp_sel);
+	drm_fb_helper_initial_config(&rfbdev->helper);
 
 	return 0;
 }
-- 
2.43.0

