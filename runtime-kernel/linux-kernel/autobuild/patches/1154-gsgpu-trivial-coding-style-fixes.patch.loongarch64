From 5e1eab09b37d2a6865ec4969ebf5a26e2a682396 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Mon, 16 Oct 2023 16:45:51 +0800
Subject: [PATCH] gsgpu: trivial coding style fixes

---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c  | 5 +----
 drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c  | 3 +--
 drivers/gpu/drm/gsgpu/gpu/gsgpu_ring.c | 3 +--
 3 files changed, 3 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c
index 8162196e669d..83ca281601ae 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_kms.c
@@ -71,12 +71,9 @@ int gsgpu_driver_load_kms(struct drm_device *dev, unsigned long flags)
 	r = gsgpu_device_init(adev, dev, pdev, flags);
 	if (r) {
 		dev_err(&pdev->dev, "Fatal error during GPU init\n");
-		goto out;
+		gsgpu_driver_unload_kms(dev);
 	}
 
-out:
-	if (r)
-		gsgpu_driver_unload_kms(dev);
 
 	return r;
 }
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c
index 73be97dc580b..6c94d269c560 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c
@@ -101,7 +101,7 @@ static int mmu_mc_init(struct gsgpu_device *adev)
  * Flush the TLB for the requested page table ().
  */
 static void mmu_flush_gpu_tlb(struct gsgpu_device *adev,
-					uint32_t vmid)
+			      uint32_t vmid)
 {
 	gsgpu_cmd_exec(adev, GSCMD(GSCMD_MMU, MMU_FLUSH), GSGPU_MMU_FLUSH_PKT(vmid, GSGPU_MMU_FLUSH_VMID), 0);
 }
@@ -317,7 +317,6 @@ static inline void mmu_set_dma_consistent(struct gsgpu_device *adev)
 
 static inline int mmu_vm_manager_init(struct gsgpu_device *adev)
 {
-
 	/* Adjust VM size here.
 	 * Currently set to 4GB ((1 << 20) 4k pages).
 	 * Max GPUVM size for cayman and SI is 40 bits.
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ring.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ring.c
index c57be909d946..0f4aed6973af 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ring.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ring.c
@@ -261,8 +261,7 @@ int gsgpu_ring_init(struct gsgpu_device *adev, struct gsgpu_ring *ring,
 	ring->ring_size = roundup_pow_of_two(max_dw * 4 * sched_hw_submission);
 
 	ring->buf_mask = ring->ring_size/4 - 1;
-	ring->ptr_mask = ring->funcs->support_64bit_ptrs ?
-		0xffffffffffffffff : ring->buf_mask;
+	ring->ptr_mask = ring->funcs->support_64bit_ptrs ? ~0ULL : (uint64_t)ring->buf_mask;
 	/* Allocate ring buffer */
 	if (ring->ring_obj == NULL) {
 		r = gsgpu_bo_create_kernel(adev, ring->ring_size + ring->funcs->extra_dw, PAGE_SIZE,
-- 
2.43.0

