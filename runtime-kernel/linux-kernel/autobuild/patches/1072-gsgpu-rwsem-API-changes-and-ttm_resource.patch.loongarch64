From 56e5ab196a378ecdadb6b1fd5d80d427bc359655 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Wed, 27 Sep 2023 15:45:01 +0800
Subject: [PATCH] gsgpu: rwsem API changes and ttm_resource API changes

---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_ttm.c | 15 ++++++---------
 1 file changed, 6 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ttm.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ttm.c
index 0771de1238bb..929a99ea49a2 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ttm.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ttm.c
@@ -432,11 +432,8 @@ static int gsgpu_bo_move(struct ttm_buffer_object *bo, bool evict,
 static int gsgpu_ttm_io_mem_reserve(struct ttm_device *bdev, struct ttm_resource *mem)
 {
 	struct gsgpu_device *adev = gsgpu_ttm_adev(bdev);
+	size_t bus_size = (size_t)mem->size;
 
-	mem->bus.addr = NULL;
-	mem->bus.offset = 0;
-	mem->bus.size = mem->num_pages << PAGE_SHIFT;
-	mem->bus.is_iomem = false;
 	switch (mem->mem_type) {
 	case TTM_PL_SYSTEM:
 		/* system memory */
@@ -446,7 +443,7 @@ static int gsgpu_ttm_io_mem_reserve(struct ttm_device *bdev, struct ttm_resource
 	case TTM_PL_VRAM:
 		mem->bus.offset = mem->start << PAGE_SHIFT;
 		/* check if it's visible */
-		if ((mem->bus.offset + mem->bus.size) > adev->gmc.visible_vram_size)
+		if ((mem->bus.offset + bus_size) > adev->gmc.visible_vram_size)
 			return -EINVAL;
 
 		if (adev->mman.aper_base_kaddr &&
@@ -519,7 +516,7 @@ int gsgpu_ttm_tt_get_user_pages(struct ttm_tt *ttm, struct page **pages)
 	if (!(gtt->userflags & GSGPU_GEM_USERPTR_READONLY))
 		flags |= FOLL_WRITE;
 
-	down_read(&mm->mmap_sem);
+	mmap_read_lock(mm);
 
 	if (gtt->userflags & GSGPU_GEM_USERPTR_ANONONLY) {
 		/*
@@ -531,7 +528,7 @@ int gsgpu_ttm_tt_get_user_pages(struct ttm_tt *ttm, struct page **pages)
 
 		vma = find_vma(mm, gtt->userptr);
 		if (!vma || vma->vm_file || vma->vm_end < end) {
-			up_read(&mm->mmap_sem);
+			mmap_read_unlock(mm);;
 			return -EPERM;
 		}
 	}
@@ -566,12 +563,12 @@ int gsgpu_ttm_tt_get_user_pages(struct ttm_tt *ttm, struct page **pages)
 
 	} while (pinned < ttm->num_pages);
 
-	up_read(&mm->mmap_sem);
+	mmap_read_unlock(mm);;
 	return 0;
 
 release_pages:
 	release_pages(pages, pinned);
-	up_read(&mm->mmap_sem);
+	mmap_read_unlock(mm);;
 	return r;
 }
 
-- 
2.39.1

