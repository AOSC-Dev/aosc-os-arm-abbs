From e183e3c441009cb5283b0706794f5042be1b164b Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Tue, 26 Sep 2023 15:34:39 +0800
Subject: [PATCH] gsgpu: misc fixes

---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c | 2 +-
 drivers/gpu/drm/gsgpu/gpu/gsgpu_gem.c     | 8 ++++----
 drivers/gpu/drm/gsgpu/gpu/gsgpu_sa.c      | 2 +-
 3 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c
index 930014999e25..df1cd3e7a05e 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c
@@ -273,7 +273,7 @@ gsgpu_display_user_framebuffer_create(struct drm_device *dev,
 
 	obj = drm_gem_object_lookup(file_priv, mode_cmd->handles[0]);
 	if (obj ==  NULL) {
-		dev_err(&dev->dev, "No GEM object associated to handle 0x%08X, "
+		dev_err(dev->dev, "No GEM object associated to handle 0x%08X, "
 			"can't create framebuffer\n", mode_cmd->handles[0]);
 		return ERR_PTR(-ENOENT);
 	}
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_gem.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_gem.c
index 38e28ca421d1..b5d551b2ea09 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_gem.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_gem.c
@@ -603,7 +603,7 @@ int gsgpu_gem_va_ioctl(struct drm_device *dev, void *data,
 	int r = 0;
 
 	if (args->va_address < GSGPU_VA_RESERVED_SIZE) {
-		dev_dbg(&dev->pdev->dev,
+		dev_dbg(dev->dev,
 			"va_address 0x%LX is in reserved area 0x%LX\n",
 			args->va_address, GSGPU_VA_RESERVED_SIZE);
 		return -EINVAL;
@@ -611,7 +611,7 @@ int gsgpu_gem_va_ioctl(struct drm_device *dev, void *data,
 
 	if (args->va_address >= GSGPU_VA_HOLE_START &&
 	    args->va_address < GSGPU_VA_HOLE_END) {
-		dev_dbg(&dev->pdev->dev,
+		dev_dbg(dev->dev,
 			"va_address 0x%LX is in VA hole 0x%LX-0x%LX\n",
 			args->va_address, GSGPU_VA_HOLE_START,
 			GSGPU_VA_HOLE_END);
@@ -621,7 +621,7 @@ int gsgpu_gem_va_ioctl(struct drm_device *dev, void *data,
 	args->va_address &= GSGPU_VA_HOLE_MASK;
 
 	if ((args->flags & ~valid_flags) && (args->flags & ~prt_flags)) {
-		dev_dbg(&dev->pdev->dev, "invalid flags combination 0x%08X\n",
+		dev_dbg(dev->dev, "invalid flags combination 0x%08X\n",
 			args->flags);
 		return -EINVAL;
 	}
@@ -633,7 +633,7 @@ int gsgpu_gem_va_ioctl(struct drm_device *dev, void *data,
 	case GSGPU_VA_OP_REPLACE:
 		break;
 	default:
-		dev_dbg(&dev->pdev->dev, "unsupported operation %d\n",
+		dev_dbg(dev->dev, "unsupported operation %d\n",
 			args->operation);
 		return -EINVAL;
 	}
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_sa.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_sa.c
index 50cb41d4bd72..334bc72196c4 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_sa.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_sa.c
@@ -344,7 +344,7 @@ void gsgpu_sa_bo_dump_debug_info(struct gsgpu_sa_manager *sa_manager,
 			   soffset, eoffset, eoffset - soffset);
 
 		if (i->fence)
-			seq_printf(m, " protected by 0x%08x on context %llu",
+			seq_printf(m, " protected by 0x%08llu on context %llu",
 				   i->fence->seqno, i->fence->context);
 
 		seq_printf(m, "\n");
-- 
2.43.0

