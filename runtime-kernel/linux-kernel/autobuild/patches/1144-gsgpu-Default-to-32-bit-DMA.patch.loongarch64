From 60709245272e253370c99cf5fc8fef55a6cbdcd8 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Mon, 16 Oct 2023 14:43:42 +0800
Subject: [PATCH] gsgpu: Default to 32-bit DMA

Some versions of the hardware, such as those found in TianChuangZhe
NL430i, have trouble doing DMA over the 32-bit address space, so
we disable 40-bit DMA by default. The user can enable it by setting
the module parameter enable_dma40 to 1.
---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c |  8 +++++++
 drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c | 30 ++++++++++++---------------
 drivers/gpu/drm/gsgpu/include/gsgpu.h |  1 +
 3 files changed, 22 insertions(+), 17 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c
index 852b2a296033..fa83a764271b 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c
@@ -43,6 +43,7 @@ int gsgpu_sched_hw_submission = 2;
 int gsgpu_job_hang_limit;
 int gsgpu_gpu_recovery = 1; /* auto */
 int gsgpu_using_ram; /* using system memory for gpu*/
+int gsgpu_enable_dma40;
 
 int gsgpu_lg100_support = 1;
 MODULE_PARM_DESC(LG100_support, "LG100 support (1 = enabled (default), 0 = disabled");
@@ -210,6 +211,13 @@ MODULE_PARM_DESC(gsgpu_using_ram, "Gpu uses memory instead vram"
 		 "0: using vram for gpu 1:use system for gpu");
 module_param_named(gsgpu_using_ram, gsgpu_using_ram, uint, 0444);
 
+/**
+ * DOC: enable_dma40 (int)
+ * If set to 1, the driver will try to set up 40-bit DMA access for the device.
+ * The default is 0 (disable), in which case 32-bit DMA will be used.
+ */
+MODULE_PARM_DESC(enable_dma40, "Enable 40-bit DMA support (1 = enable, 0 = disable)");
+module_param_named(enable_dma40, gsgpu_enable_dma40, int, 0444);
 
 static const struct pci_device_id pciidlist[] = {
 	{PCI_VENDOR_ID_LOONGSON, LG100_DEVICE_ID, PCI_ANY_ID, PCI_ANY_ID, 0, 0, CHIP_LG100}, //GSGPU
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c
index 1ce43804903f..73be97dc580b 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c
@@ -298,25 +298,21 @@ static inline int mmu_irq_set(struct gsgpu_device *adev)
 
 static inline void mmu_set_dma_consistent(struct gsgpu_device *adev)
 {
-	int r;
-	int dma_bits;
-
-	/* set DMA mask + need_dma32 flags.
-	 * PCIE - can handle 40-bits.
-	 * PCI - dma32 for legacy pci gart, 40 bits on newer asics
-	 */
-	adev->need_dma32 = false;
-	dma_bits = 40;
-	r = dma_set_mask_and_coherent(&adev->pdev->dev, DMA_BIT_MASK(dma_bits));
-	if (r) {
-		pr_warn("gsgpu: %d-bit DMA unavailable. Falling back to 32-bit DMA.\n",
-			dma_bits);
-		adev->need_dma32 = true;
-		dma_bits = 32;
-		dma_set_mask_and_coherent(&adev->pdev->dev, DMA_BIT_MASK(32));
+	/* Set DMA bit mask flags. Some version(s) of the LG100 hardware
+	 * cannot do XDMA above the 32-bit address space so unless explicitly
+	 * requested, we always go for 32-bit DMA. */
+	if (gsgpu_enable_dma40) {
+		int r = dma_set_mask_and_coherent(&adev->pdev->dev, DMA_BIT_MASK(40));
+		if (r) {
+			pr_warn("gsgpu: 40-bit DMA unavailable. Falling back to 32-bit DMA.\n");
+		} else {
+			adev->gmc.dma_bits = 40;
+			return;
+		}
 	}
 
-	adev->gmc.dma_bits = dma_bits;
+	dma_set_mask_and_coherent(&adev->pdev->dev, DMA_BIT_MASK(32));
+	adev->gmc.dma_bits = 32;
 }
 
 static inline int mmu_vm_manager_init(struct gsgpu_device *adev)
diff --git a/drivers/gpu/drm/gsgpu/include/gsgpu.h b/drivers/gpu/drm/gsgpu/include/gsgpu.h
index 64c63469eea6..6f1b34622e02 100644
--- a/drivers/gpu/drm/gsgpu/include/gsgpu.h
+++ b/drivers/gpu/drm/gsgpu/include/gsgpu.h
@@ -77,6 +77,7 @@ extern int gsgpu_vram_page_split;
 extern int gsgpu_job_hang_limit;
 extern int gsgpu_gpu_recovery;
 extern int gsgpu_using_ram;
+extern int gsgpu_enable_dma40;
 
 #define GSGPU_BYTES_PER_DW           4
 
-- 
2.43.0

