From fc35c8d191f635a43a2b427e53c1d76fc26eef9e Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Sat, 21 Oct 2023 13:23:42 +0800
Subject: [PATCH] loongson-laptop: add a PWM lookup table in case of no ACPI

Some LS7A2000-based laptops don't implement the correct ACPI table
entries for ACPI-based backlight control to work. We add a PWM
lookup table so the GSGPU module can find the right PWM device.
This requires exporting the relevant functions in pwm/core.c
---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_backlight.c  |  9 +++++++--
 drivers/platform/loongarch/loongson-laptop.c | 18 ++++++++++++++++++
 drivers/pwm/core.c                           |  2 ++
 3 files changed, 27 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_backlight.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_backlight.c
index ef76af552930..ec17e88174f5 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_backlight.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_backlight.c
@@ -7,6 +7,9 @@
 #include "gsgpu_backlight.h"
 #include "bridge_phy.h"
 
+MODULE_SOFTDEP("post: loongson-laptop");
+MODULE_SOFTDEP("post: pwm-ls");
+
 static bool gsgpu_backlight_get_hw_status(struct gsgpu_backlight *ls_bl)
 {
 	return (gpio_get_value(GPIO_LCD_VDD) && gpio_get_value(GPIO_LCD_EN)
@@ -144,10 +147,12 @@ static int gsgpu_backlight_hw_request_init(struct gsgpu_device *adev,
 {
 	int ret = 0;
 	bool pwm_enable_default;
+	char pwm_consumer_name[32];
 
-	ls_bl->pwm = pwm_get(adev->ddev->dev, NULL);
+	snprintf(pwm_consumer_name, sizeof(pwm_consumer_name), "ls-pwm-%02d", ls_bl->pwm_id);
+	ls_bl->pwm = pwm_get(&adev->loongson_dc->dev, pwm_consumer_name);
 	if (IS_ERR(ls_bl->pwm)) {
-		DRM_ERROR("Failed to get the pwm chip\n");
+		DRM_ERROR("Failed to get the pwm chip (%s)\n", pwm_consumer_name);
 		ls_bl->pwm = NULL;
 		goto ERROR_PWM;
 	}
diff --git a/drivers/platform/loongarch/loongson-laptop.c b/drivers/platform/loongarch/loongson-laptop.c
index 99203584949d..8e1713e77939 100644
--- a/drivers/platform/loongarch/loongson-laptop.c
+++ b/drivers/platform/loongarch/loongson-laptop.c
@@ -14,6 +14,7 @@
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/acpi.h>
+#include <linux/pwm.h>
 #include <linux/backlight.h>
 #include <linux/device.h>
 #include <linux/input.h>
@@ -548,11 +549,28 @@ static struct generic_sub_driver generic_sub_drivers[] __refdata = {
 	},
 };
 
+static struct pwm_lookup ls_pwm_lookup[] = {
+	PWM_LOOKUP_WITH_MODULE("LOON0006:00", 0, NULL, "ls-pwm-00",
+			       0, PWM_POLARITY_NORMAL, "pwm-ls"),
+	PWM_LOOKUP_WITH_MODULE("LOON0006:01", 0, NULL, "ls-pwm-01",
+			       0, PWM_POLARITY_NORMAL, "pwm-ls"),
+	PWM_LOOKUP_WITH_MODULE("LOON0006:02", 0, NULL, "ls-pwm-02",
+			       0, PWM_POLARITY_NORMAL, "pwm-ls"),
+	PWM_LOOKUP_WITH_MODULE("LOON0006:03", 0, NULL, "ls-pwm-03",
+			       0, PWM_POLARITY_NORMAL, "pwm-ls"),
+};
+
 static int __init generic_acpi_laptop_init(void)
 {
 	bool ec_found;
 	int i, ret, status;
 
+	/* Some LS7A2000 hardware does not implement the proper ACPI DSDT
+	 * entries required for ACPI-based backlight control. We therefore
+	 * manually add a PWM lookup table so the GSGPU module can find
+	 * the right PWM device. */
+	pwm_add_table(ls_pwm_lookup, ARRAY_SIZE(ls_pwm_lookup));
+
 	if (acpi_disabled)
 		return -ENODEV;
 
diff --git a/drivers/pwm/core.c b/drivers/pwm/core.c
index 29078486534d..2a7d802e9d9b 100644
--- a/drivers/pwm/core.c
+++ b/drivers/pwm/core.c
@@ -787,6 +787,7 @@ void pwm_add_table(struct pwm_lookup *table, size_t num)
 
 	mutex_unlock(&pwm_lookup_lock);
 }
+EXPORT_SYMBOL_GPL(pwm_add_table);
 
 /**
  * pwm_remove_table() - unregister PWM device consumers
@@ -804,6 +805,7 @@ void pwm_remove_table(struct pwm_lookup *table, size_t num)
 
 	mutex_unlock(&pwm_lookup_lock);
 }
+EXPORT_SYMBOL_GPL(pwm_remove_table);
 
 /**
  * pwm_get() - look up and request a PWM device
-- 
2.39.1

