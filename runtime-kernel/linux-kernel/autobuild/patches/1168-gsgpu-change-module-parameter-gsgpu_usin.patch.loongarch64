From a49d060ad28ce4f7e4476ac0cbda2f27d5e9b951 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Sat, 28 Oct 2023 23:34:14 +0800
Subject: [PATCH] gsgpu: change module parameter gsgpu_using_ram to
 use_system_ram

The latter is less redundant and more grammatically proper.
---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_plane.c |  2 +-
 drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c  |  2 +-
 drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c      | 12 ++++++++----
 drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c      |  4 ++--
 drivers/gpu/drm/gsgpu/gpu/gsgpu_vram_mgr.c |  2 +-
 drivers/gpu/drm/gsgpu/include/gsgpu.h      |  2 +-
 6 files changed, 14 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_plane.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_plane.c
index a41bd7b24445..168b0b087ef9 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_plane.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_dc_plane.c
@@ -60,7 +60,7 @@ static int dc_plane_helper_prepare_fb(struct drm_plane *plane,
 		return r;
 	}
 
-	if (gsgpu_using_ram) {
+	if (gsgpu_use_system_ram) {
 		fb_addr = virt_to_phys(fb_vaddr);
 		fb_addr = (fb_addr & 0x1ffffffffffffULL);
 		afb->address = fb_addr;
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c
index 35571781f35b..6370664218eb 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c
@@ -185,7 +185,7 @@ int gsgpu_display_crtc_page_flip_target(struct drm_crtc *crtc,
 
 	gsgpu_bo_kmap(new_abo, &fb_vaddr);
 
-	if (gsgpu_using_ram) {
+	if (gsgpu_use_system_ram) {
 		work->base = virt_to_phys(fb_vaddr);
 		/* 0x460000000 - 0x46fffffff to 0x20000000 - 0x2fffffff */
 		work->base = work->base & 0x3fffffff;
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c
index b8381dea9c6c..1c5dd6e6d910 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_drv.c
@@ -42,7 +42,7 @@ int gsgpu_sched_jobs = 32;
 int gsgpu_sched_hw_submission = 2;
 int gsgpu_job_hang_limit;
 int gsgpu_gpu_recovery = 1; /* auto */
-int gsgpu_using_ram; /* using system memory for gpu*/
+int gsgpu_use_system_ram; /* using system memory for gpu*/
 int gsgpu_enable_dma40;
 
 int gsgpu_lg100_support = 1;
@@ -207,9 +207,13 @@ module_param_named(job_hang_limit, gsgpu_job_hang_limit, int, 0444);
 MODULE_PARM_DESC(gpu_recovery, "Enable GPU recovery mechanism, (1 = enable, 0 = disable, -1 = auto)");
 module_param_named(gpu_recovery, gsgpu_gpu_recovery, int, 0444);
 
-MODULE_PARM_DESC(gsgpu_using_ram, "Gpu uses memory instead vram"
-		 "0: using vram for gpu 1:use system for gpu");
-module_param_named(gsgpu_using_ram, gsgpu_using_ram, uint, 0444);
+/**
+ * DOC: gsgpu_use_system_ram (int)
+ * If set to 1 (enabled), will use system ram for video memory.
+ * The default is 0 (disabled), in which case the on-board VRAM will be used.
+ */
+MODULE_PARM_DESC(use_system_ram, "Use system RAM for video memory (1 = enable, 0 = disable).");
+module_param_named(use_system_ram, gsgpu_use_system_ram, uint, 0444);
 
 /**
  * DOC: enable_dma40 (int)
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c
index 9968e07f4262..c6724a2df30a 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_mmu.c
@@ -55,7 +55,7 @@ static int mmu_mc_init(struct gsgpu_device *adev)
 	 * 		pci_resource_len(adev->pdev, 0)
 	 * */
 
-	if (gsgpu_using_ram) {
+	if (gsgpu_use_system_ram) {
 		adev->gmc.aper_base =  0x460000000;
 		adev->gmc.aper_size = 0x10000000;
 	} else {
@@ -342,7 +342,7 @@ static inline int mmu_vm_manager_init(struct gsgpu_device *adev)
 	gsgpu_vm_manager_init(adev);
 
 	/* base offset of vram pages */
-	if (gsgpu_using_ram)
+	if (gsgpu_use_system_ram)
 		adev->vm_manager.vram_base_offset = adev->gmc.aper_base;
 	else
 		adev->vm_manager.vram_base_offset = 0x1000000000000;
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_vram_mgr.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_vram_mgr.c
index 86a4c31c64ad..0e2d3541a9d9 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_vram_mgr.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_vram_mgr.c
@@ -537,7 +537,7 @@ static int gsgpu_vram_mgr_new(struct ttm_resource_manager *man,
 	if (gsgpu_is_vram_mgr_blocks_contiguous(&vres->blocks))
 		vres->base.placement |= TTM_PL_FLAG_CONTIGUOUS;
 
-	if (gsgpu_using_ram)
+	if (gsgpu_use_system_ram)
 		vres->base.bus.caching = ttm_cached;
 	else
 		vres->base.bus.caching = ttm_write_combined;
diff --git a/drivers/gpu/drm/gsgpu/include/gsgpu.h b/drivers/gpu/drm/gsgpu/include/gsgpu.h
index 1b60c5af8316..9801210f167a 100644
--- a/drivers/gpu/drm/gsgpu/include/gsgpu.h
+++ b/drivers/gpu/drm/gsgpu/include/gsgpu.h
@@ -76,7 +76,7 @@ extern int gsgpu_sched_hw_submission;
 extern int gsgpu_vram_page_split;
 extern int gsgpu_job_hang_limit;
 extern int gsgpu_gpu_recovery;
-extern int gsgpu_using_ram;
+extern int gsgpu_use_system_ram;
 extern int gsgpu_enable_dma40;
 
 #define GSGPU_BYTES_PER_DW           4
-- 
2.39.1

