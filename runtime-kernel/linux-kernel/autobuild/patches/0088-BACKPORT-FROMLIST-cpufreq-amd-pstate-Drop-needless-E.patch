From f93cc851fbdb136a6e8d74a7ccf1b2f71367c3f9 Mon Sep 17 00:00:00 2001
From: Mario Limonciello <mario.limonciello@amd.com>
Date: Sat, 12 Oct 2024 12:45:19 -0500
Subject: [PATCH 088/139] BACKPORT: FROMLIST: cpufreq/amd-pstate: Drop needless
 EPP initialization

The EPP value doesn't need to be cached to the CPPC request in
amd_pstate_epp_update_limit() because it's passed as an argument
at the end to amd_pstate_set_epp() and stored at that time.

Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>

Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/3690
Link: https://lore.kernel.org/linux-pm/20241012174519.897-4-mario.limonciello@amd.com/
[Kexy: Resolved minor conflict in drivers/cpufreq/amd-pstate.c]
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/cpufreq/amd-pstate.c | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/drivers/cpufreq/amd-pstate.c b/drivers/cpufreq/amd-pstate.c
index 099cfd6ea486..d30e8db2ded3 100644
--- a/drivers/cpufreq/amd-pstate.c
+++ b/drivers/cpufreq/amd-pstate.c
@@ -1597,12 +1597,6 @@ static void amd_pstate_epp_update_limit(struct cpufreq_policy *policy)
 	if (cpudata->policy == CPUFREQ_POLICY_PERFORMANCE)
 		epp = 0;
 
-	/* Set initial EPP value */
-	if (cpu_feature_enabled(X86_FEATURE_CPPC)) {
-		value &= ~GENMASK_ULL(31, 24);
-		value |= (u64)epp << 24;
-	}
-
 	WRITE_ONCE(cpudata->cppc_req_cached, value);
 	amd_pstate_set_epp(cpudata, epp);
 }
-- 
2.47.0

