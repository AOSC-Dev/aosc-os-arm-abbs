From 0f9bf4508d9eb65c2eaf1def95c9d6633e49e2b3 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Wed, 27 Sep 2023 18:36:41 +0800
Subject: [PATCH] gsgpu: Copy commit b3ac17667f115e64c67ea6101fc814f47134b530

---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c |  7 ++-----
 drivers/gpu/drm/gsgpu/gpu/gsgpu_ttm.c | 10 ++++------
 drivers/gpu/drm/gsgpu/gpu/gsgpu_vm.c  |  7 ++++---
 3 files changed, 10 insertions(+), 14 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c
index cf8abe4547f9..7905f539f9e9 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c
@@ -58,12 +58,9 @@ static int gsgpu_ctx_init(struct gsgpu_device *adev,
 	/* create context entity for each ring */
 	for (i = 0; i < adev->num_rings; i++) {
 		struct gsgpu_ring *ring = adev->rings[i];
-		struct drm_sched_rq *rq;
-
-		rq = &ring->sched.sched_rq[priority];
-
+		struct drm_gpu_scheduler *sched = &ring->sched;
 		r = drm_sched_entity_init(&ctx->rings[i].entity,
-					  &rq, 1, &ctx->guilty);
+					  priority, &sched, 1, &ctx->guilty);
 		if (r)
 			goto failed;
 	}
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ttm.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ttm.c
index 62ee889ba58f..c5a586cd0a68 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ttm.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ttm.c
@@ -1477,12 +1477,10 @@ void gsgpu_ttm_set_buffer_funcs_status(struct gsgpu_device *adev, bool enable)
 		return;
 
 	if (enable) {
-		struct gsgpu_ring *ring;
-		struct drm_sched_rq *rq;
-
-		ring = adev->mman.buffer_funcs_ring;
-		rq = &ring->sched.sched_rq[DRM_SCHED_PRIORITY_KERNEL];
-		r = drm_sched_entity_init(&adev->mman.entity, &rq, 1, NULL);
+		struct gsgpu_ring *ring = adev->mman.buffer_funcs_ring;
+		struct drm_gpu_scheduler *sched = &ring->sched;
+		r = drm_sched_entity_init(&adev->mman.entity,
+					  DRM_SCHED_PRIORITY_KERNEL, &sched, 1, NULL);
 		if (r) {
 			DRM_ERROR("Failed setting up TTM BO move entity (%d)\n",
 				  r);
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_vm.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_vm.c
index 5d16a04823ea..8e73c9aa162c 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_vm.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_vm.c
@@ -2221,7 +2221,7 @@ int gsgpu_vm_init(struct gsgpu_device *ldev, struct gsgpu_vm *vm,
 		GSGPU_VM_PTE_COUNT(ldev) * gsgpu_get_pde_pte_size(ldev));
 	unsigned ring_instance;
 	struct gsgpu_ring *ring;
-	struct drm_sched_rq *rq;
+	struct drm_gpu_scheduler *rq;
 	unsigned long size;
 	u64 flags;
 	int r;
@@ -2240,8 +2240,9 @@ int gsgpu_vm_init(struct gsgpu_device *ldev, struct gsgpu_vm *vm,
 	ring_instance = atomic_inc_return(&ldev->vm_manager.vm_pte_next_ring);
 	ring_instance %= ldev->vm_manager.vm_pte_num_rings;
 	ring = ldev->vm_manager.vm_pte_rings[ring_instance];
-	rq = &ring->sched.sched_rq[DRM_SCHED_PRIORITY_KERNEL];
-	r = drm_sched_entity_init(&vm->entity, &rq, 1, NULL);
+	rq = &ring->sched;
+	r = drm_sched_entity_init(&vm->entity, DRM_SCHED_PRIORITY_KERNEL,
+				  &rq, 1, NULL);
 	if (r)
 		return r;
 
-- 
2.43.0

