From 825db5e2ccbef9762c42ee59bde7ab89ddd8b301 Mon Sep 17 00:00:00 2001
From: "Dr. Chang Liu, PhD" <cl91tp@gmail.com>
Date: Tue, 26 Sep 2023 15:06:45 +0800
Subject: [PATCH] gsgpu: misc fixes

---
 drivers/gpu/drm/gsgpu/gpu/gsgpu_cs.c      |  1 -
 drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c     |  2 +-
 drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c |  1 -
 drivers/gpu/drm/gsgpu/gpu/gsgpu_fb.c      |  1 -
 drivers/gpu/drm/gsgpu/gpu/gsgpu_gart.c    |  1 -
 drivers/gpu/drm/gsgpu/gpu/gsgpu_gem.c     |  1 -
 drivers/gpu/drm/gsgpu/gpu/gsgpu_object.c  | 16 ++++++++--------
 drivers/gpu/drm/gsgpu/gpu/gsgpu_ring.c    |  3 +--
 8 files changed, 10 insertions(+), 16 deletions(-)

diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_cs.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_cs.c
index fc70bf2c4908..166104fe6f6b 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_cs.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_cs.c
@@ -1,6 +1,5 @@
 #include <linux/pagemap.h>
 #include <linux/sync_file.h>
-#include <drm/drmP.h>
 #include <drm/gsgpu_drm.h>
 #include <drm/drm_syncobj.h>
 #include "gsgpu.h"
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c
index 03a8ca5821d5..338b6d64ed6a 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ctx.c
@@ -27,7 +27,7 @@ static int gsgpu_ctx_init(struct gsgpu_device *adev,
 	unsigned i, j;
 	int r;
 
-	if (priority < 0 || priority >= DRM_SCHED_PRIORITY_MAX)
+	if (priority < 0 || priority >= DRM_SCHED_PRIORITY_COUNT)
 		return -EINVAL;
 
 	r = gsgpu_ctx_priority_permit(filp, priority);
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c
index 8cca8b100bf2..82284029c1e9 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_display.c
@@ -1,6 +1,5 @@
 #include <linux/pm_runtime.h>
 
-#include <drm/drmP.h>
 #include <drm/drm_crtc_helper.h>
 #include <drm/drm_edid.h>
 #include <drm/drm_gem_framebuffer_helper.h>
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_fb.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_fb.c
index 3abc22a15bf3..52a8b0a8d3d6 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_fb.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_fb.c
@@ -2,7 +2,6 @@
 #include <linux/slab.h>
 #include <linux/pm_runtime.h>
 
-#include <drm/drmP.h>
 #include <drm/drm_crtc.h>
 #include <drm/drm_crtc_helper.h>
 #include <drm/gsgpu_drm.h>
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_gart.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_gart.c
index ccf7fd567e35..69688c11a5eb 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_gart.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_gart.c
@@ -1,4 +1,3 @@
-#include <drm/drmP.h>
 #include <drm/gsgpu_drm.h>
 
 #include "gsgpu.h"
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_gem.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_gem.c
index 795938dab699..38e28ca421d1 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_gem.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_gem.c
@@ -1,6 +1,5 @@
 #include <linux/ktime.h>
 #include <linux/pagemap.h>
-#include <drm/drmP.h>
 #include <drm/gsgpu_drm.h>
 #include "gsgpu.h"
 #include "gsgpu_display.h"
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_object.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_object.c
index a4d600af27fc..773277705f80 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_object.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_object.c
@@ -42,11 +42,11 @@ static void gsgpu_bo_subtract_pin_size(struct gsgpu_bo *bo)
 {
 	struct gsgpu_device *adev = gsgpu_ttm_adev(bo->tbo.bdev);
 
-	if (bo->tbo.mem.mem_type == TTM_PL_VRAM) {
+	if (bo->tbo.resource->mem_type == TTM_PL_VRAM) {
 		atomic64_sub(gsgpu_bo_size(bo), &adev->vram_pin_size);
 		atomic64_sub(gsgpu_vram_mgr_bo_visible_size(bo),
 			     &adev->visible_pin_size);
-	} else if (bo->tbo.mem.mem_type == TTM_PL_TT) {
+	} else if (bo->tbo.resource->mem_type == TTM_PL_TT) {
 		atomic64_sub(gsgpu_bo_size(bo), &adev->gart_pin_size);
 	}
 }
@@ -434,7 +434,7 @@ static int gsgpu_bo_do_create(struct gsgpu_device *adev,
 	bo->gem_base.resv = bo->tbo.base.resv;
 
 	if (!gsgpu_gmc_vram_full_visible(&adev->gmc) &&
-	    bo->tbo.mem.mem_type == TTM_PL_VRAM &&
+	    bo->tbo.resource->mem_type == TTM_PL_VRAM &&
 	    bo->tbo.mem.start < adev->gmc.visible_vram_size >> PAGE_SHIFT)
 		gsgpu_cs_report_moved_bytes(adev, ctx.bytes_moved,
 					     ctx.bytes_moved);
@@ -830,7 +830,7 @@ int gsgpu_bo_pin_restricted(struct gsgpu_bo *bo, u32 domain,
 	domain = gsgpu_bo_get_preferred_pin_domain(adev, domain);
 
 	if (bo->tbo.pin_count) {
-		uint32_t mem_type = bo->tbo.mem.mem_type;
+		uint32_t mem_type = bo->tbo.resource->mem_type;
 
 		if (!(domain & gsgpu_mem_type_to_domain(mem_type)))
 			return -EINVAL;
@@ -872,7 +872,7 @@ int gsgpu_bo_pin_restricted(struct gsgpu_bo *bo, u32 domain,
 
 	ttm_bo_pin(&bo->tbo);
 
-	domain = gsgpu_mem_type_to_domain(bo->tbo.mem.mem_type);
+	domain = gsgpu_mem_type_to_domain(bo->tbo.resource->mem_type);
 	if (domain == GSGPU_GEM_DOMAIN_VRAM) {
 		atomic64_add(gsgpu_bo_size(bo), &adev->vram_pin_size);
 		atomic64_add(gsgpu_vram_mgr_bo_visible_size(bo),
@@ -1269,13 +1269,13 @@ void gsgpu_bo_fence(struct gsgpu_bo *bo, struct dma_fence *fence,
  */
 u64 gsgpu_bo_gpu_offset(struct gsgpu_bo *bo)
 {
-	WARN_ON_ONCE(bo->tbo.mem.mem_type == TTM_PL_SYSTEM);
-	WARN_ON_ONCE(bo->tbo.mem.mem_type == TTM_PL_TT &&
+	WARN_ON_ONCE(bo->tbo.resource->mem_type == TTM_PL_SYSTEM);
+	WARN_ON_ONCE(bo->tbo.resource->mem_type == TTM_PL_TT &&
 		     !gsgpu_gtt_mgr_has_gart_addr(&bo->tbo.mem));
 	WARN_ON_ONCE(!ww_mutex_is_locked(&bo->tbo.base.resv->lock) &&
 		     !bo->tbo.pin_count);
 	WARN_ON_ONCE(bo->tbo.mem.start == GSGPU_BO_INVALID_OFFSET);
-	WARN_ON_ONCE(bo->tbo.mem.mem_type == TTM_PL_VRAM &&
+	WARN_ON_ONCE(bo->tbo.resource->mem_type == TTM_PL_VRAM &&
 		     !(bo->flags & GSGPU_GEM_CREATE_VRAM_CONTIGUOUS));
 
 	return bo->tbo.offset;
diff --git a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ring.c b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ring.c
index 7ec3f735ec58..c57be909d946 100644
--- a/drivers/gpu/drm/gsgpu/gpu/gsgpu_ring.c
+++ b/drivers/gpu/drm/gsgpu/gpu/gsgpu_ring.c
@@ -1,7 +1,6 @@
 #include <linux/seq_file.h>
 #include <linux/slab.h>
 #include <linux/debugfs.h>
-#include <drm/drmP.h>
 #include <drm/gsgpu_drm.h>
 #include "gsgpu.h"
 
@@ -284,7 +283,7 @@ int gsgpu_ring_init(struct gsgpu_device *adev, struct gsgpu_ring *ring,
 	INIT_LIST_HEAD(&ring->lru_list);
 	gsgpu_ring_lru_touch(adev, ring);
 
-	for (i = 0; i < DRM_SCHED_PRIORITY_MAX; ++i)
+	for (i = 0; i < DRM_SCHED_PRIORITY_COUNT; ++i)
 		atomic_set(&ring->num_jobs[i], 0);
 
 	if (gsgpu_debugfs_ring_init(adev, ring)) {
-- 
2.39.1

