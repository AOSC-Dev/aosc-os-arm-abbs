From 071a9e0846c1086da79a19dc627bb3db5d3b358d Mon Sep 17 00:00:00 2001
From: Jiajie Chen <c@jia.je>
Date: Mon, 6 May 2024 23:42:00 -0700
Subject: [PATCH 07/55] Fedora qt everywhere opensource src 4.6.3
 glib_eventloop_nullcheck

---
 src/gui/kernel/qguieventdispatcher_glib.cpp | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/src/gui/kernel/qguieventdispatcher_glib.cpp b/src/gui/kernel/qguieventdispatcher_glib.cpp
index 9edbed4d..bb215ecf 100644
--- a/src/gui/kernel/qguieventdispatcher_glib.cpp
+++ b/src/gui/kernel/qguieventdispatcher_glib.cpp
@@ -76,7 +76,7 @@ static gboolean x11EventSourcePrepare(GSource *s, gint *timeout)
     GX11EventSource *source = reinterpret_cast<GX11EventSource *>(s);
     return (XEventsQueued(X11->display, QueuedAfterFlush)
             || (!(source->flags & QEventLoop::ExcludeUserInputEvents)
-                && !source->d->queuedUserInputEvents.isEmpty()));
+                && source->d && !source->d->queuedUserInputEvents.isEmpty()));
 }
 
 static gboolean x11EventSourceCheck(GSource *s)
@@ -84,7 +84,7 @@ static gboolean x11EventSourceCheck(GSource *s)
     GX11EventSource *source = reinterpret_cast<GX11EventSource *>(s);
     return (XEventsQueued(X11->display, QueuedAfterFlush)
             || (!(source->flags & QEventLoop::ExcludeUserInputEvents)
-                && !source->d->queuedUserInputEvents.isEmpty()));
+                && source->d && !source->d->queuedUserInputEvents.isEmpty()));
 }
 
 static gboolean x11EventSourceDispatch(GSource *s, GSourceFunc callback, gpointer user_data)
@@ -95,7 +95,7 @@ static gboolean x11EventSourceDispatch(GSource *s, GSourceFunc callback, gpointe
     do {
         XEvent event;
         if (!(source->flags & QEventLoop::ExcludeUserInputEvents)
-            && !source->d->queuedUserInputEvents.isEmpty()) {
+            && source->d && !source->d->queuedUserInputEvents.isEmpty()) {
             // process a pending user input event
             event = source->d->queuedUserInputEvents.takeFirst();
         } else if (XEventsQueued(X11->display, QueuedAlready)) {
@@ -112,7 +112,8 @@ static gboolean x11EventSourceDispatch(GSource *s, GSourceFunc callback, gpointe
                 case XKeyRelease:
                 case EnterNotify:
                 case LeaveNotify:
-                    source->d->queuedUserInputEvents.append(event);
+                    if (source->d)
+                        source->d->queuedUserInputEvents.append(event);
                     continue;
 
                 case ClientMessage:
@@ -127,7 +128,8 @@ static gboolean x11EventSourceDispatch(GSource *s, GSourceFunc callback, gpointe
                             break;
                         }
                     }
-                    source->d->queuedUserInputEvents.append(event);
+                    if (source->d)
+                        source->d->queuedUserInputEvents.append(event);
                     continue;
 
                 default:
@@ -140,7 +142,7 @@ static gboolean x11EventSourceDispatch(GSource *s, GSourceFunc callback, gpointe
         }
 
         // send through event filter
-        if (source->q->filterEvent(&event))
+        if (source->q && source->q->filterEvent(&event))
             continue;
 
         if (qApp->x11ProcessEvent(&event) == 1)
@@ -152,7 +154,8 @@ static gboolean x11EventSourceDispatch(GSource *s, GSourceFunc callback, gpointe
 
  out:
 
-    source->d->runTimersOnceWithNormalPriority();
+    if (source->d)
+        source->d->runTimersOnceWithNormalPriority();
 
     if (callback)
         callback(user_data);
-- 
2.45.0

