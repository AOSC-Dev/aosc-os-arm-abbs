From 9ce85fb1dd4dd013c14352bac9722365f23209fc Mon Sep 17 00:00:00 2001
From: Jiajie Chen <c@jia.je>
Date: Mon, 6 May 2024 23:42:05 -0700
Subject: [PATCH 30/55] Fedora qt everywhere opensource src 4.8.5 QTBUG 4862

---
 src/corelib/io/qfilesystemengine_unix.cpp | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/src/corelib/io/qfilesystemengine_unix.cpp b/src/corelib/io/qfilesystemengine_unix.cpp
index 4a9049b4..270e21d4 100644
--- a/src/corelib/io/qfilesystemengine_unix.cpp
+++ b/src/corelib/io/qfilesystemengine_unix.cpp
@@ -674,6 +674,25 @@ bool QFileSystemEngine::setPermissions(const QFileSystemEntry &entry, QFile::Per
 QString QFileSystemEngine::homePath()
 {
     QString home = QFile::decodeName(qgetenv("HOME"));
+    if (home.isEmpty())
+    {
+#if !defined(QT_NO_THREAD) && defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_OPENBSD)
+        int size_max = sysconf(_SC_GETPW_R_SIZE_MAX);
+        if (size_max == -1)
+            size_max = 1024;
+        QVarLengthArray<char, 1024> buf(size_max);
+#endif
+        struct passwd *pw = 0;
+        uid_t user_id = getuid();
+        pw = getpwuid(user_id);
+#if !defined(QT_NO_THREAD) && defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_OPENBSD)
+        struct passwd entry;
+        getpwuid_r(user_id, &entry, buf.data(), buf.size(), &pw);
+#else
+        pw = getpwuid(user_id);
+#endif
+        home = QFile::decodeName(QByteArray(pw->pw_dir));
+    }
     if (home.isEmpty())
         home = rootPath();
     return QDir::cleanPath(home);
-- 
2.45.0

