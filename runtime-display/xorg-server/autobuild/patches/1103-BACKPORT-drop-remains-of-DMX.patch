From 105ed9f72c190b2e9b70634e48f68c1f89dba370 Mon Sep 17 00:00:00 2001
From: "Enrico Weigelt, metux IT consult" <info@metux.net>
Date: Tue, 5 Mar 2024 16:57:50 +0100
Subject: [PATCH 103/105] drop remains of DMX

DMX has long gone, but there's still some fallout from it's removal
yet to be cleaned up.

Signed-off-by: Enrico Weigelt, metux IT consult <info@metux.net>
Part-of: <https://gitlab.freedesktop.org/xorg/xserver/-/merge_requests/1362>
---
 Xext/panoramiX.c             |  4 ---
 dix/events.c                 | 54 ------------------------------------
 dix/protocol.txt             | 18 ------------
 include/dix.h                |  5 ----
 include/protocol-versions.h  |  5 ----
 mi/miinitext.c               | 11 --------
 mi/mipointer.c               |  2 +-
 8 files changed, 1 insertion(+), 99 deletions(-)

diff --git a/Xext/panoramiX.c b/Xext/panoramiX.c
index bd9c45b03..d5347341b 100644
--- a/Xext/panoramiX.c
+++ b/Xext/panoramiX.c
@@ -27,10 +27,6 @@ Equipment Corporation.
 #include <dix-config.h>
 #endif
 
-#ifdef HAVE_DMX_CONFIG_H
-#include <dmx-config.h>
-#endif
-
 #include <stdio.h>
 #include <X11/X.h>
 #include <X11/Xproto.h>
diff --git a/dix/events.c b/dix/events.c
index 86f5357e8..aa0131902 100644
--- a/dix/events.c
+++ b/dix/events.c
@@ -3245,60 +3245,6 @@ WindowsRestructured(void)
     }
 }
 
-#ifdef PANORAMIX
-/* This was added to support reconfiguration under Xdmx.  The problem is
- * that if the 0th screen (i.e., screenInfo.screens[0]) is moved to an origin
- * other than 0,0, the information in the private sprite structure must
- * be updated accordingly, or XYToWindow (and other routines) will not
- * compute correctly. */
-void
-ReinitializeRootWindow(WindowPtr win, int xoff, int yoff)
-{
-    GrabPtr grab;
-    DeviceIntPtr pDev;
-    SpritePtr pSprite;
-
-    if (noPanoramiXExtension)
-        return;
-
-    pDev = inputInfo.devices;
-    while (pDev) {
-        if (DevHasCursor(pDev)) {
-            pSprite = pDev->spriteInfo->sprite;
-            pSprite->hot.x -= xoff;
-            pSprite->hot.y -= yoff;
-
-            pSprite->hotPhys.x -= xoff;
-            pSprite->hotPhys.y -= yoff;
-
-            pSprite->hotLimits.x1 -= xoff;
-            pSprite->hotLimits.y1 -= yoff;
-            pSprite->hotLimits.x2 -= xoff;
-            pSprite->hotLimits.y2 -= yoff;
-
-            if (RegionNotEmpty(&pSprite->Reg1))
-                RegionTranslate(&pSprite->Reg1, xoff, yoff);
-            if (RegionNotEmpty(&pSprite->Reg2))
-                RegionTranslate(&pSprite->Reg2, xoff, yoff);
-
-            /* FIXME: if we call ConfineCursorToWindow, must we do anything else? */
-            if ((grab = pDev->deviceGrab.grab) && grab->confineTo) {
-                if (grab->confineTo->drawable.pScreen
-                    != pSprite->hotPhys.pScreen)
-                    pSprite->hotPhys.x = pSprite->hotPhys.y = 0;
-                ConfineCursorToWindow(pDev, grab->confineTo, TRUE, TRUE);
-            }
-            else
-                ConfineCursorToWindow(pDev,
-                                      pSprite->hotPhys.pScreen->root,
-                                      TRUE, FALSE);
-
-        }
-        pDev = pDev->next;
-    }
-}
-#endif
-
 /**
  * Initialize a sprite for the given device and set it to some sane values. If
  * the device already has a sprite alloc'd, don't realloc but just reset to
diff --git a/dix/protocol.txt b/dix/protocol.txt
index a1bf93652..189ad5d40 100644
--- a/dix/protocol.txt
+++ b/dix/protocol.txt
@@ -51,24 +51,6 @@ R003 DAMAGE:Subtract
 R004 DAMAGE:Add
 V000 DAMAGE:Notify
 E000 DAMAGE:BadDamage
-R000 DMX:DMXQueryVersion
-R001 DMX:DMXGetScreenCount
-R002 DMX:DMXGetScreenInfoDEPRECATED
-R003 DMX:DMXGetWindowAttributes
-R004 DMX:DMXGetInputCount
-R005 DMX:DMXGetInputAttributes
-R006 DMX:DMXForceWindowCreationDEPRECATED
-R007 DMX:DMXReconfigureScreenDEPRECATED
-R008 DMX:DMXSync
-R009 DMX:DMXForceWindowCreation
-R010 DMX:DMXGetScreenAttributes
-R011 DMX:DMXChangeScreensAttributes
-R012 DMX:DMXAddScreen
-R013 DMX:DMXRemoveScreen
-R014 DMX:DMXGetDesktopAttributes
-R015 DMX:DMXChangeDesktopAttributes
-R016 DMX:DMXAddInput
-R017 DMX:DMXRemoveInput
 R000 DOUBLE-BUFFER:GetVersion
 R001 DOUBLE-BUFFER:AllocateBackBufferName
 R002 DOUBLE-BUFFER:DeallocateBackBufferName
diff --git a/include/dix.h b/include/dix.h
index 0dcd09b65..576c0fc0f 100644
--- a/include/dix.h
+++ b/include/dix.h
@@ -570,11 +570,6 @@ IsInterferingGrab(ClientPtr /* client */ ,
                   DeviceIntPtr /* dev */ ,
                   xEvent * /* events */ );
 
-#ifdef PANORAMIX
-extern _X_EXPORT void
-ReinitializeRootWindow(WindowPtr win, int xoff, int yoff);
-#endif
-
 #ifdef RANDR
 extern _X_EXPORT void
 ScreenRestructured(ScreenPtr pScreen);
diff --git a/include/protocol-versions.h b/include/protocol-versions.h
index d7bfc6dca..07e21df49 100644
--- a/include/protocol-versions.h
+++ b/include/protocol-versions.h
@@ -50,11 +50,6 @@
 #define SERVER_DRI3_MAJOR_VERSION               1
 #define SERVER_DRI3_MINOR_VERSION               2
 
-/* DMX */
-#define SERVER_DMX_MAJOR_VERSION		2
-#define SERVER_DMX_MINOR_VERSION		2
-#define SERVER_DMX_PATCH_VERSION		20040604
-
 /* Generic event extension */
 #define SERVER_GE_MAJOR_VERSION                 1
 #define SERVER_GE_MINOR_VERSION                 0
diff --git a/mi/miinitext.c b/mi/miinitext.c
index 2e4aba534..8249ca247 100644
--- a/mi/miinitext.c
+++ b/mi/miinitext.c
@@ -80,17 +80,6 @@ SOFTWARE.
 #include "xf86Extensions.h"
 #endif
 
-#ifdef HAVE_DMX_CONFIG_H
-#include <dmx-config.h>
-#undef XV
-#undef DBE
-#undef SCREENSAVER
-#undef RANDR
-#undef DAMAGE
-#undef COMPOSITE
-#undef MITSHM
-#endif
-
 #ifdef HAVE_XNEST_CONFIG_H
 #include <xnest-config.h>
 #undef COMPOSITE
diff --git a/mi/mipointer.c b/mi/mipointer.c
index 8ab814785..652726f3b 100644
--- a/mi/mipointer.c
+++ b/mi/mipointer.c
@@ -251,7 +251,7 @@ miPointerCursorLimits(DeviceIntPtr pDev, ScreenPtr pScreen, CursorPtr pCursor,
  *
  * This function is called from:
  *    - sprite init code to place onto initial position
- *    - the various WarpPointer implementations (core, XI, Xinerama, dmx,…)
+ *    - the various WarpPointer implementations (core, XI, Xinerama,…)
  *    - during the cursor update path in CheckMotion
  *    - in the Xinerama part of NewCurrentScreen
  *    - when a RandR/RandR1.2 mode was applied (it may have moved the pointer, so
-- 
2.45.2

