From 006b6b43b8bc774e6ff1d8403fff4ce90c65cd83 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ville=20Syrj=C3=A4l=C3=A4?= <ville.syrjala@linux.intel.com>
Date: Sat, 16 Dec 2023 08:38:11 +0200
Subject: [PATCH 095/105] glamor: Enable dmabuf_capable by default on Intel
 hardware
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

With the potential modeset vs. modifiers issue covered by
commit 899c87af1fc2 ("modesetting: unflip before any setcrtc() calls")
we can safely enable modifiers by default, at least on Intel
hardware where we know that things work properly.

I suppose the one open question is whether everything will work
correctly with wonky multi-GPU setups? I don't have one to test
myself.

Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
---
 glamor/glamor_egl.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/glamor/glamor_egl.c b/glamor/glamor_egl.c
index c2d1c0b17..77adad09e 100644
--- a/glamor/glamor_egl.c
+++ b/glamor/glamor_egl.c
@@ -1178,6 +1178,8 @@ glamor_egl_init(ScrnInfoPtr scrn, int fd)
         if (xf86Info.debug != NULL)
             glamor_egl->dmabuf_capable = !!strstr(xf86Info.debug,
                                                   "dmabuf_capable");
+        else if (strstr((const char *)renderer, "Intel"))
+            glamor_egl->dmabuf_capable = TRUE;
         else
             glamor_egl->dmabuf_capable = FALSE;
     }
-- 
2.45.2

