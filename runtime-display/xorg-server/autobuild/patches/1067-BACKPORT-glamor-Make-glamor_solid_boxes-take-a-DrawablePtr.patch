From 16d3ad81b6bc68d9e812956a763eeff4ef534607 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michel=20D=C3=A4nzer?= <mdaenzer@redhat.com>
Date: Wed, 19 Jul 2023 18:00:18 +0200
Subject: [PATCH 067/105] glamor: Make glamor_solid_boxes take a DrawablePtr

Instead of a PixmapPtr. Gives better results if the window depth
doesn't match the backing pixmap depth.

Closes: https://gitlab.freedesktop.org/xorg/xserver/-/issues/1565
---
 glamor/glamor_compositerects.c | 8 +++-----
 glamor/glamor_priv.h           | 2 +-
 glamor/glamor_text.c           | 7 ++-----
 glamor/glamor_utils.c          | 3 +--
 4 files changed, 7 insertions(+), 13 deletions(-)

diff --git a/glamor/glamor_compositerects.c b/glamor/glamor_compositerects.c
index 199e62705..0796fed41 100644
--- a/glamor/glamor_compositerects.c
+++ b/glamor/glamor_compositerects.c
@@ -227,12 +227,10 @@ glamor_composite_rectangles(CARD8 op,
     boxes = pixman_region_rectangles(&region, &num_boxes);
     if (op == PictOpSrc || op == PictOpClear) {
         CARD32 pixel;
-        int dst_x, dst_y;
 
-        glamor_get_drawable_deltas(dst->pDrawable, pixmap, &dst_x, &dst_y);
-        pixman_region_translate(&region, dst_x, dst_y);
+        pixman_region_translate(&region, -dst->pDrawable->x, -dst->pDrawable->y);
 
-        DEBUGF("%s: pixmap +(%d, %d) extents (%d, %d),(%d, %d)\n",
+        DEBUGF("%s: drawable extents (%d, %d),(%d, %d)\n",
                __FUNCTION__, dst_x, dst_y,
                RegionExtents(&region)->x1, RegionExtents(&region)->y1,
                RegionExtents(&region)->x2, RegionExtents(&region)->y2);
@@ -241,7 +239,7 @@ glamor_composite_rectangles(CARD8 op,
             pixel = 0;
         else
             miRenderColorToPixel(dst->pFormat, color, &pixel);
-        glamor_solid_boxes(pixmap, boxes, num_boxes, pixel);
+        glamor_solid_boxes(dst->pDrawable, boxes, num_boxes, pixel);
 
         goto done;
     }
diff --git a/glamor/glamor_priv.h b/glamor/glamor_priv.h
index 1032b880b..9c9a3485f 100644
--- a/glamor/glamor_priv.h
+++ b/glamor/glamor_priv.h
@@ -871,7 +871,7 @@ glamor_solid(PixmapPtr pixmap, int x, int y, int width, int height,
              unsigned long fg_pixel);
 
 void
-glamor_solid_boxes(PixmapPtr pixmap,
+glamor_solid_boxes(DrawablePtr drawable,
                    BoxPtr box, int nbox, unsigned long fg_pixel);
 
 
diff --git a/glamor/glamor_text.c b/glamor/glamor_text.c
index a559aea8a..5343cc93b 100644
--- a/glamor/glamor_text.c
+++ b/glamor/glamor_text.c
@@ -432,7 +432,6 @@ glamor_image_text(DrawablePtr drawable, GCPtr gc,
         int c;
         RegionRec region;
         BoxRec box;
-        int off_x, off_y;
 
         /* Check planemask before drawing background to
          * bail early if it's not OK
@@ -443,8 +442,6 @@ glamor_image_text(DrawablePtr drawable, GCPtr gc,
             if (charinfo[c])
                 width += charinfo[c]->metrics.characterWidth;
 
-        glamor_get_drawable_deltas(drawable, pixmap, &off_x, &off_y);
-
         if (width >= 0) {
             box.x1 = drawable->x + x;
             box.x2 = drawable->x + x + width;
@@ -456,8 +453,8 @@ glamor_image_text(DrawablePtr drawable, GCPtr gc,
         box.y2 = drawable->y + y + gc->font->info.fontDescent;
         RegionInit(&region, &box, 1);
         RegionIntersect(&region, &region, gc->pCompositeClip);
-        RegionTranslate(&region, off_x, off_y);
-        glamor_solid_boxes(pixmap, RegionRects(&region), RegionNumRects(&region), gc->bgPixel);
+        RegionTranslate(&region, -drawable->x, -drawable->y);
+        glamor_solid_boxes(drawable, RegionRects(&region), RegionNumRects(&region), gc->bgPixel);
         RegionUninit(&region);
     }
 
diff --git a/glamor/glamor_utils.c b/glamor/glamor_utils.c
index d3e6fd3ff..8f085da3f 100644
--- a/glamor/glamor_utils.c
+++ b/glamor/glamor_utils.c
@@ -23,10 +23,9 @@
 #include "glamor_priv.h"
 
 void
-glamor_solid_boxes(PixmapPtr pixmap,
+glamor_solid_boxes(DrawablePtr drawable,
                    BoxPtr box, int nbox, unsigned long fg_pixel)
 {
-    DrawablePtr drawable = &pixmap->drawable;
     GCPtr gc;
     xRectangle *rect;
     int n;
-- 
2.45.2

