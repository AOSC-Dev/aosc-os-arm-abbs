From 93d8f7434c1a939826e51cf5e4756c05b9916c6f Mon Sep 17 00:00:00 2001
From: Adam Jackson <ajax@redhat.com>
Date: Tue, 17 Aug 2021 12:41:08 -0400
Subject: [PATCH 005/105] glamor: Require EGL_KHR_no_config_context

This is not actually a change for xwayland with gbm, or for xfree86 with
big-GL, but we do change them as well to use EGL_NO_CONFIG_KHR
explicitly.

Reviewed-by: Emma Anholt <emma@anholt.net>
Signed-off-by: Icenowy Zheng <uwu@icenowy.me>
---
 glamor/glamor_egl.c            | 16 +++++-----------
 hw/kdrive/ephyr/ephyr_glamor.c |  2 +-
 2 files changed, 6 insertions(+), 12 deletions(-)

diff --git a/glamor/glamor_egl.c b/glamor/glamor_egl.c
index 6e0fc6596..60d0df893 100644
--- a/glamor/glamor_egl.c
+++ b/glamor/glamor_egl.c
@@ -933,8 +933,6 @@ glamor_egl_init(ScrnInfoPtr scrn, int fd)
 {
     struct glamor_egl_screen_private *glamor_egl;
     const GLubyte *renderer;
-    EGLConfig egl_config;
-    int n;
 
     glamor_egl = calloc(sizeof(*glamor_egl), 1);
     if (glamor_egl == NULL)
@@ -977,6 +975,7 @@ glamor_egl_init(ScrnInfoPtr scrn, int fd)
 	}
 
     GLAMOR_CHECK_EGL_EXTENSION(KHR_surfaceless_context);
+    GLAMOR_CHECK_EGL_EXTENSION(KHR_no_config_context);
 
     if (eglBindAPI(EGL_OPENGL_API)) {
         static const EGLint config_attribs_core[] = {
@@ -993,12 +992,13 @@ glamor_egl_init(ScrnInfoPtr scrn, int fd)
         };
 
         glamor_egl->context = eglCreateContext(glamor_egl->display,
-                                               NULL, EGL_NO_CONTEXT,
+                                               EGL_NO_CONFIG_KHR, EGL_NO_CONTEXT,
                                                config_attribs_core);
 
         if (glamor_egl->context == EGL_NO_CONTEXT)
             glamor_egl->context = eglCreateContext(glamor_egl->display,
-                                                   NULL, EGL_NO_CONTEXT,
+                                                   EGL_NO_CONFIG_KHR,
+                                                   EGL_NO_CONTEXT,
                                                    config_attribs);
     }
 
@@ -1029,14 +1029,8 @@ glamor_egl_init(ScrnInfoPtr scrn, int fd)
             goto error;
         }
 
-        if (!eglChooseConfig(glamor_egl->display, NULL, &egl_config, 1, &n)) {
-            xf86DrvMsg(scrn->scrnIndex, X_ERROR,
-                       "glamor: No acceptable EGL configs found\n");
-            goto error;
-        }
-
         glamor_egl->context = eglCreateContext(glamor_egl->display,
-                                               egl_config, EGL_NO_CONTEXT,
+                                               EGL_NO_CONFIG_KHR, EGL_NO_CONTEXT,
                                                config_attribs);
 
         if (glamor_egl->context == EGL_NO_CONTEXT) {
diff --git a/hw/kdrive/ephyr/ephyr_glamor.c b/hw/kdrive/ephyr/ephyr_glamor.c
index 44e48ff59..724611d69 100644
--- a/hw/kdrive/ephyr/ephyr_glamor.c
+++ b/hw/kdrive/ephyr/ephyr_glamor.c
@@ -325,7 +325,7 @@ ephyr_glamor_screen_init(xcb_window_t win, xcb_visualid_t vid)
     context_attribs[i++] = ephyr_glamor_gles2 ? 0 : 1;
     context_attribs[i++] = EGL_NONE;
 
-    ctx = eglCreateContext(glamor->dpy, config, EGL_NO_CONTEXT,
+    ctx = eglCreateContext(glamor->dpy, EGL_NO_CONFIG_KHR, EGL_NO_CONTEXT,
                            context_attribs);
 
     if (ctx == NULL)
-- 
2.45.2

