From c22bb71f160c3daa596d91e3e495363fdd1a1233 Mon Sep 17 00:00:00 2001
From: Cyan <cyanoxygen@aosc.io>
Date: Mon, 4 Dec 2023 09:53:15 +0800
Subject: [PATCH 11/13] first-boot: use fatlabel(8) to set a random volume ID

dosfstools provides fatlabel(8) to change the volume label and its ID.
The volume ID should be generated by other means though.
But it is better than dd(1)ing to the specific location of the file
system.
---
 first-boot | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/first-boot b/first-boot
index 12bf0b6..403803a 100755
--- a/first-boot
+++ b/first-boot
@@ -29,10 +29,12 @@ if [ -e "$efi_dev" ] && \
 
     echo "Randomizing EFI system partition UUID..."
     # Ugly... why isn't there a command to do this?
-    ssize="$(blockdev --getss "$efi_dev")"
-    dd bs=1 seek=67 count=4 conv=notrunc if=/dev/urandom of="$efi_dev"
-    dd bs=1 skip=67 seek=$((67+6*$ssize)) count=4 conv=notrunc if="$efi_dev" of="$efi_dev"
-
+    # Yes of course, fatlabel(8) actually provides such feature, but the UUID
+    # should be privided instead of generating it automatically.
+    # Generate a 32-bit long UUID
+    efi_uuid=$(dd if=/dev/random bs=4 count=1 status=none | hexdump -e '"%04x"')
+    # Set the above as the new volume ID for the EFI partiton
+    fatlabel -i "$efi_dev" $efi_uuid
     efi_uuid="$(blkid -c /dev/null "$efi_dev" -o export | grep '^UUID=')"
     echo "EFI partition: $efi_uuid"
     echo
-- 
2.48.1

