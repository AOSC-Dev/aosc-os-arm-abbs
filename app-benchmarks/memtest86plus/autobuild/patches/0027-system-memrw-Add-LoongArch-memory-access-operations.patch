From d11e4f1a50e7cca0069c718b4884bf5676753632 Mon Sep 17 00:00:00 2001
From: Chao Li <lichao@loongson.cn>
Date: Tue, 16 Jul 2024 18:58:08 +0800
Subject: [PATCH 27/51] system/memrw: Add LoongArch memory access operations

Added 8/16/32/64-bit memory access operations for LoongArch64.

Signed-off-by: Chao Li <lichao@loongson.cn>
---
 system/memrw.h | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/system/memrw.h b/system/memrw.h
index eaedc51..cd8b9c9 100644
--- a/system/memrw.h
+++ b/system/memrw.h
@@ -15,6 +15,8 @@
 
 #include <stdint.h>
 
+#if defined(__i386__) || defined(__x86_64__)
+
 #define __MEMRW_SUFFIX_8BIT  "b"
 #define __MEMRW_SUFFIX_16BIT "w"
 #define __MEMRW_SUFFIX_32BIT "l"
@@ -23,6 +25,18 @@
 #define __MEMRW_WRITE_INSTRUCTIONS(bitwidth) "mov" __MEMRW_SUFFIX_##bitwidth##BIT " %1, %0"
 #define __MEMRW_FLUSH_INSTRUCTIONS(bitwidth) "mov" __MEMRW_SUFFIX_##bitwidth##BIT " %1, %0; mov" __MEMRW_SUFFIX_##bitwidth##BIT " %0, %1"
 
+#elif defined(__loongarch_lp64)
+
+#define __MEMRW_SUFFIX_8BIT  "b"
+#define __MEMRW_SUFFIX_16BIT "h"
+#define __MEMRW_SUFFIX_32BIT "w"
+#define __MEMRW_SUFFIX_64BIT "d"
+#define __MEMRW_READ_INSTRUCTIONS(bitwidth) "ld." __MEMRW_SUFFIX_##bitwidth##BIT " %0, %1"
+#define __MEMRW_WRITE_INSTRUCTIONS(bitwidth) "st." __MEMRW_SUFFIX_##bitwidth##BIT " %1, %0"
+#define __MEMRW_FLUSH_INSTRUCTIONS(bitwidth) "st." __MEMRW_SUFFIX_##bitwidth##BIT " %1, %0; dbar 0"
+
+#endif
+
 #define __MEMRW_READ_FUNC(bitwidth) \
 static inline uint##bitwidth##_t read##bitwidth(const volatile uint##bitwidth##_t *ptr) \
 { \
-- 
2.46.0

