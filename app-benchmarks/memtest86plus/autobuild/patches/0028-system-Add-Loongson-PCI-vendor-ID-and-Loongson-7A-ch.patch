From 70eea63bca6404ae10f0968d2d80345262ce6425 Mon Sep 17 00:00:00 2001
From: Chao Li <lichao@loongson.cn>
Date: Tue, 16 Jul 2024 20:07:36 +0800
Subject: [PATCH 28/51] system: Add Loongson PCI vendor ID and Loongson 7A
 chipset EHCI workaround

1. Added Loongson PCI vendor ID.
2. Added Loongson 7A chipset ECHI workaround.

Signed-off-by: Chao Li <lichao@loongson.cn>
---
 system/hwquirks.c | 27 +++++++++++++++++++++++++++
 system/hwquirks.h |  3 ++-
 system/pci.h      |  2 ++
 system/usbhcd.c   |  5 +++++
 4 files changed, 36 insertions(+), 1 deletion(-)

diff --git a/system/hwquirks.c b/system/hwquirks.c
index f1fd0ed..1fae52d 100644
--- a/system/hwquirks.c
+++ b/system/hwquirks.c
@@ -16,6 +16,8 @@
 #include "cpuid.h"
 #include "config.h"
 #include "temperature.h"
+#include "memrw.h"
+#include "vmem.h"
 
 quirk_t quirk;
 
@@ -99,6 +101,22 @@ static void amd_k8_revfg_temp(void)
     cpu_temp_offset = 21.0f;
 }
 
+static void loongson_7a00_ehci_workaround(void)
+{
+    uintptr_t reg_addr = 0x10010000;
+
+#if (ARCH_BITS == 64)
+    reg_addr |= 0xEULL << 40;
+#endif
+    reg_addr = map_region(reg_addr, 0x0, false);
+    write8((uint8_t *)(reg_addr + 0x3820), 0xFF);
+    write8((uint8_t *)(reg_addr + 0x3830), 0xFF);
+    write32 ((uint32_t *)(reg_addr + 0x3100), 0xFFFFFFFF);
+    write32 ((uint32_t *)(reg_addr + 0x3180), 0xFFFFFFFF);
+    write8((uint8_t *)(reg_addr + 0x3820), 0x0);
+    write8((uint8_t *)(reg_addr + 0x3830), 0x0);
+}
+
 // ---------------------
 // -- Public function --
 // ---------------------
@@ -199,4 +217,13 @@ void quirks_init(void)
             }
         }
     }
+
+    //  -----------------------------------------------------------
+    //  -- Loongson 7A1000 and 7A2000 chipset USB 2.0 workaround --
+    //  -----------------------------------------------------------
+    if (quirk.root_vid == PCI_VID_LOONGSON && quirk.root_did == 0x7a00) {
+        quirk.id    = QUIRK_LOONGSON7A00_EHCI_WORKARD;
+        quirk.type |= QUIRK_TYPE_USB;
+        quirk.process = loongson_7a00_ehci_workaround;
+    }
 }
diff --git a/system/hwquirks.h b/system/hwquirks.h
index daf22b8..bc3365d 100644
--- a/system/hwquirks.h
+++ b/system/hwquirks.h
@@ -28,7 +28,8 @@ typedef enum {
     QUIRK_X10SDV_NOSMP,
     QUIRK_K8_BSTEP_NOTEMP,
     QUIRK_K8_REVFG_TEMP,
-    QUIRK_AMD_ERRATA_319
+    QUIRK_AMD_ERRATA_319,
+    QUIRK_LOONGSON7A00_EHCI_WORKARD
 } quirk_id_t;
 
 typedef struct {
diff --git a/system/pci.h b/system/pci.h
index 1b6ecd4..cea42c8 100644
--- a/system/pci.h
+++ b/system/pci.h
@@ -8,6 +8,7 @@
  *
  *//*
  * Copyright (C) 2020-2022 Martin Whitaker.
+ * Copyright (C) 2024 Loongson Technology Corporation Limited. All rights reserved.
  */
 
 #include <stdint.h>
@@ -18,6 +19,7 @@
 #define PCI_SUB_DID_REG      0x2E
 
 /* Vendor IDs */
+#define PCI_VID_LOONGSON     0x0014
 #define PCI_VID_ATI          0x1002
 #define PCI_VID_AMD          0x1022
 #define PCI_VID_SIS          0x1039
diff --git a/system/usbhcd.c b/system/usbhcd.c
index 9afaf46..c41e47a 100644
--- a/system/usbhcd.c
+++ b/system/usbhcd.c
@@ -7,6 +7,7 @@
 #include "screen.h"
 #include "usb.h"
 #include "vmem.h"
+#include "hwquirks.h"
 
 #include "ehci.h"
 #include "ohci.h"
@@ -834,6 +835,10 @@ void find_usb_keyboards(bool pause_if_none)
 
     hci_info_t hci_list[MAX_HCI];
 
+    if ((quirk.type & QUIRK_TYPE_USB) && (quirk.process != NULL)) {
+        quirk.process();
+    }
+
     int num_hci = find_usb_controllers(hci_list);
 
     // Take ownership of all controllers and reset them.
-- 
2.46.0

