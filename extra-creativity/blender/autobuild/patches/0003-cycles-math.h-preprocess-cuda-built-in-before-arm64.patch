From 838e8d22ee5b6c85cf368e3fbc1e5c5760407501 Mon Sep 17 00:00:00 2001
From: Tianhao Chai <cth451@gmail.com>
Date: Thu, 28 Jul 2022 17:45:43 -0400
Subject: [PATCH 3/3] cycles math.h: preprocess cuda built-in before arm64

Currently arm64 assembly support is checked before cuda. This will cause
C++ preprocessor to pass inline arm64 assembly into nvcc (which will
error out due to unrecognized register modifier %wN) on arm64.

Make sure CUDA / Metal presence is checked first before checking CPU
native instructions.
---
 intern/cycles/util/math.h | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/intern/cycles/util/math.h b/intern/cycles/util/math.h
index 555a5304764..e79fd5779d9 100644
--- a/intern/cycles/util/math.h
+++ b/intern/cycles/util/math.h
@@ -925,7 +925,11 @@ ccl_device_inline uint prev_power_of_two(uint x)
 ccl_device_inline uint32_t reverse_integer_bits(uint32_t x)
 {
   /* Use a native instruction if it exists. */
-#if defined(__aarch64__) || defined(_M_ARM64)
+#if defined(__KERNEL_CUDA__)
+  return __brev(x);
+#elif defined(__KERNEL_METAL__)
+  return reverse_bits(x);
+#elif defined(__aarch64__) || defined(_M_ARM64)
   /* Assume the rbit is always available on 64bit ARM architecture. */
   __asm__("rbit %w0, %w1" : "=r"(x) : "r"(x));
   return x;
@@ -934,10 +938,6 @@ ccl_device_inline uint32_t reverse_integer_bits(uint32_t x)
    * This 32-bit Thumb instruction is available in ARMv6T2 and above. */
   __asm__("rbit %0, %1" : "=r"(x) : "r"(x));
   return x;
-#elif defined(__KERNEL_CUDA__)
-  return __brev(x);
-#elif defined(__KERNEL_METAL__)
-  return reverse_bits(x);
 #elif __has_builtin(__builtin_bitreverse32)
   return __builtin_bitreverse32(x);
 #else
-- 
2.37.1

