From d4e9481271e8a38490a17f1d440425d5ddbf18e9 Mon Sep 17 00:00:00 2001
From: Anjia Wang <anjiawang@gmail.com>
Date: Tue, 21 May 2024 23:41:48 -0700
Subject: [PATCH] fix(CPP): missing predefined compiler flags

---
 CPP/7zip/7zip_gcc.mak | 13 +++++--------
 1 file changed, 5 insertions(+), 8 deletions(-)

diff --git a/CPP/7zip/7zip_gcc.mak b/CPP/7zip/7zip_gcc.mak
index f6a044f..ced447f 100644
--- a/CPP/7zip/7zip_gcc.mak
+++ b/CPP/7zip/7zip_gcc.mak
@@ -44,13 +44,10 @@ ifdef DEBUG_BUILD
 CFLAGS_DEBUG = -g
 else
 CFLAGS_DEBUG = -DNDEBUG
-ifneq ($(CC), $(CROSS_COMPILE)clang)
-LFLAGS_STRIP = -s
-endif
 endif
 
 # CFLAGS_BASE_LIST = -S
-CFLAGS_BASE = -O2 $(CFLAGS_BASE_LIST) $(CFLAGS_WARN_WALL) $(CFLAGS_WARN) \
+CFLAGS_BASE = $(CFLAGS_BASE_LIST) $(CFLAGS_WARN_WALL) $(CFLAGS_WARN) \
  $(CFLAGS_DEBUG) -D_REENTRANT -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE \
  -fPIC
 
@@ -104,14 +101,14 @@ SHARED_EXT=.dll
 LDFLAGS = -shared -DEF $(DEF_FILE) $(LDFLAGS_STATIC)
 else
 SHARED_EXT=.so
-LDFLAGS = -shared -fPIC $(LDFLAGS_STATIC)
+LDFLAGS += -shared -fPIC $(LDFLAGS_STATIC)
 CC_SHARED=-fPIC
 endif
 
 
 else
 
-LDFLAGS = $(LDFLAGS_STATIC)
+LDFLAGS += $(LDFLAGS_STATIC)
 # -z force-bti
 # -s is not required for clang, do we need it for GCC ???
 
@@ -169,7 +166,7 @@ endif
 
 
 
-CFLAGS = $(MY_ARCH_2) $(LOCAL_FLAGS) $(CFLAGS_BASE2) $(CFLAGS_BASE) $(FLAGS_FLTO) $(CC_SHARED) -o $@
+CFLAGS += $(MY_ARCH_2) $(LOCAL_FLAGS) $(CFLAGS_BASE2) $(CFLAGS_BASE) $(FLAGS_FLTO) $(CC_SHARED) -o $@
 
 
 ifdef IS_MINGW
@@ -210,7 +207,7 @@ CXX_WARN_FLAGS =
 #-Wno-invalid-offsetof
 #-Wno-reorder
 
-CXXFLAGS = $(MY_ARCH_2) $(LOCAL_FLAGS) $(CXXFLAGS_BASE2) $(CFLAGS_BASE) $(FLAGS_FLTO) $(CXXFLAGS_EXTRA) $(CC_SHARED) $(CXX_WARN_FLAGS) $(CXX_STD_FLAGS) $(CXX_INCLUDE_FLAGS) -o $@
+CXXFLAGS += $(MY_ARCH_2) $(LOCAL_FLAGS) $(CXXFLAGS_BASE2) $(CFLAGS_BASE) $(FLAGS_FLTO) $(CXXFLAGS_EXTRA) $(CC_SHARED) $(CXX_WARN_FLAGS) $(CXX_STD_FLAGS) $(CXX_INCLUDE_FLAGS) -o $@
 
 STATIC_TARGET=
 ifdef COMPL_STATIC
-- 
2.45.1

