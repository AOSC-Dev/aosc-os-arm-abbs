name: Build packages on request

on:
  issue_comment:
    types: [created]

jobs:
  get-packages:
    if: ${{startsWith(github.event.comment.body, '/build')}}
    runs-on: ubuntu-latest

    steps:
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1
        id: create-comment
        with:
          issue-number: ${{github.event.issue.number}}
          body: |
            Packages are building at ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}.

      - name: Get packages to build from repo
        uses: actions/github-script@v5
        id: get-packages-from-repo
        if: ${{github.event.comment.body == '/build'}}
        working-directory: ${{env.GITHUB_WORKSPACE}}
        with:
          script: |
            const { exec } = require('child_process');
            let args = "";
            const process = exec('git diff --name-only stable HEAD */spec', (error, stdout) => {
              args = stdout;
            });
            const regex = /.*\/(.*)\/.*/gm;
            const packages = args.split('\n').map(arg => regex.exec(arg)).filter(arg => Array.isArray(arg)).map(arg => arg[1]);
            return packages;

      - name: Get packages to build from command line
        uses: actions/github-script@v5
        id: get-packages-from-command-line
        if: ${{startsWith(github.event.comment.body, '/build ')}}
        with:
          script: |
            const args = context.payload.comment.body;
            const regex = /\/build ([a-z\d\/\.\-\+ ]+)/;
            const isMatched = args.match(regex);
            if (!isMatched) throw "No packages found in the command!";
            const packages = args.split('/build ')[1].split(' ');
            return packages;

      - name: Update comment
        if: failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{steps.create-comment.outputs.comment-id}}
          body: |
            No packages found in the command!

    outputs:
      matrix: ${{steps.get-packages-from-repo.outputs.result || steps.get-packages-from-command-line.outputs.result}}
      comment-id: ${{steps.create-comment.outputs.comment-id}}

  build:
    needs: get-packages
    runs-on: ubuntu-latest
    container: aosc/aosc-os-buildkit:latest
    strategy:
      matrix:
        package: ${{fromJson(needs.get-packages.outputs.matrix)}}
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install GitHub CLI
        if: ${{github.event.issue.pull_request}}
        env:
          GH_VERSION: 2.0.0
          GH_ARCH: amd64
        run: |
          curl -LO https://github.com/cli/cli/releases/download/v${{env.GH_VERSION}}/gh_${{env.GH_VERSION}}_linux_${{env.GH_ARCH}}.tar.gz
          tar -xf gh_${{env.GH_VERSION}}_linux_${{env.GH_ARCH}}.tar.gz
          ln -s ${PWD}/gh_${{env.GH_VERSION}}_linux_${{env.GH_ARCH}}/bin/gh /usr/bin/gh

      - name: Checkout PR
        if: ${{github.event.issue.pull_request}}
        env:
          PR_NUMBER: ${{github.event.issue.number}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          gh pr checkout ${{env.PR_NUMBER}}

      - name: Prepare for building the package
        run: |
          mkdir -p /var/lib/acbs
          ln -s $GITHUB_WORKSPACE /var/lib/acbs/repo
          sed -i 's/Null Packager <null@aosc.xyz>/GitHub Actions <discussions@lists.aosc.io>/' /etc/autobuild/ab3cfg.sh
          sed -i 's/https:\/\/repo.aosc.io\//https:\/\/aosc-repo.freetls.fastly.net\//' /etc/apt/sources.list
          apt-get update && yes | apt-get -yf full-upgrade && apt-get -y autoremove

      - name: Build the package
        working-directory: ${{env.GITHUB_WORKSPACE}}
        env:
          PACKAGE: ${{matrix.package}}
        run: script -eqc "acbs-build \"${{env.PACKAGE}}\""

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: debs
          path: /debs

      - name: Update comment
        if: always()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{needs.get-packages.outputs.comment-id}}
          body: |
            Building ${{matrix.package}} ends with status ${{job.status}}.
