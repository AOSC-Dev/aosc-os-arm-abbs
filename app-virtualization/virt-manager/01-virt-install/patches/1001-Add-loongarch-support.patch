From 5f7e63432a0dc746637e976bf4043478f537724f Mon Sep 17 00:00:00 2001
From: lixianglai <lixianglai@loongson.cn>
Date: Wed, 13 Dec 2023 04:43:24 -0500
Subject: [PATCH 1/3] Add loongarch support

Signed-off-by: lixianglai <lixianglai@loongson.cn>
---
 virtManager/createvm.py | 7 ++++++-
 virtinst/domain/os.py   | 2 ++
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/virtManager/createvm.py b/virtManager/createvm.py
index 7e5ded68..b8110ad2 100644
--- a/virtManager/createvm.py
+++ b/virtManager/createvm.py
@@ -476,7 +476,8 @@ class vmmCreateVM(vmmGObjectUI):
 
         installable_arch = bool(guest.os.is_x86() or
                 guest.os.is_ppc64() or
-                guest.os.is_s390x())
+                guest.os.is_s390x() or
+                guest.os.is_loongarch64())
 
         default_efi = (
             self.config.get_default_firmware_setting() == "uefi" and
@@ -864,6 +865,10 @@ class vmmCreateVM(vmmGObjectUI):
             defmachine = recommended_machine
             prios = [defmachine]
 
+        if self._capsinfo.arch in ["loongarch64"]:
+                defmachine = "virt"
+ 
+
         for p in prios[:]:
             if p not in machines:
                 prios.remove(p)  # pragma: no cover
diff --git a/virtinst/domain/os.py b/virtinst/domain/os.py
index e2cea755..e783c851 100644
--- a/virtinst/domain/os.py
+++ b/virtinst/domain/os.py
@@ -77,6 +77,8 @@ class DomainOs(XMLBuilder):
         return self.arch == "riscv64" or self.arch == "riscv32"
     def is_riscv_virt(self):
         return self.is_riscv() and str(self.machine).startswith("virt")
+    def is_loongarch64(self):
+        return self.arch == "loongarch64"
 
     ##################
     # XML properties #
-- 
2.39.1

