From 8d54da86199d9ffc64a543f28f1e5e5ef8684c0b Mon Sep 17 00:00:00 2001
From: Cyan <cyan@cyano.uk>
Date: Sat, 20 Apr 2024 18:50:46 +0800
Subject: [PATCH] device: hack: fallback to device name if prop is NULL

GstDevice->priv->properties sometimes points to NULL, causing an invalid
memory read. We use GstDevice->priv->name as a fallback.
---
 src/device.cpp        | 11 +++++++----
 src/device.h          |  2 +-
 src/devicemanager.cpp | 14 +++++++++++---
 3 files changed, 19 insertions(+), 8 deletions(-)

diff --git a/src/device.cpp b/src/device.cpp
index a8703f9..fc7af22 100644
--- a/src/device.cpp
+++ b/src/device.cpp
@@ -17,10 +17,15 @@ QString structureValue(GstStructure* device, const char* key)
     return QString::fromUtf8(g_value_get_string(x));
 }
 
-QString objectIdFromProperties(GstStructure* st)
+QString objectIdFromProperties(GstDevice * device)
 {
     // The value returned here is later used to identify
     // the camera device we are dealing with.
+    auto st = gst_device_get_properties(device);
+    if (st == NULL) {
+	    gchar * name = gst_device_get_display_name(device);
+	    return QString(name);
+    }
     QString objectId = structureValue(st, "object.id");
     if (!objectId.isEmpty()) {
         return objectId;
@@ -37,9 +42,7 @@ Device::Device(GstDevice *device, QObject* parent)
     , m_description(gst_device_get_display_name(device))
     , m_device(device)
 {
-    auto st = gst_device_get_properties(device);
-    m_objectId = objectIdFromProperties(st);
-    gst_structure_free(st);
+    m_objectId = objectIdFromProperties(device);
     setObjectName(m_objectId);
 }
 
diff --git a/src/device.h b/src/device.h
index edd3465..abecbfc 100644
--- a/src/device.h
+++ b/src/device.h
@@ -14,7 +14,7 @@
 #include <KSharedConfig>
 
 QString structureValue(GstStructure* device, const char* key);
-QString objectIdFromProperties(GstStructure* deviceProperties);
+QString objectIdFromProperties(GstDevice * device);
 
 class Device : public QObject
 {
diff --git a/src/devicemanager.cpp b/src/devicemanager.cpp
index 5fa2180..1513b92 100644
--- a/src/devicemanager.cpp
+++ b/src/devicemanager.cpp
@@ -56,7 +56,16 @@ DeviceManager::DeviceManager() : m_playingDevice(0)
     if (!devices) {
         qWarning ("No device found");
     }
-
+    auto devices2 = devices;
+    for (; devices2; devices2 = devices2->next) {
+	    GstDevice * d = GST_DEVICE(devices2->data);
+	    gchar * name = gst_device_get_display_name (d);
+	    GstStructure * p = gst_device_get_properties (d);
+	    if (p == NULL) {
+		    qWarning() << "The device " << name << "does not have extra properties!";
+	    }
+	    qInfo() << "New device found, name: " << name;
+    }
     /* Initialize camera structures */
     for(; devices; devices = devices->next) {
         auto device = new Device(GST_DEVICE(devices->data), this);
@@ -156,8 +165,7 @@ void DeviceManager::deviceAdded(GstDevice* device)
 
 void DeviceManager::deviceRemoved(GstDevice* device)
 {
-    auto st = gst_device_get_properties(device);
-    auto objectId = objectIdFromProperties(st);
+    auto objectId = objectIdFromProperties(device);
 
     for(int i = 0, c = m_deviceList.size(); i<c; ++i) {
         auto dev = m_deviceList.at(i);
-- 
2.44.0

