diff -Naur VirtualBox-6.1.18.orig/src/VBox/Additions/linux/drm/vbox_drv.c VirtualBox-6.1.18.mod/src/VBox/Additions/linux/drm/vbox_drv.c
--- VirtualBox-6.1.18.orig/src/VBox/Additions/linux/drm/vbox_drv.c	2021-01-07 09:34:24.000000000 -0600
+++ VirtualBox-6.1.18.mod/src/VBox/Additions/linux/drm/vbox_drv.c	2021-02-16 13:03:30.861762443 -0600
@@ -309,6 +309,26 @@
 	mutex_unlock(&vbox->hw_mutex);
 }
 
+#if RTLNX_VER_MIN(5,11,0)
+static const struct vm_operations_struct vbox_drm_gem_vm_ops = {
+	.open = drm_gem_vm_open,
+	.close = drm_gem_vm_close,
+};
+
+const struct drm_gem_object_funcs vbox_drm_gem_object_funcs = {
+	.free = vbox_gem_free_object,
+	.export = drm_gem_prime_export,
+	.pin = vbox_gem_prime_pin,
+	.unpin = vbox_gem_prime_unpin,
+	.get_sg_table = vbox_gem_prime_get_sg_table,
+	.vmap = vbox_gem_prime_vmap,
+	.vunmap = vbox_gem_prime_vunmap,
+	.mmap = vbox_gem_prime_mmap,
+	.vm_ops = &vbox_drm_gem_vm_ops
+};
+#endif
+
+
 static struct drm_driver driver = {
 #if RTLNX_VER_MAX(5,4,0) && !RTLNX_RHEL_MAJ_PREREQ(8,3)
 	.driver_features = DRIVER_MODESET | DRIVER_GEM | DRIVER_HAVE_IRQ |
@@ -346,6 +366,7 @@
 
 #if RTLNX_VER_MAX(4,7,0)
 	.gem_free_object = vbox_gem_free_object,
+#elif RTLNX_VER_MIN(5,11,0)
 #else
 	.gem_free_object_unlocked = vbox_gem_free_object,
 #endif
@@ -358,14 +379,23 @@
 #endif
 	.prime_handle_to_fd = drm_gem_prime_handle_to_fd,
 	.prime_fd_to_handle = drm_gem_prime_fd_to_handle,
+#if RTLNX_VER_MIN(5,11,0)
+#else
 	.gem_prime_export = drm_gem_prime_export,
+#endif
 	.gem_prime_import = drm_gem_prime_import,
+#if RTLNX_VER_MIN(5,11,0)
+#else
 	.gem_prime_pin = vbox_gem_prime_pin,
 	.gem_prime_unpin = vbox_gem_prime_unpin,
 	.gem_prime_get_sg_table = vbox_gem_prime_get_sg_table,
+#endif
 	.gem_prime_import_sg_table = vbox_gem_prime_import_sg_table,
+#if RTLNX_VER_MIN(5,11,0)
+#else
 	.gem_prime_vmap = vbox_gem_prime_vmap,
 	.gem_prime_vunmap = vbox_gem_prime_vunmap,
+#endif
 	.gem_prime_mmap = vbox_gem_prime_mmap,
 };
 
diff -Naur VirtualBox-6.1.18.orig/src/VBox/Additions/linux/drm/vbox_drv.h VirtualBox-6.1.18.mod/src/VBox/Additions/linux/drm/vbox_drv.h
--- VirtualBox-6.1.18.orig/src/VBox/Additions/linux/drm/vbox_drv.h	2021-01-07 09:34:24.000000000 -0600
+++ VirtualBox-6.1.18.mod/src/VBox/Additions/linux/drm/vbox_drv.h	2021-02-16 14:02:49.176085124 -0600
@@ -491,8 +491,13 @@
 	struct drm_device *dev, struct dma_buf_attachment *attach,
 	struct sg_table *table);
 #endif
+#if RTLNX_VER_MIN(5,11,0)
+int vbox_gem_prime_vmap(struct drm_gem_object *obj, struct dma_buf_map *map);
+void vbox_gem_prime_vunmap(struct drm_gem_object *, struct dma_buf_map *);
+#else
 void *vbox_gem_prime_vmap(struct drm_gem_object *obj);
 void vbox_gem_prime_vunmap(struct drm_gem_object *obj, void *vaddr);
+#endif
 int vbox_gem_prime_mmap(struct drm_gem_object *obj,
 			struct vm_area_struct *area);
 
diff -Naur VirtualBox-6.1.18.orig/src/VBox/Additions/linux/drm/vbox_prime.c VirtualBox-6.1.18.mod/src/VBox/Additions/linux/drm/vbox_prime.c
--- VirtualBox-6.1.18.orig/src/VBox/Additions/linux/drm/vbox_prime.c	2021-01-07 09:34:24.000000000 -0600
+++ VirtualBox-6.1.18.mod/src/VBox/Additions/linux/drm/vbox_prime.c	2021-02-16 14:28:06.801930703 -0600
@@ -62,13 +62,25 @@
 	return ERR_PTR(-ENOSYS);
 }
 
+#if RTLNX_VER_MIN(5,11,0)
+int vbox_gem_prime_vmap(struct drm_gem_object *obj, struct dma_buf_map *map)
+#else
 void *vbox_gem_prime_vmap(struct drm_gem_object *obj)
+#endif
 {
 	WARN_ONCE(1, "not implemented");
+#if RTLNX_VER_MIN(5,11,0)
+	return -ENOSYS;
+#else
 	return ERR_PTR(-ENOSYS);
+#endif
 }
 
+#if RTLNX_VER_MIN(5,11,0)
+void vbox_gem_prime_vunmap(struct drm_gem_object *obj, struct dma_buf_map *map)
+#else
 void vbox_gem_prime_vunmap(struct drm_gem_object *obj, void *vaddr)
+#endif
 {
 	WARN_ONCE(1, "not implemented");
 }
diff -Naur VirtualBox-6.1.18.orig/src/VBox/Additions/linux/drm/vbox_ttm.c VirtualBox-6.1.18.mod/src/VBox/Additions/linux/drm/vbox_ttm.c
--- VirtualBox-6.1.18.orig/src/VBox/Additions/linux/drm/vbox_ttm.c	2021-01-07 09:34:24.000000000 -0600
+++ VirtualBox-6.1.18.mod/src/VBox/Additions/linux/drm/vbox_ttm.c	2021-02-16 14:16:46.702787997 -0600
@@ -33,7 +33,11 @@
  *          Michael Thayer <michael.thayer@oracle.com>
  */
 #include "vbox_drv.h"
+#if RTLNX_VER_MIN(5,11,0)
+#include <drm/ttm/ttm_memory.h>
+#else
 #include <drm/ttm/ttm_page_alloc.h>
+#endif
 
 #if RTLNX_VER_MAX(3,18,0) && !RTLNX_RHEL_MAJ_PREREQ(7,2)
 #define PLACEMENT_FLAGS(placement) (placement)
@@ -277,6 +281,8 @@
 #endif
 #if RTLNX_VER_MAX(4,17,0) && !RTLNX_RHEL_MAJ_PREREQ(7,6) && !RTLNX_SUSE_MAJ_PREREQ(15,1) && !RTLNX_SUSE_MAJ_PREREQ(12,5)
 	if (ttm_tt_init(tt, bdev, size, page_flags, dummy_read_page)) {
+#elif RTLNX_VER_MIN(5,11,0)
+	if (ttm_tt_init(tt, bo, page_flags, ttm_cached)) {
 #else
 	if (ttm_tt_init(tt, bo, page_flags)) {
 #endif
@@ -353,6 +359,9 @@
 				 vbox->ttm.bo_global_ref.ref.object,
 #endif
 				 &vbox_bo_driver,
+#if RTLNX_VER_MIN(5,11,0)
+				 dev->dev,
+#endif
 #if RTLNX_VER_MIN(3,15,0) || RTLNX_RHEL_MAJ_PREREQ(7,1)
 				 dev->anon_inode->i_mapping,
 #endif
@@ -361,7 +370,11 @@
 #elif RTLNX_VER_MAX(5,2,0) && !RTLNX_RHEL_MAJ_PREREQ(8,2)
 				 DRM_FILE_PAGE_OFFSET,
 #endif
+#if RTLNX_VER_MIN(5,11,0)
+				true, dma_addressing_limited(dev->dev));
+#else
 				 true);
+#endif
 	if (ret) {
 		DRM_ERROR("Error initialising bo driver; %d\n", ret);
 #if RTLNX_VER_MAX(5,0,0) && !RTLNX_RHEL_MAJ_PREREQ(7,7) && !RTLNX_RHEL_MAJ_PREREQ(8,1)
@@ -431,7 +444,10 @@
 	bo->placement.busy_placement = bo->placements;
 
 	if (mem_type & VBOX_MEM_TYPE_VRAM) {
-#if RTLNX_VER_MIN(5,10,0)
+#if RTLNX_VER_MIN(5,11,0)
+		bo->placements[c].mem_type = TTM_PL_VRAM;
+		PLACEMENT_FLAGS(bo->placements[c++]) = 0;
+#elif RTLNX_VER_MIN(5,10,0)
 		bo->placements[c].mem_type = TTM_PL_VRAM;
 		PLACEMENT_FLAGS(bo->placements[c++]) =
 		    TTM_PL_FLAG_WC | TTM_PL_FLAG_UNCACHED;
@@ -441,7 +457,10 @@
 #endif
 	}
 	if (mem_type & VBOX_MEM_TYPE_SYSTEM) {
-#if RTLNX_VER_MIN(5,10,0)
+#if RTLNX_VER_MIN(5,11,0)
+		bo->placements[c].mem_type = TTM_PL_SYSTEM;
+		PLACEMENT_FLAGS(bo->placements[c++]) = 0;
+#elif RTLNX_VER_MIN(5,10,0)
 		bo->placements[c].mem_type = TTM_PL_SYSTEM;
 		PLACEMENT_FLAGS(bo->placements[c++]) =
 		    TTM_PL_MASK_CACHING;
@@ -451,7 +470,10 @@
 #endif
 	}
 	if (!c) {
-#if RTLNX_VER_MIN(5,10,0)
+#if RTLNX_VER_MIN(5,11,0)
+		bo->placements[c].mem_type = TTM_PL_SYSTEM;
+		PLACEMENT_FLAGS(bo->placements[c++]) = 0;
+#elif RTLNX_VER_MIN(5,10,0)
 		bo->placements[c].mem_type = TTM_PL_SYSTEM;
 		PLACEMENT_FLAGS(bo->placements[c++]) =
 		    TTM_PL_MASK_CACHING;
@@ -472,6 +494,10 @@
 #endif
 }
 
+#if RTLNX_VER_MIN(5,11,0)
+extern const struct drm_gem_object_funcs vbox_drm_gem_object_funcs;
+#endif
+
 int vbox_bo_create(struct drm_device *dev, int size, int align,
 		   u32 flags, struct vbox_bo **pvboxbo)
 {
@@ -484,6 +510,10 @@
 	if (!vboxbo)
 		return -ENOMEM;
 
+#if RTLNX_VER_MIN(5,11,0)
+	vboxbo->gem.funcs = &vbox_drm_gem_object_funcs;
+#endif
+
 	ret = drm_gem_object_init(dev, &vboxbo->gem, size);
 	if (ret)
 		goto err_free_vboxbo;
@@ -548,8 +578,11 @@
 
 	vbox_ttm_placement(bo, mem_type);
 
+#if RTLNX_VER_MIN(5,11,0)
+#else
 	for (i = 0; i < bo->placement.num_placement; i++)
 		PLACEMENT_FLAGS(bo->placements[i]) |= TTM_PL_FLAG_NO_EVICT;
+#endif
 
 #if RTLNX_VER_MAX(4,16,0) && !RTLNX_RHEL_MAJ_PREREQ(7,6) && !RTLNX_SUSE_MAJ_PREREQ(15,1) && !RTLNX_SUSE_MAJ_PREREQ(12,5)
 	ret = ttm_bo_validate(&bo->bo, &bo->placement, false, false);
@@ -582,8 +615,11 @@
 	if (bo->pin_count)
 		return 0;
 
+#if RTLNX_VER_MIN(5,11,0)
+#else
 	for (i = 0; i < bo->placement.num_placement; i++)
 		PLACEMENT_FLAGS(bo->placements[i]) &= ~TTM_PL_FLAG_NO_EVICT;
+#endif
 
 #if RTLNX_VER_MAX(4,16,0) && !RTLNX_RHEL_MAJ_PREREQ(7,6) && !RTLNX_SUSE_MAJ_PREREQ(15,1) && !RTLNX_SUSE_MAJ_PREREQ(12,5)
 	ret = ttm_bo_validate(&bo->bo, &bo->placement, false, false);
@@ -621,8 +657,11 @@
 
 	vbox_ttm_placement(bo, VBOX_MEM_TYPE_SYSTEM);
 
+#if RTLNX_VER_MIN(5,11,0)
+#else
 	for (i = 0; i < bo->placement.num_placement; i++)
 		PLACEMENT_FLAGS(bo->placements[i]) |= TTM_PL_FLAG_NO_EVICT;
+#endif
 
 #if RTLNX_VER_MAX(4,16,0) && !RTLNX_RHEL_MAJ_PREREQ(7,6) && !RTLNX_SUSE_MAJ_PREREQ(15,1) && !RTLNX_SUSE_MAJ_PREREQ(12,5)
 	ret = ttm_bo_validate(&bo->bo, &bo->placement, false, false);
diff -Naur VirtualBox-6.1.18.orig/src/VBox/HostDrivers/VBoxNetFlt/linux/VBoxNetFlt-linux.c VirtualBox-6.1.18.mod/src/VBox/HostDrivers/VBoxNetFlt/linux/VBoxNetFlt-linux.c
--- VirtualBox-6.1.18.orig/src/VBox/HostDrivers/VBoxNetFlt/linux/VBoxNetFlt-linux.c	2021-01-07 09:41:28.000000000 -0600
+++ VirtualBox-6.1.18.mod/src/VBox/HostDrivers/VBoxNetFlt/linux/VBoxNetFlt-linux.c	2021-02-16 11:29:37.974849319 -0600
@@ -40,6 +40,9 @@
 #include <linux/netdevice.h>
 #include <linux/etherdevice.h>
 #include <linux/rtnetlink.h>
+#if RTLNX_VER_MIN(5,11,0)
+#include <linux/ethtool.h>
+#endif
 #include <linux/miscdevice.h>
 #include <linux/inetdevice.h>
 #include <linux/in.h>
