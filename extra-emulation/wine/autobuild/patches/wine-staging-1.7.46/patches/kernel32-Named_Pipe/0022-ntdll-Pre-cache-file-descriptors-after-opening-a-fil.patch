From 2fc1f5ba4668fb0a33ee55118da34a43668fe169 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Sat, 6 Jun 2015 01:44:20 +0200
Subject: ntdll: Pre-cache file descriptors after opening a file.

---
 dlls/kernel32/tests/pipe.c |  2 --
 dlls/ntdll/file.c          | 12 +++++++++++-
 2 files changed, 11 insertions(+), 3 deletions(-)

diff --git a/dlls/kernel32/tests/pipe.c b/dlls/kernel32/tests/pipe.c
index 146b7f7..ddad351 100644
--- a/dlls/kernel32/tests/pipe.c
+++ b/dlls/kernel32/tests/pipe.c
@@ -1235,12 +1235,10 @@ static void test_CloseNamedPipe(void)
 
         SetLastError(0xdeadbeef);
         ok(!ReadFile(hFile, ibuf, sizeof(ibuf), &readden, NULL), "ReadFile() succeeded\n");
-        todo_wine
         ok(GetLastError() == ERROR_BROKEN_PIPE, "GetLastError() returned %08x, expected ERROR_BROKEN_PIPE\n", GetLastError());
 
         SetLastError(0xdeadbeef);
         ok(!WriteFile(hFile, obuf, sizeof(obuf), &written, NULL), "WriteFile() succeeded\n");
-        todo_wine
         ok(GetLastError() == ERROR_NO_DATA, "GetLastError() returned %08x, expected ERROR_NO_DATA\n", GetLastError());
 
         CloseHandle(hFile);
diff --git a/dlls/ntdll/file.c b/dlls/ntdll/file.c
index ff0d306..25e9826 100644
--- a/dlls/ntdll/file.c
+++ b/dlls/ntdll/file.c
@@ -274,7 +274,17 @@ static NTSTATUS FILE_CreateFile( PHANDLE handle, ACCESS_MASK access, POBJECT_ATT
             *handle = wine_server_ptr_handle( reply->handle );
         }
         SERVER_END_REQ;
-        if (io->u.Status == STATUS_SUCCESS) io->Information = FILE_OPENED;
+        if (io->u.Status == STATUS_SUCCESS)
+        {
+            /* pre-cache the file descriptor. this is necessary because the fd cannot be
+             * acquired anymore after one end of the pipe has been closed - see kernel32/pipe
+             * tests. */
+            int unix_fd, needs_close;
+            int ret = server_get_unix_fd( *handle, 0, &unix_fd, &needs_close, NULL, NULL );
+            if (!ret && needs_close) close( unix_fd );
+            io->Information = FILE_OPENED;
+        }
+
         return io->u.Status;
     }
 
-- 
2.4.2

