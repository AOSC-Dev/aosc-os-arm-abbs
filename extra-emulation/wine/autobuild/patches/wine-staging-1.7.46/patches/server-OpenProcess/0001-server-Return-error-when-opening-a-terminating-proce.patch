From bc7cb674c2b15f6dc603b9271a684d6aefe3a7d8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Thu, 14 Aug 2014 03:05:52 +0200
Subject: server: Return error when opening a terminating process. (try 3)

---
 server/process.c | 7 ++++++-
 server/process.h | 1 +
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/server/process.c b/server/process.c
index 5be3b00..f9738c0 100644
--- a/server/process.c
+++ b/server/process.c
@@ -394,6 +394,7 @@ void shutdown_master_socket(void)
 /* final cleanup once we are sure a process is really dead */
 static void process_died( struct process *process )
 {
+    process->is_terminated = 1;
     if (debug_level) fprintf( stderr, "%04x: *process killed*\n", process->id );
     if (!process->is_system)
     {
@@ -450,6 +451,7 @@ struct thread *create_process( int fd, struct thread *parent_thread, int inherit
     process->is_system       = 0;
     process->debug_children  = 0;
     process->is_terminating  = 0;
+    process->is_terminated   = 0;
     process->job             = NULL;
     process->console         = NULL;
     process->startup_state   = STARTUP_IN_PROGRESS;
@@ -1278,7 +1280,10 @@ DECL_HANDLER(open_process)
     reply->handle = 0;
     if (process)
     {
-        reply->handle = alloc_handle( current->process, process, req->access, req->attributes );
+        if (!process->is_terminated)
+            reply->handle = alloc_handle( current->process, process, req->access, req->attributes );
+        else
+            set_error( STATUS_INVALID_PARAMETER );
         release_object( process );
     }
 }
diff --git a/server/process.h b/server/process.h
index 58c313a..0cf9514 100644
--- a/server/process.h
+++ b/server/process.h
@@ -75,6 +75,7 @@ struct process
     unsigned int         is_system:1;     /* is it a system process? */
     unsigned int         debug_children:1;/* also debug all child processes */
     unsigned int         is_terminating:1;/* is process terminating? */
+    unsigned int         is_terminated:1; /* is process terminated? */
     struct job          *job;             /* job object ascoicated with this process */
     struct list          job_entry;       /* list entry for job object */
     struct list          locks;           /* list of file locks owned by the process */
-- 
2.3.3

