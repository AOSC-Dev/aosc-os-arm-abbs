From 91db717ac1048949bc677d2c266a62261240867b Mon Sep 17 00:00:00 2001
From: Canarypwn <canarypwn@aosc.io>
Date: Sat, 2 Jul 2022 14:01:53 +0800
Subject: [PATCH] test

---
 make-linux.mk | 22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)

diff --git a/make-linux.mk b/make-linux.mk
index 3941573..4a2abb6 100644
--- a/make-linux.mk
+++ b/make-linux.mk
@@ -64,14 +64,15 @@ ifeq ($(ZT_DEBUG),1)
 	RUSTFLAGS=
 	# The following line enables optimization for the crypto code, since
 	# C25519 in particular is almost UNUSABLE in -O0 even on a 3ghz box!
-node/Salsa20.o node/SHA512.o node/C25519.o node/Poly1305.o: CXXFLAGS=-Wall -O2 -g -pthread $(INCLUDES) $(DEFS)
+    node/Salsa20.o node/SHA512.o node/C25519.o node/Poly1305.o: CXXFLAGS=-Wall -O2 -g -flto -fPIC -fPIE -pthread $(INCLUDES) $(DEFS)
 else
 	CFLAGS?=-O3 -fstack-protector
 	override CFLAGS+=-Wall -Wno-deprecated -pthread $(INCLUDES) -DNDEBUG $(DEFS)
 	CXXFLAGS?=-O3 -fstack-protector
 	override CXXFLAGS+=-Wall -Wno-deprecated -std=c++17 -pthread $(INCLUDES) -DNDEBUG $(DEFS)
 	LDFLAGS=-pie -Wl,-z,relro,-z,now
-	RUSTFLAGS=--release
+	# RUSTFLAGS=--release
+	# RUSTFLAGS=-Clinker-plugin-lto
 endif
 
 ifeq ($(ZT_QNAP), 1)
@@ -126,6 +127,7 @@ ifeq ($(CC_MACH),amd64)
 	ZT_USE_X64_ASM_ED25519=1
 	override CFLAGS+=-msse -msse2
 	override CXXFLAGS+=-msse -msse2
+	override LDFLAGS+=-fuse-ld=lld
 	ZT_SSO_SUPPORTED=1
 endif
 ifeq ($(CC_MACH),powerpc64le)
@@ -222,6 +224,7 @@ ifeq ($(CC_MACH),arm64)
 	ZT_ARCHITECTURE=4
 	ZT_SSO_SUPPORTED=1
 	override DEFS+=-DZT_NO_TYPE_PUNNING -DZT_ARCH_ARM_HAS_NEON -march=armv8-a+crypto -mtune=generic -mstrict-align
+	override LDFLAGS+=-fuse-ld=lld
 endif
 ifeq ($(CC_MACH),aarch64)
 	ZT_ARCHITECTURE=4
@@ -249,11 +252,17 @@ ifeq ($(CC_MACH),s390x)
 endif
 ifeq ($(CC_MACH),riscv64)
 	ZT_ARCHITECTURE=0
+	override LDFLAGS+=-fuse-ld=bfd
 endif
 ifeq ($(CC_MACH),loongarch64)
 	ZT_ARCHITECTURE=17
 	override DEFS+=-DZT_NO_TYPE_PUNNING
 endif
+ifeq ($(CC_MACH),loongson3)
+	ZT_ARCHITECTURE=17
+	override DEFS+=-DZT_NO_TYPE_PUNNING
+	override LDFLAGS+=-fuse-ld=bfd
+endif
 
 # Fail if system architecture could not be determined
 ifeq ($(ZT_ARCHITECTURE),999)
@@ -278,7 +287,7 @@ ifeq ($(ZT_SSO_SUPPORTED), 1)
 		ifeq ($(ZT_DEBUG),1)
 			LDLIBS+=zeroidc/target/debug/libzeroidc.a -ldl -lssl -lcrypto
 		else
-			LDLIBS+=zeroidc/target/release/libzeroidc.a -ldl -lssl -lcrypto
+			LDLIBS+=zeroidc/target/debug/libzeroidc.a -ldl -lssl -lcrypto
 		endif
 	endif
 endif
@@ -403,7 +412,12 @@ ifeq ($(ZT_SSO_SUPPORTED), 1)
 ifeq ($(ZT_EMBEDDED),)
 zeroidc:	FORCE
 #	export PATH=/root/.cargo/bin:$$PATH; cd zeroidc && cargo build -j1 $(RUSTFLAGS)
-	export PATH=/${HOME}/.cargo/bin:$$PATH; cd zeroidc && cargo build $(RUSTFLAGS)
+	# ifeq ($(ZT_DEBUG),1)
+	# 	export PATH=/${HOME}/.cargo/bin:$$PATH; cd zeroidc && cargo build
+	# else
+	# 	export PATH=/${HOME}/.cargo/bin:$$PATH; cd zeroidc && cargo build --release
+	# endif
+	export PATH=/${HOME}/.cargo/bin:$$PATH; cd zeroidc && cargo build
 endif
 else
 zeroidc:
-- 
2.36.0

