From 9425e3af4e11139d6d716a55990e01d6899d159a Mon Sep 17 00:00:00 2001
From: eatradish <sakiiily@aosc.io>
Date: Mon, 13 Jan 2025 14:57:51 +0800
Subject: [PATCH 10/16] Set core binary name as mihomo

---
 scripts/check.mjs                             |  8 +++----
 scripts/portable-fixed-webview2.mjs           |  4 ++--
 scripts/portable.mjs                          |  4 ++--
 src-tauri/packages/windows/installer.nsi      | 24 +++++++++----------
 src-tauri/src/config/verge.rs                 |  2 +-
 src-tauri/src/core/core.rs                    |  4 ++--
 src-tauri/src/core/service.rs                 |  2 +-
 src-tauri/src/enhance/chain.rs                |  4 ++--
 .../setting/mods/clash-core-viewer.tsx        |  4 ++--
 9 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/scripts/check.mjs b/scripts/check.mjs
index becd7a0d..8e237ad5 100644
--- a/scripts/check.mjs
+++ b/scripts/check.mjs
@@ -160,8 +160,8 @@ function clashMetaAlpha() {
   const zipFile = `${name}-${META_ALPHA_VERSION}.${urlExt}`;
 
   return {
-    name: "verge-mihomo-alpha",
-    targetFile: `verge-mihomo-alpha-${SIDECAR_HOST}${isWin ? ".exe" : ""}`,
+    name: "mihomo-alpha",
+    targetFile: `mihomo-alpha-${SIDECAR_HOST}${isWin ? ".exe" : ""}`,
     exeFile,
     zipFile,
     downloadURL,
@@ -177,8 +177,8 @@ function clashMeta() {
   const zipFile = `${name}-${META_VERSION}.${urlExt}`;
 
   return {
-    name: "verge-mihomo",
-    targetFile: `verge-mihomo-${SIDECAR_HOST}${isWin ? ".exe" : ""}`,
+    name: "mihomo",
+    targetFile: `mihomo-${SIDECAR_HOST}${isWin ? ".exe" : ""}`,
     exeFile,
     zipFile,
     downloadURL,
diff --git a/scripts/portable-fixed-webview2.mjs b/scripts/portable-fixed-webview2.mjs
index b3424fb5..b88550a4 100644
--- a/scripts/portable-fixed-webview2.mjs
+++ b/scripts/portable-fixed-webview2.mjs
@@ -43,8 +43,8 @@ async function resolvePortable() {
   const zip = new AdmZip();
 
   zip.addLocalFile(path.join(releaseDir, "Clash Verge.exe"));
-  zip.addLocalFile(path.join(releaseDir, "verge-mihomo.exe"));
-  zip.addLocalFile(path.join(releaseDir, "verge-mihomo-alpha.exe"));
+  zip.addLocalFile(path.join(releaseDir, "mihomo.exe"));
+  zip.addLocalFile(path.join(releaseDir, "mihomo-alpha.exe"));
   zip.addLocalFolder(path.join(releaseDir, "resources"), "resources");
   zip.addLocalFolder(
     path.join(
diff --git a/scripts/portable.mjs b/scripts/portable.mjs
index 97a00d4a..5bfd2589 100644
--- a/scripts/portable.mjs
+++ b/scripts/portable.mjs
@@ -41,8 +41,8 @@ async function resolvePortable() {
   const zip = new AdmZip();
 
   zip.addLocalFile(path.join(releaseDir, "Clash Verge.exe"));
-  zip.addLocalFile(path.join(releaseDir, "verge-mihomo.exe"));
-  zip.addLocalFile(path.join(releaseDir, "verge-mihomo-alpha.exe"));
+  zip.addLocalFile(path.join(releaseDir, "mihomo.exe"));
+  zip.addLocalFile(path.join(releaseDir, "mihomo-alpha.exe"));
   zip.addLocalFolder(path.join(releaseDir, "resources"), "resources");
   zip.addLocalFolder(configDir, ".config");
 
diff --git a/src-tauri/packages/windows/installer.nsi b/src-tauri/packages/windows/installer.nsi
index 8aab55fe..38d0d4ad 100644
--- a/src-tauri/packages/windows/installer.nsi
+++ b/src-tauri/packages/windows/installer.nsi
@@ -444,35 +444,35 @@ FunctionEnd
     !endif
   ${EndIf}
 
-  ; Check if verge-mihomo-alpha.exe is running
+  ; Check if mihomo-alpha.exe is running
   !if "${INSTALLMODE}" == "currentUser"
-    nsis_tauri_utils::FindProcessCurrentUser "verge-mihomo-alpha.exe"
+    nsis_tauri_utils::FindProcessCurrentUser "mihomo-alpha.exe"
   !else
-    nsis_tauri_utils::FindProcess "verge-mihomo-alpha.exe"
+    nsis_tauri_utils::FindProcess "mihomo-alpha.exe"
   !endif
   Pop $R0
   ${If} $R0 = 0
-    DetailPrint "Kill verge-mihomo-alpha.exe..."
+    DetailPrint "Kill mihomo-alpha.exe..."
     !if "${INSTALLMODE}" == "currentUser"
-      nsis_tauri_utils::KillProcessCurrentUser "verge-mihomo-alpha.exe"
+      nsis_tauri_utils::KillProcessCurrentUser "mihomo-alpha.exe"
     !else
-      nsis_tauri_utils::KillProcess "verge-mihomo-alpha.exe"
+      nsis_tauri_utils::KillProcess "mihomo-alpha.exe"
     !endif
   ${EndIf}
 
-  ; Check if verge-mihomo.exe is running
+  ; Check if mihomo.exe is running
   !if "${INSTALLMODE}" == "currentUser"
-    nsis_tauri_utils::FindProcessCurrentUser "verge-mihomo.exe"
+    nsis_tauri_utils::FindProcessCurrentUser "mihomo.exe"
   !else
-    nsis_tauri_utils::FindProcess "verge-mihomo.exe"
+    nsis_tauri_utils::FindProcess "mihomo.exe"
   !endif
   Pop $R0
   ${If} $R0 = 0
-    DetailPrint "Kill verge-mihomo.exe..."
+    DetailPrint "Kill mihomo.exe..."
     !if "${INSTALLMODE}" == "currentUser"
-      nsis_tauri_utils::KillProcessCurrentUser "verge-mihomo.exe"
+      nsis_tauri_utils::KillProcessCurrentUser "mihomo.exe"
     !else
-      nsis_tauri_utils::KillProcess "verge-mihomo.exe"
+      nsis_tauri_utils::KillProcess "mihomo.exe"
     !endif
   ${EndIf}
 
diff --git a/src-tauri/src/config/verge.rs b/src-tauri/src/config/verge.rs
index 596f8c2a..ad74b6cf 100644
--- a/src-tauri/src/config/verge.rs
+++ b/src-tauri/src/config/verge.rs
@@ -214,7 +214,7 @@ impl IVerge {
 
     pub fn template() -> Self {
         Self {
-            clash_core: Some("verge-mihomo".into()),
+            clash_core: Some("mihomo".into()),
             language: Some("zh".into()),
             theme_mode: Some("system".into()),
             #[cfg(not(target_os = "windows"))]
diff --git a/src-tauri/src/core/core.rs b/src-tauri/src/core/core.rs
index ae3d71d3..82548048 100644
--- a/src-tauri/src/core/core.rs
+++ b/src-tauri/src/core/core.rs
@@ -37,7 +37,7 @@ impl CoreManager {
         let config_path = dirs::path_to_str(&config_path)?;
 
         let clash_core = { Config::verge().latest().clash_core.clone() };
-        let clash_core = clash_core.unwrap_or("verge-mihomo".into());
+        let clash_core = clash_core.unwrap_or("mihomo".into());
 
         let test_dir = dirs::app_home_dir()?.join("test");
         let test_dir = dirs::path_to_str(&test_dir)?;
@@ -110,7 +110,7 @@ impl CoreManager {
     /// 切换核心
     pub async fn change_core(&self, clash_core: Option<String>) -> Result<()> {
         let clash_core = clash_core.ok_or(anyhow::anyhow!("clash core is null"))?;
-        const CLASH_CORES: [&str; 2] = ["verge-mihomo", "verge-mihomo-alpha"];
+        const CLASH_CORES: [&str; 2] = ["mihomo", "mihomo-alpha"];
 
         if !CLASH_CORES.contains(&clash_core.as_str()) {
             bail!("invalid clash core name \"{clash_core}\"");
diff --git a/src-tauri/src/core/service.rs b/src-tauri/src/core/service.rs
index d4d5a93a..befdce90 100644
--- a/src-tauri/src/core/service.rs
+++ b/src-tauri/src/core/service.rs
@@ -180,7 +180,7 @@ pub async fn check_service() -> Result<JsonResponse> {
 /// start the clash by service
 pub(super) async fn run_core_by_service(config_file: &PathBuf) -> Result<()> {
     let clash_core = { Config::verge().latest().clash_core.clone() };
-    let clash_core = clash_core.unwrap_or("verge-mihomo".into());
+    let clash_core = clash_core.unwrap_or("mihomo".into());
 
     let bin_ext = if cfg!(windows) { ".exe" } else { "" };
     let clash_bin = format!("{clash_core}{bin_ext}");
diff --git a/src-tauri/src/enhance/chain.rs b/src-tauri/src/enhance/chain.rs
index 2fb7e951..7e568a9a 100644
--- a/src-tauri/src/enhance/chain.rs
+++ b/src-tauri/src/enhance/chain.rs
@@ -108,8 +108,8 @@ impl ChainSupport {
                 (self, core.as_str()),
                 (ChainSupport::All, _)
                     | (ChainSupport::Clash, "clash")
-                    | (ChainSupport::ClashMeta, "verge-mihomo")
-                    | (ChainSupport::ClashMetaAlpha, "verge-mihomo-alpha")
+                    | (ChainSupport::ClashMeta, "mihomo")
+                    | (ChainSupport::ClashMetaAlpha, "mihomo-alpha")
             ),
             None => true,
         }
diff --git a/src/components/setting/mods/clash-core-viewer.tsx b/src/components/setting/mods/clash-core-viewer.tsx
index 1574cc51..cfef80b2 100644
--- a/src/components/setting/mods/clash-core-viewer.tsx
+++ b/src/components/setting/mods/clash-core-viewer.tsx
@@ -21,7 +21,7 @@ import { changeClashCore, restartCore } from "@/services/cmds";
 import { closeAllConnections, upgradeCore } from "@/services/api";
 
 const VALID_CORE = [
-  { name: "Mihomo", core: "verge-mihomo", chip: "Release Version" },
+  { name: "Mihomo", core: "mihomo", chip: "Release Version" },
 ];
 
 export const ClashCoreViewer = forwardRef<DialogRef>((props, ref) => {
@@ -37,7 +37,7 @@ export const ClashCoreViewer = forwardRef<DialogRef>((props, ref) => {
     close: () => setOpen(false),
   }));
 
-  const { clash_core = "verge-mihomo" } = verge ?? {};
+  const { clash_core = "mihomo" } = verge ?? {};
 
   const onCoreChange = useLockFn(async (core: string) => {
     if (core === clash_core) return;
-- 
2.47.1

