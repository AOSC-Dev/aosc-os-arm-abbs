From 4192ee24367a1f81f6606255d6458d8a7a915eea Mon Sep 17 00:00:00 2001
From: Student Main <studentmain@aosc.io>
Date: Wed, 2 Oct 2024 21:29:55 +0000
Subject: [PATCH 2/2] don't create uninstaller, adjust desktop file

---
 src/calibre/linux.py | 38 ++++----------------------------------
 1 file changed, 4 insertions(+), 34 deletions(-)

diff --git a/src/calibre/linux.py b/src/calibre/linux.py
index 8b5e69be84..51061f1f21 100644
--- a/src/calibre/linux.py
+++ b/src/calibre/linux.py
@@ -783,8 +783,6 @@ def __init__(self, opts, info=prints, warn=None, manifest=None):
             self.setup_completion()
         if islinux or isbsd:
             self.setup_desktop_integration()
-        if not getattr(self.opts, 'staged_install', False):
-            self.create_uninstaller()
 
         from calibre.utils.config import config_dir
         if os.path.exists(config_dir):
@@ -794,8 +792,6 @@ def __init__(self, opts, info=prints, warn=None, manifest=None):
                     if os.stat(f).st_uid == 0:
                         import shutil
                         shutil.rmtree(f) if os.path.isdir(f) else os.unlink(f)
-                if os.stat(config_dir).st_uid == 0:
-                    os.rmdir(config_dir)
 
         if warn is None and self.warnings:
             self.info('\n\nThere were %d warnings\n'%len(self.warnings))
@@ -803,28 +799,6 @@ def __init__(self, opts, info=prints, warn=None, manifest=None):
                 self.info('*', *args, **kwargs)
                 print()
 
-    def create_uninstaller(self):
-        base = self.opts.staging_bindir
-        if not os.access(base, os.W_OK) and getattr(sys, 'frozen_path', False):
-            base = sys.frozen_path
-        dest = os.path.join(base, 'calibre-uninstall')
-        self.info('Creating un-installer:', dest)
-        raw = UNINSTALL.format(
-            python='/usr/bin/python', euid=os.geteuid(),
-            manifest=self.manifest, icon_resources=self.icon_resources,
-            mime_resources=self.mime_resources, menu_resources=self.menu_resources,
-            appdata_resources=self.appdata_resources, frozen_path=getattr(sys, 'frozen_path', None))
-        try:
-            with open(dest, 'wb') as f:
-                f.write(raw.encode('utf-8'))
-            os.chmod(dest, stat.S_IRWXU|stat.S_IRGRP|stat.S_IROTH)
-            if os.geteuid() == 0:
-                os.chown(dest, 0, 0)
-        except:
-            if self.opts.fatal_errors:
-                raise
-            self.task_failed('Creating uninstaller failed')
-
     def setup_completion(self):  # {{{
         try:
             self.info('Setting up command-line completion...')
@@ -914,7 +888,7 @@ def install_icons(iconsrc, basename, context, is_last_icon=False):
         mimetypes = set()
         for x in all_input_formats():
             mt = guess_type('dummy.'+x)[0]
-            if mt and 'chemical' not in mt and 'ctc-posml' not in mt:
+            if mt and 'chemical' not in mt and 'text' not in mt and 'pdf' not in mt and 'xhtml' not in mt:
                 mimetypes.add(mt)
         mimetypes.discard('application/octet-stream')
 
@@ -965,12 +939,8 @@ def write_mimetypes(f, extra=''):
         MIME_BASE = 'calibre-mimetypes.xml'
         MIME = P(MIME_BASE)
         self.mime_resources.append(MIME_BASE)
-        if not getattr(self.opts, 'staged_install', False):
-            cc(['xdg-mime', 'install', MIME])
-            cc(['xdg-desktop-menu', 'forceupdate'])
-        else:
-            from shutil import copyfile
-            copyfile(MIME, os.path.join(env['XDG_DATA_DIRS'], 'mime', 'packages', MIME_BASE))
+        from shutil import copyfile
+        copyfile(MIME, os.path.join(env['XDG_DATA_DIRS'], 'mime', 'packages', MIME_BASE))
     # }}}
 
 
@@ -1134,7 +1104,7 @@ def opts_and_exts(name, op, exts, cover_opts=('--cover',), opf_opts=(),
 [Desktop Entry]
 Version=1.0
 Type=Application
-Name=calibre
+Name=Calibre
 GenericName=E-book library management
 Comment=E-book library management: Convert, view, share, catalogue all your e-books
 TryExec=calibre
-- 
2.46.2

