From d63a1f0321d3afc28341ae1ac89cff5e62b8e14c Mon Sep 17 00:00:00 2001
From: Victor Westerhuis <victor@westerhu.is>
Date: Wed, 20 Jul 2022 13:43:01 +0200
Subject: [PATCH 1/2] Add fallback implementation for ck_assert_mem_*

These functions make it possible to test not-null terminated strings.
They were added in Check 0.11.0, but Ubuntu 20.04 only has version 0.10.
---
 test/test_common.h | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/test/test_common.h b/test/test_common.h
index 71360ef..ed30c1f 100644
--- a/test/test_common.h
+++ b/test/test_common.h
@@ -103,4 +103,20 @@ static inline int test_run_suite(Suite *s)
 		return test_run_suite(_suite); \
 	}
 
+#ifndef ck_assert_mem_eq
+#include <string.h>
+#define ck_assert_mem_eq(_x, _y, _len) \
+	ck_assert(memcmp((_x), (_y), (_len)) == 0)
+#define ck_assert_mem_ne(_x, _y, _len) \
+	ck_assert(memcmp((_x), (_y), (_len)) != 0)
+#define ck_assert_mem_lt(_x, _y, _len) \
+	ck_assert(memcmp((_x), (_y), (_len)) < 0)
+#define ck_assert_mem_le(_x, _y, _len) \
+	ck_assert(memcmp((_x), (_y), (_len)) <= 0)
+#define ck_assert_mem_gt(_x, _y, _len) \
+	ck_assert(memcmp((_x), (_y), (_len)) > 0)
+#define ck_assert_mem_ge(_x, _y, _len) \
+	ck_assert(memcmp((_x), (_y), (_len)) >= 0)
+#endif
+
 #endif /* TEST_COMMON_H */
-- 
2.46.0

