set -e
function apply_patch {
  for i in ../autobuild/patches/*
  do
    abinfo "Applying $i..."
    patch -Np1 -i "$i" || exit 1
  done
}

function build_components {
  BASE_ARGS='-release'
  for i in "${DN_COMPS[@]}"; do
    echo "Building ${i} ${PKGVER}..."
    if [[ "${i}" == 'coreclr' ]]; then
      local BUILD_ARGS="${BASE_ARGS} -ninja"
    elif [[ "${i}" == 'corefx' ]]; then
      local BUILD_ARGS="${BASE_ARGS}"
    fi
    pushd "${i}-${PKGVER}"
    apply_patch
    # if TERM is not set to xterm, msbuild will be very confused
    echo "./build.sh ${BUILD_ARGS}"
    TERM=xterm ./build.sh ${BUILD_ARGS} || exit 1
    popd
  done
}

# $1: destination dir
function install_files {
  DESTROOTDIR="$1/dotnet/"
  DESTDLLDIR="$1/dotnet/shared/Microsoft.NETCore.App/${PKGVER}/"
  DESTHOSTDIR="$1/dotnet/host/fxr/${PKGVER}/"
  mkdir -p "${DESTDLLDIR}"
  mkdir -p "${DESTHOSTDIR}"
  pushd "corefx-${PKGVER}"
  local BINDIR=$(find 'bin/runtime/' -name 'netcoreapp-Linux-Release*' -maxdepth 1 -type d | tail -n1)
  find "${BINDIR}" -type f -not -name "*.pdb" -exec cp {} "${DESTDLLDIR}" \;
  popd
  pushd "coreclr-${PKGVER}"
  local BINDIR=$(find 'bin/Product/' -maxdepth 1 -type d | tail -n1)
  find "${BINDIR}" -maxdepth 1 -type f -exec cp {} "${DESTDLLDIR}" \;
  popd
  mv "${DESTDLLDIR}/dotnet" "${DESTROOTDIR}"
  mv "${DESTDLLDIR}/libhostfxr.so" "${DESTHOSTDIR}"
}

function paste_sdk_json {
  git clone https://github.com/dotnet/cli/ dotnet-cli || exit 1
  cd dotnet-cli
  git checkout -f "tags/v${MATCHING_SDK_VER}+dependencies"
  abinfo "Building .NET CLI mux... (~10 mins, may fail)"
  ./run-build.sh -c release /p:CLIBUILD_SKIP_TESTS=true > ./build.log 2>&1
  abinfo "Build finished"
  cp -v ./bin/2/linux-*/dotnet/shared/Microsoft.NETCore.App/$PKGVER/Microsoft.NETCore.App.deps.json "$PKGDIR/usr/lib/dotnet/shared/Microsoft.NETCore.App/$PKGVER/" || exit 1
}

unset CFLAGS
unset CPPFLAGS
unset CXXFLAGS
unset LDFLAGS
build_components
install_files "$PKGDIR/usr/lib/"
paste_sdk_json
mkdir "$PKGDIR/usr/bin"
ln -sv /usr/lib/dotnet/dotnet "$PKGDIR/usr/bin"
