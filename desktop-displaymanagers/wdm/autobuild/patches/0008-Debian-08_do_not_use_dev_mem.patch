Author: Borislav Petkov <bp@alien8.de>
Description: Use /dev/urandom instead of /dev/mem
Bug-Debian: https://bugs.debian.org/700422

Borislav Petkov:

wdm still uses /dev/mem in genauth.c to generate a tmp key and it
shouldn't. The kernel currently allows userspace to read < 640K of 
/dev/mem for compatibility reasons with X. The modern way of getting 
two random longs is /dev/urandom and I've a patch below which
converts wdm to do that.

Index: wdm/doc/wdm.man.in
===================================================================
--- wdm.orig/doc/wdm.man.in	2013-02-12 18:26:27.879201302 +0100
+++ wdm/doc/wdm.man.in	2013-02-12 18:26:27.863202561 +0100
@@ -202,7 +202,7 @@
 .IP \fBDisplayManager.randomFile\fP
 A file to checksum to generate the seed of authorization keys.
 This should be a file that changes frequently.
-The default is \fI/dev/mem\fP.
+The default is \fI/dev/urandom\fP.
 .IP \fBDisplayManager.greeterLib\fP
 On systems that support a dynamically-loadable greeter library, the
 name of the library.  The default is
Index: wdm/src/wdm/genauth.c
===================================================================
--- wdm.orig/src/wdm/genauth.c	2013-02-12 18:26:27.879201302 +0100
+++ wdm/src/wdm/genauth.c	2013-02-12 18:26:27.875201665 +0100
@@ -71,37 +71,26 @@
 
 #if !defined(ARC4_RANDOM) && !defined(DEV_RANDOM)
 static int
-sumFile (char *name, long sum[2])
+sumFile (char *name, long sum[], unsigned n)
 {
-    long    buf[1024*2];
     int	    cnt;
     int	    fd;
-    int	    loops;
-    int	    reads;
-    int	    i;
-    int     ret_status = 0;
+    int     ret_status = 1;
 
     fd = open (name, O_RDONLY);
     if (fd < 0) {
 	WDMError("Cannot open randomFile \"%s\", errno = %d\n", name, errno);
 	return 0;
     }
-#ifdef FRAGILE_DEV_MEM
-    if (strcmp(name, "/dev/mem") == 0) lseek (fd, (off_t) 0x100000, SEEK_SET);
-#endif
-    reads = FILE_LIMIT;
-    sum[0] = 0;
-    sum[1] = 0;
-    while ((cnt = read (fd, (char *) buf, sizeof (buf))) > 0 && --reads > 0) {
-	loops = cnt / (2 * sizeof (long));
-	for (i = 0; i < loops; i+= 2) {
-	    sum[0] += buf[i];
-	    sum[1] += buf[i+1];
-	    ret_status = 1;
-	}
-    }
-    if (cnt < 0)
+
+    memset(sum, 0, n);
+
+    cnt = read(fd, (char *) sum, sizeof(long) * n);
+    if (cnt < 0) {
 	WDMError("Cannot read randomFile \"%s\", errno = %d\n", name, errno);
+	ret_status = 0;
+    }
+
     close (fd);
     return ret_status;
 }
@@ -139,7 +128,7 @@
     long	    sum[2];
     unsigned char   tmpkey[8];
 
-    if (!sumFile (randomFile, sum)) {
+    if (!sumFile (randomFile, sum, 2)) {
 	sum[0] = time ((Time_t *) 0);
 	sum[1] = time ((Time_t *) 0);
     }
@@ -244,7 +233,7 @@
 		localkey[0] = 1;
 	    }
 #else 
-    	    if (!sumFile (randomFile, localkey)) {
+    	    if (!sumFile (randomFile, localkey, 2)) {
 		localkey[0] = 1; /* To keep from continually calling sumFile() */
     	    }
 #endif
Index: wdm/src/wdm/resource.c
===================================================================
--- wdm.orig/src/wdm/resource.c	2013-02-12 18:26:27.879201302 +0100
+++ wdm/src/wdm/resource.c	2013-02-12 18:26:27.875201665 +0100
@@ -156,7 +156,7 @@
 #define DEF_ACCESS_FILE_PL	""
 #endif
 #ifndef DEF_RANDOM_FILE
-#define DEF_RANDOM_FILE "/dev/mem"
+#define DEF_RANDOM_FILE "/dev/urandom"
 #endif
 #ifndef DEF_GREETER_LIB
 #define DEF_GREETER_LIB "/X11/lib/X11/xdm/libXdmGreet.so"
