Author: Upstream SVN
--- a/CHANGES
+++ b/CHANGES
@@ -1,3 +1,10 @@
+UNRELEASED:
+
+- Make axel build on HP-UX, thanks Ciro Iriarte
+- Fix Solaris support (Closes: #312092), thanks Sebastian Kayser
+- Restore kapt meanings (Closes: #311811), thanks Daniel Gimpelevich
+- Add PO-Revision-Date header to ru.po
+
 Version 2.4
 
 - Fix a buffer overflow caused by wrong size limits  when copying strings (Closes: #311569), thanks Michael Schwendt and the Fedora project members
--- a/configure
+++ b/configure
@@ -42,8 +42,8 @@
 		exit;
 	fi
 	
-	keyname=$(expr "$e" : '\(.*\)=.*' | sed 's/[^a-z0-9_]/_/g')
-	value=$(expr "$e" : '.*=\(.*\)' | sed "s/'/_/g")
+	keyname=`expr "$e" : '\(.*\)=.*' | sed 's/[^a-z0-9_]/_/g'`
+	value=`expr "$e" : '.*=\(.*\)' | sed "s/'/_/g"`
 	
 	eval "$keyname='$value'"
 	shift;
@@ -73,7 +73,6 @@
 ARCH=$arch
 
 DESTDIR=
-LFLAGS=
 
 EOF
 
@@ -87,6 +86,8 @@
 
 EOF
 
+AXEL_LFLAGS=${LFLAGS}
+
 if [ "$i18n" = "1" ]; then
 	if type msgfmt > /dev/null 2> /dev/null; then :;else
 		echo 'WARNING: Internationalization disabled, you don'\''t have the necessary files'
@@ -94,11 +95,15 @@
 		echo ''
 		i18n=0;
 	fi;
+	
+	echo "all: i18n-mofiles" >> Makefile.settings
+	echo "install: install-i18n" >> Makefile.settings
+	echo "uninstall: uninstall-i18n" >> Makefile.settings
 fi
 
-echo "CFLAGS=-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -Os ${CFLAGS}" >> Makefile.settings
+AXEL_CFLAGS="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -Os ${CFLAGS}"
 if [ "$debug" = "1" ]; then
-	echo 'CFLAGS+=-g' >> Makefile.settings
+	AXEL_CFLAGS="${AXEL_CFLAGS} -g"
 	echo 'DEBUG=1' >> Makefile.settings
 	echo '#define DEBUG' >> config.h;
 fi
@@ -106,16 +111,23 @@
 if [ "$i18n" = "1" ]; then
 	echo 'I18N=1' >> Makefile.settings
 	echo '#define I18N' >> config.h
-	if cat /usr/local/include/libintl.h > /dev/null 2> /dev/null; then
-		echo 'CFLAGS+=-I/usr/local/include' >> Makefile.settings
-		echo 'LFLAGS+=-L/usr/local/lib' >> Makefile.settings;
-	fi;
+	if [ -f /usr/local/include/libintl.h ]; then
+		AXEL_CFLAGS="${AXEL_CFLAGS} -I/usr/local/include"
+		AXEL_LFLAGS="${AXEL_LFLAGS} -L/usr/local/lib"
+	elif [ -f /opt/csw/include/libintl.h ]; then
+		AXEL_CFLAGS="${AXEL_CFLAGS} -I/opt/csw/include"
+		AXEL_LFLAGS="${AXEL_LFLAGS} -L/opt/csw/lib"
+	elif [ -f "${prefix}/include/libintl.h" ]; then
+		AXEL_CFLAGS="${AXEL_CFLAGS} -I${prefix}/include"
+		AXEL_LFLAGS="${AXEL_LFLAGS} -L${prefix}/lib"
+	fi
 fi
 
 if [ "${CC}" != "" ]; then
 	echo "CC=${CC}" >> Makefile.settings;
 elif type gcc > /dev/null 2> /dev/null; then
 	echo "CC=gcc" >> Makefile.settings;
+	AXEL_CFLAGS="${AXEL_CFLAGS} -Wall"
 elif type cc > /dev/null 2> /dev/null; then
 	echo "CC=cc" >> Makefile.settings;
 else
@@ -126,9 +138,6 @@
 if [ "$strip" = 0 ]; then
 	echo "STRIP=\# skip strip" >> Makefile.settings;
 else
-	echo 'The strip option is enabled. This should not be a problem usually, but on some'
-	echo 'systems it breaks stuff.'
-	echo
 	if [ "$debug" = 1 ]; then
 		echo 'Stripping binaries does not make sense when debugging. Stripping disabled.'
 		echo
@@ -136,7 +145,7 @@
 		strip=0;
 	elif type strip > /dev/null 2> /dev/null; then
 		echo "STRIP=strip" >> Makefile.settings;
-	elif /bin/test -x /usr/ccs/bin/strip; then
+	elif [ -x /usr/ccs/bin/strip ]; then
 		echo "STRIP=/usr/ccs/bin/strip" >> Makefile.settings;
 	else
 		echo 'No strip utility found, cannot remove unnecessary parts from executable.'
@@ -149,81 +158,82 @@
 case "$arch" in
 FreeBSD )
 	echo '#define NOGETOPTLONG' >> config.h
-	echo 'LFLAGS+=-pthread' >> Makefile.settings
+	AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
 	if [ "$i18n" = "1" ]; then
-		echo 'LFLAGS+=-lintl' >> Makefile.settings;
+		AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
 	fi
-	echo 'Please keep in mind that you need GNU make to make Axel!'
-	echo ''
 ;;
 OpenBSD )
 	echo '#define NOGETOPTLONG' >> config.h
-	echo 'LFLAGS+=-pthread' >> Makefile.settings
+	AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
 	if [ "$i18n" = "1" ]; then
-		echo 'LFLAGS+=-lintl' >> Makefile.settings;
+		AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
 	fi
-	echo 'Please keep in mind that you need GNU make to make Axel!'
-	echo ''
 ;;
 NetBSD )
 	echo 'WARNING: NetBSD not tested! Using OpenBSD settings.'
-	echo '         Please send me your results so I can update this!'
-	echo ''
 	echo '#define NOGETOPTLONG' >> config.h
-	echo 'LFLAGS+=-pthread' >> Makefile.settings
+	AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
 	if [ "$i18n" = "1" ]; then
-		echo 'LFLAGS+=-lintl' >> Makefile.settings;
+		AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
 	fi
-	echo 'Please keep in mind that you need GNU make to make Axel!'
-	echo ''
 ;;
 Darwin )
 	echo '#define NOGETOPTLONG' >> config.h
-	echo 'LFLAGS+=-lpthread' >> Makefile.settings
+	AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
 	if [ "$i18n" = "1" ]; then
-		echo 'LFLAGS+=-lintl' >> Makefile.settings;
+		AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
 	fi
 	echo '#define DARWIN' >> config.h
-	echo 'Please keep in mind that you need GNU make to make Axel!'
-	echo ''
 ;;
 Linux | GNU/kFreeBSD)
-	echo 'LFLAGS+=-lpthread' >> Makefile.settings
+	AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
 ;;
 SunOS )
 	echo '#define NOGETOPTLONG' >> config.h
 	echo '#define BSD_COMP' >> config.h
-	echo 'LFLAGS+=-lpthread -lsocket -lnsl' >> Makefile.settings
+	AXEL_LFLAGS="${AXEL_LFLAGS} -pthread -lsocket -lnsl"
 	if [ "$i18n" = "1" ]; then
-		echo 'LFLAGS+=-lintl' >> Makefile.settings;
+		AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
 	fi
-	echo 'Please keep in mind that you need GNU make to make Axel!'
-	echo ''
+;;
+HP-UX )
+	echo '#define NOGETOPTLONG' >> config.h
+	if [ "$i18n" = "1" ]; then
+		if [ -d /usr/local/lib/hpux32 ]; then
+			AXEL_LFLAGS="${AXEL_LFLAGS} -L/usr/local/lib/hpux32"
+		fi
+		AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
+	fi
+	AXEL_LFLAGS="${AXEL_LFLAGS} -lpthread"
 ;;
 CYGWIN_* )
-	echo 'LFLAGS+=-lpthread' >> Makefile.settings
+	AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
 	if [ "$i18n" = "1" ]; then
-		echo 'LFLAGS+=-lintl' >> Makefile.settings;
+		AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
 	fi
 	echo 'OUTFILE=axel.exe' >> Makefile.settings
 ;;
 * )
-	echo 'LFLAGS+=-lpthread' >> Makefile.settings
+	AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
 	echo '#define NOGETOPTLONG' >> config.h
 	if [ "$i18n" = "1" ]; then
-		echo 'LFLAGS+=-lintl' >> Makefile.settings;
+		AXEL_LFLAGS="${AXEL_LFLAGS} -lintl";
 	fi
 	echo 'WARNING: This architecture is unknown!'
 	echo ''
-	echo 'That does not mean Axel will not work, it just means I'\''ve never had the chance'
-	echo 'to test Axel on it. It'\''d be a great help if you could send me more information'
-	echo 'about your platform so I can add it to the build tools.'
+	echo 'That does not mean Axel will not work, it just means Axel is not tested on it.'
+	echo 'It'\''d be a great help if you could send me more information'
+	echo 'about your platform so that it can be addedto the build tools.'
 	echo 'You can try to build the program now, if you wish, this default setup might'
 	echo 'just work.'
 	echo ''
 ;;
 esac
 
+echo "CFLAGS=${AXEL_CFLAGS}" >> Makefile.settings
+echo "LFLAGS=${AXEL_LFLAGS}" >> Makefile.settings
+
 echo 'Configuration done:'
 if [ "$i18n" = "1" ]; then
 	echo '  Internationalization enabled.';
--- a/de.po
+++ b/de.po
@@ -2,7 +2,7 @@
 msgstr ""
 "Project-Id-Version: Axel\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-04-27 13:21+0530\n"
+"POT-Creation-Date: 2009-04-02 00:01+0200\n"
 "PO-Revision-Date: 2008-09-15 22:08+0200\n"
 "Last-Translator: Hermann J. Beckers <hj.beckers@onlinehome.de>\n"
 "Language-Team: deutsch <de@li.org>\n"
--- a/gui/kapt/axel-kapt
+++ b/gui/kapt/axel-kapt
@@ -40,20 +40,21 @@
 
 b = '''";
 config :horizontal "OPTIONS" -> checks term max connex search;
-    checks  :horizontal -> proxy verb quiet;
-        proxy "No Proxy" -> @|" -N ";
-        verb "Verbose" -> @|" --verbose ";
-        quiet "Quiet" -> @|" -q ";
+    checks  :horizontal -> proxy verb quiet altern;
+        proxy "No Proxy" -> "-N " | ! @ ;
+        verb "Verbose" -> "--verbose " | ! @;
+        quiet "Quiet" -> "-q " | ! @ ;
+        altern "Alt Progress" -> "-a " | @;
 
-    term "Terminal Type" -> @string()="xterm";
+    term "Terminal Type" -> @string()="x-terminal-emulator";
     max "Max bps"-> @integer()=0;
     connex :horizontal "Connections" -> @integer()=4;
     search :framed "ftp Search" -> numsites | ! @ ;
-        numsites -> " --search=" @integer()=3;
+        numsites -> "--search=" @integer()=3 " ";
 
 
 local -> file | ! @ ;
-    file "Save as (optional). Choose a directory and type a filename..." -> " --output=" @directory();
+    file "Save as (optional). Choose a directory and type a filename..." -> "--output=\\"" @directory() "\\" ";
 
 buttons :horizontal "Actions" -> help mail doit quit;
     help -> @preview(helpstr,"Close")="Help";
@@ -71,7 +72,7 @@
 
 bug -> "Please visit http://axel.alioth.debian.org/ to report bugs on axel-kapt";
 
-axel -> term " -e axel -s " max " -n "connex proxy verb quiet search " " local " " url;
+axel -> term " -e axel -s " max " -n "connex " " proxy verb quiet altern search local url;
 '''
 try:
     c = string.join(sys.argv[1:])
--- a/Makefile
+++ b/Makefile
@@ -4,7 +4,6 @@
 ## Copyright 2001 Lintux ##
 ###########################
 
-
 ### DEFINITIONS
 
 -include Makefile.settings
@@ -19,12 +18,6 @@
 install: install-bin install-etc install-man
 uninstall: uninstall-bin uninstall-etc uninstall-man
 
-ifdef I18N
-all: $(MOFILES)
-install: install-i18n
-uninstall: uninstall-i18n
-endif
-
 clean:
 	rm -f *.o $(OUTFILE) search core *.mo
 
@@ -52,12 +45,10 @@
 
 $(OUTFILE): axel.o conf.o conn.o ftp.o http.o search.o tcp.o text.o
 	$(CC) *.o -o $(OUTFILE) $(LFLAGS)
-ifndef DEBUG
-	-$(STRIP) $(OUTFILE)
-endif
+	$(STRIP) $(OUTFILE)
 
 .c.o:
-	$(CC) -c $*.c -o $*.o -Wall $(CFLAGS)
+	$(CC) -c $*.c -o $*.o $(CFLAGS)
 
 install-bin:
 	mkdir -p $(DESTDIR)$(BINDIR)/
@@ -67,8 +58,8 @@
 	rm -f $(BINDIR)/$(OUTFILE)
 
 tar:
-	version=$$(sed -n 's/#define AXEL_VERSION_STRING[ \t]*"\([^"]*\)"/\1/p' < axel.h) && \
-	tar --create --transform "s#^#axel-$${version}/#" "--file=axel-$${version}.tar" --exclude-vcs -- *.c *.h *.po *.1 configure Makefile axelrc.example gui API CHANGES COPYING CREDITS README && \
+	version=`sed -n 's/#define AXEL_VERSION_STRING[ \t]*"\([^"]*\)"/\1/p' < axel.h` && \
+	tar --create --numeric-owner --owner 0 --group 0 --transform "s#^#axel-$${version}/#" "--file=axel-$${version}.tar" --exclude-vcs -- *.c *.h *.po *.1 configure Makefile axelrc.example gui API CHANGES COPYING CREDITS README && \
 	gzip --best < "axel-$${version}.tar" > "axel-$${version}.tar.gz" && \
 	bzip2 --best < "axel-$${version}.tar" > "axel-$${version}.tar.bz2"
 
@@ -88,6 +79,8 @@
 .po.mo: $@.po
 	msgfmt -vo $@ $*.po
 
+i18n-mofiles: $(MOFILES)
+
 install-i18n:
 	@echo Installing locale files...
 	@for i in $(MOFILES); do \
--- a/nl.po
+++ b/nl.po
@@ -2,7 +2,7 @@
 msgstr ""
 "Project-Id-Version: Axel\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-04-27 13:21+0530\n"
+"POT-Creation-Date: 2009-04-02 00:04+0200\n"
 "PO-Revision-Date: 2001-11-14 15:22+0200\n"
 "Last-Translator: Wilmer van der Gaast <wilmer@gaast.net>\n"
 "Language-Team: Dutch <nl@li.org>\n"
--- /dev/null
+++ b/ROADMAP
@@ -0,0 +1,110 @@
+Roadmap for Axel v2
+===================
+
+* Check if strrstr is provided by environment
+* Use SI prefixes
+
+Roadmap for Axel v3
+===================
+
+Note: This document provides only a rough overview what to do next. Refer to the bugtracker ( https://alioth.debian.org/tracker/?group_id=100070&atid=413085 ) for detailled information.
+Pre-release version numbers of Axel 3 will start with 2.99. Starting with the 3.x series, the following version scheme will be adopted:
+
+x.y.z
+
+x: Complete overhaul of the code structure
+y: New features and/or speed/size improvements
+z: Bug fixed
+
+Features
+========
+
+* HTTP authentication (#310785)
+ This is actually already implemented and should be documented. Using -H is possible, too.
+
+* Metalink (#310625)
+ Basic Metalink support should not be that difficult. However, it will only be compiled if METALINK is defined. Metalink support will require libxml2. As libmetalink is currently unusable for us (private symbols), we'll implement the format ourselves.
+
+* .netrc (#310635)
+ There are lots of GPLed implementations flying around. To minimize code size, it shouldn't be compiled in by default if the code exceeds a couple of bytes. Anyway, it's just one call from Axel's point of view.
+
+* Prevent connection to same server (#310638)
+ See tcp.c below for the implementation (aside from a flag in the configuration and a cli flag).
+
+* Force overriding state file (#311022)
+ Shouldn't be difficult and take more than a couple of bytes.
+
+* SSL protocols (HTTPS, FTPS) (#311163)
+
+* Parse Content-Disposition header (#311101)
+ Look if the specific problem mentioned in the bug is fixed by this.
+
+Code structure
+==============
+
+* conn.c
+ needs cleanup, possibly even elimination. Most functions look like
+ if (ftp && !proxy) {
+ // ... do FTP stuff (15 lines)
+ } else {
+ // ... do HTTP stuff (20 lines)
+ }
+ We should at least abstract the switch between HTTP and FTP and look what can be done about simplifiying and documenting the functions here.
+
+ Furthermore, redirecting should be cached somehow/done only once lest we reach the redirect limit because it's less than -n.
+* tcp.c
+ should be checked. The functions look a little bit obscure to me. But maybe, that's just me. Before we implement #310638, we should include some round-robin trickery in here.
+* Removing MAX_STRING(#311085) and MAX_ADD_HEADERS. These are arbitrary restrictions and may hide a number of strange bugs. Furthermore, statically sized fields are a waste of memory.
+* Add die messages: Axel must not exit with != 0 without telling why.
+* Add debugging messages: When compiled with DEBUG, Axel could be more verbose. This won't harm anything and may serve as comments.
+* Some functions could use a little bit of documentation.
+* Remove all logic from text.c
+* Ensure correct synchronization of thread state (volatile?)
+* Cleanup AXEL_LEGACY
+* rewrite axel-kapt to be sane (probably sh, or even #!/usr/bin/env kaptain suffices) or remove it in favor of a sane GUI
+
+Bugs
+====
+
+We're gonna fix them all!
+#310979 seems pretty vague.
+
+Check spaces in FTP and HTTP URLs
+
+(User) Documentation
+====================
+
+* As previously mentioned, authentication should be documented.
+* Update API
+
+3.1
+===
+
+* Cookies (#310835)
+ Can be implemented via -H. The bug called for reading the Netcape-style cookies.txt (Wget's --load--cokies option). Domain-specific cookies could be rather complex to implement. If the implementation of this feature costs more than 100B, it should be deselectable.
+* Rate-limit status messages (#TODO)
+* Don't discard first HTTP connection, but use it adaptively (start requests from the end, RST as soon as first task is fullfilled)
+* A -1 option: Just make one request, and only one.
+* IPv6 support
+
+3.2
+===
+
+* Write a macro ERROR_MESSAGE(msg) (msg), enclose all _("some long error message") and offer a compilation option for a single error message, see if that yields any size improvements
+* Check compilation with dietlibc(http://www.fefe.de/dietlibc/) and uclibc(http://www.uclibc.org/):
+	· How to compile with these libraries
+	· Does this actually improve the binary size?
+	· Check warnings/suggestions
+* valgrind and friends
+* Test very large -n values. Check pthread thread stack size.
+
+Future/Ideas
+============
+
+* Real FTPS (AUTH)?
+* Allow downloading to /dev/null for debugging or speed test purposes (Statefile in memory or so)
+* Desktop integration, look who likes download accelerators
+* Check the syscalls we make. Check whether timing and read() calls can be optimized
+* Write automated tests to test all these nifty corner cases. Either a test webserver or LD_PRELOAD injection of all syscalls (see libfake*)
+* Write a helper script that displays the final binary size for different configurations to determine what a particular feature costs
+* Document and implement coding conventions, versioning scheme
--- a/ru.po
+++ b/ru.po
@@ -2,7 +2,8 @@
 msgstr ""
 "Project-Id-Version: Axel\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-04-27 13:21+0530\n"
+"POT-Creation-Date: 2009-04-02 00:05+0200\n"
+"PO-Revision-Date: 2009-04-02 00:05+0200\n"
 "Last-Translator: newhren <colimit@gmail.com>\n"
 "Language-Team: Russian <ru@li.org>\n"
 "MIME-Version: 1.0\n"
--- a/search.c
+++ b/search.c
@@ -25,7 +25,7 @@
 
 #include "axel.h"
 
-static char *strrstr( char *haystack, char *needle );
+static char *axel_strrstr( char *haystack, char *needle );
 static void *search_speedtest( void *r );
 static int search_sortlist_qsort( const void *a, const void *b );
 
@@ -136,7 +136,7 @@
 	for( i = 1; strncmp( s1, "</pre>", 6 ) && i < results->conf->search_amount && *s1; i ++ )
 	{
 		s3 = strchr( s1, '\n' ); *s3 = 0;
-		s2 = strrstr( s1, "<a href=" ) + 8;
+		s2 = axel_strrstr( s1, "<a href=" ) + 8;
 		*s3 = '\n';
 		s3 = strchr( s2, ' ' ); *s3 = 0;
 		if( strcmp( results[0].url, s2 ) )
@@ -257,7 +257,7 @@
 	return( NULL );
 }
 
-char *strrstr( char *haystack, char *needle )
+char *axel_strrstr( char *haystack, char *needle )
 {
 	int i, j;
 	
--- a/text.c
+++ b/text.c
@@ -276,12 +276,12 @@
 			}
 		}
 		sprintf( string, "%s.st", fn );
-		if( access( fn, F_OK ) == 0 ) if( access( string, F_OK ) != 0 )
+		if( access( fn, F_OK ) == 0 && access( string, F_OK ) != 0 )
 		{
 			fprintf( stderr, _("No state file, cannot resume!\n") );
 			return( 1 );
 		}
-		if( access( string, F_OK ) == 0 ) if( access( fn, F_OK ) != 0 )
+		if( access( string, F_OK ) == 0 && access( fn, F_OK ) != 0 )
 		{
 			printf( _("State file found, but no downloaded data. Starting from scratch.\n" ) );
 			unlink( string );
@@ -435,14 +435,14 @@
 /* Convert a number of bytes to a human-readable form			*/
 char *size_human( long long int value )
 {
-	if( value == 1 )
+	if( value < 1024 )
 		sprintf( string, _("%lld byte"), value );
-	else if( value < 1024 )
-		sprintf( string, _("%lld bytes"), value );
-	else if( value < 10485760 )
-		sprintf( string, _("%.1f kilobytes"), (float) value / 1024 );
+	else if( value < 1024 * 1024 )
+		sprintf( string, _("%.1f Kilobyte"), (float) value / 1024 );
+	else if( value < 1024 * 1024 * 1024 )
+		sprintf( string, _("%.1f Megabyte"), (float) value / (1024 * 1024) );
 	else
-		sprintf( string, _("%.1f megabytes"), (float) value / 1048576 );
+		sprintf( string, _("%.1f Gigabyte"), (float) value / (1024 * 1024 * 1024) );
 	
 	return( string );
 }
--- a/zh_CN.po
+++ b/zh_CN.po
@@ -2,7 +2,7 @@
 msgstr ""
 "Project-Id-Version: Axel\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-04-27 13:21+0530\n"
+"POT-Creation-Date: 2009-04-02 00:06+0200\n"
 "PO-Revision-Date: 2008-11-08 22:40+0700\n"
 "Last-Translator: Shuge Lee <shuge.lee@gmail.com>\n"
 "Language-Team: Simplified Chinese <i18n-zh@i18n.org>\n"
