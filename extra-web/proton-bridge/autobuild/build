abinfo "Installing Qt 5 binding for Go ..."
go install -v -tags=no_env github.com/therecipe/qt/cmd/...
export PATH="$PATH":"$HOME/go/bin/"

abinfo "Fetching Go dependencies ..."
go mod vendor

abinfo "Setting up a fake Go Qt 5 binary prefix ..."
mkdir -pv "$SRCDIR"/qt5_dir/env_linux_amd64_513/5.13.0/gcc_64/{qml,resources,translations,plugins,mkspecs,libexec,lib,bin}/
ln -sv /usr/bin/rcc "$SRCDIR"/qt5_dir/env_linux_amd64_513/5.13.0/gcc_64/bin/
ln -sv /usr/bin/moc "$SRCDIR"/qt5_dir/env_linux_amd64_513/5.13.0/gcc_64/bin/
cat << 'EOF' > qt5_dir/env_linux_amd64_513/5.13.0/gcc_64/bin/qmake
#!/bin/bash

case "$1" in
  -query)
    DIRNAME="$(dirname "$0")"
    echo "$(readlink -f "${DIRNAME}/../")"
    ;;
  *)
    /usr/bin/qmake $@
    ;;
esac
EOF
ln -sv /usr/include/qt5/ qt5_dir/env_linux_amd64_513/5.13.0/gcc_64/include
chmod a+x "$SRCDIR"/qt5_dir/env_linux_amd64_513/5.13.0/gcc_64/bin/qmake

abinfo "Adjusting CGO flags whitelist ..."
export CGO_LDFLAGS_ALLOW=".*"
export CGO_CFLAGS_ALLOW=".*"
export CGO_CXXFLAGS_ALLOW=".*"

abinfo "Swapping Qt 5 prebuilt binaries with our fake one ..."
rm -rf "$SRCDIR"/vendor/github.com/therecipe/env_linux_amd64_513
ln -sv "$SRCDIR"/qt5_dir/env_linux_amd64_513 vendor/github.com/therecipe/env_linux_amd64_513

abinfo "Building main executable ..."
cp "$SRCDIR"/cmd/Desktop-Bridge/main.go .
qtdeploy -tags='pmapi_prod' -ldflags "-X github.com/ProtonMail/proton-bridge/pkg/constants.Version=$PKGVER-git -X github.com/ProtonMail/proton-bridge/pkg/constants.Revision=$(git rev-parse --short=10 HEAD) -X github.com/ProtonMail/proton-bridge/pkg/constants.BuildTime=$(date -uIs) -w -s -extldflags '-Wl,-z,relro -Wl,-z,now -specs=/usr/lib/gcc/specs/hardened-ld'" build desktop
rm -fv main.go

abinfo "Building Importer ..."
cp "$SRCDIR"/cmd/Import-Export/main.go .
qtdeploy -tags='pmapi_prod' -ldflags "-X github.com/ProtonMail/proton-bridge/pkg/constants.Version=1.2.3-git -X github.com/ProtonMail/proton-bridge/pkg/constants.Revision=$(git rev-parse --short=10 HEAD) -X github.com/ProtonMail/proton-bridge/pkg/constants.BuildTime=$(date -uIs) -w -s -extldflags '-Wl,-z,relro -Wl,-z,now -specs=/usr/lib/gcc/specs/hardened-ld'" build desktop

abinfo "Installing files ..."
install -d "$PKGDIR"/usr/bin/
install -Dm755 "$SRCDIR"/deploy/linux/proton-bridge "$PKGDIR"/usr/bin/
install -Dm755 "$SRCDIR"/deploy/linux/proton-ie "$PKGDIR"/usr/bin/

abinfo "Making symlinks to the LICENSE files ..."
install -d "$PKGDIR"/usr/share/doc/
# the application will actually try to access these files
ln -sv proton-bridge "$PKGDIR"/usr/share/doc/protonmail-bridge
ln -sv proton-bridge "$PKGDIR"/usr/share/doc/protonmail-import-export
