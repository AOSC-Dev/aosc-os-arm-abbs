#
#  Backport of https://bugzilla.mozilla.org/show_bug.cgi?id=765074 .
#  As a side effect fixes the issue "missed checkbox for save password"
#  in the password prompt when only compose window is present.
#

--- a/comm/suite/mailnews/components/compose/content/MsgComposeCommands.js.orig	2020-12-22 14:42:59.000000000 +0300
+++ b/comm/suite/mailnews/components/compose/content/MsgComposeCommands.js	2021-01-31 04:53:17.436267756 +0300
@@ -34,27 +34,29 @@ var mozISpellCheckingEngine = Ci.mozISpe
 var sMsgComposeService = Cc["@mozilla.org/messengercompose;1"].getService(Ci.nsIMsgComposeService);
 var sComposeMsgsBundle;
 var sBrandBundle;
 
 var sRDF = null;
 var sNameProperty = null;
 var sDictCount = 0;
 
-/* Create message window object. This is use by mail-offline.js and therefore should not be renamed. We need to avoid doing
-   this kind of cross file global stuff in the future and instead pass this object as parameter when needed by function
-   in the other js file.
-*/
-var msgWindow = Cc["@mozilla.org/messenger/msgwindow;1"]
-                  .createInstance(Ci.nsIMsgWindow);
-var gMessenger = Cc["@mozilla.org/messenger;1"]
-                   .createInstance(Ci.nsIMessenger);
+/**
+ * Global message window object. This is used by mail-offline.js and therefore
+ * should not be renamed. We need to avoid doing this kind of cross file global
+ * stuff in the future and instead pass this object as parameter when needed by
+ * functions in the other js file.
+ */
+var msgWindow;
+
+var gMessenger;
 
 /**
- * Global variables, need to be re-initialized every time mostly because we need to release them when the window close
+ * Global variables, need to be re-initialized every time mostly because
+ * we need to release them when the window closes.
  */
 var gHideMenus;
 var gMsgCompose;
 var gOriginalMsgURI;
 var gAccountManager;
 var gWindowLocked;
 var gContentChanged;
 var gAutoSaving;
@@ -77,61 +79,66 @@ var gFormatToolbarHidden = false;
 // i18n globals
 var gCharsetConvertManager;
 
 var gLastWindowToHaveFocus;
 var gReceiptOptionChanged;
 var gDSNOptionChanged;
 var gAttachVCardOptionChanged;
 
-var gMailSession;
 var gAutoSaveInterval;
 var gAutoSaveTimeout;
 var gAutoSaveKickedIn;
 var gEditingDraft;
 
 var kComposeAttachDirPrefName = "mail.compose.attach.dir";
 
 function InitializeGlobalVariables()
 {
+  gMessenger = Cc["@mozilla.org/messenger;1"]
+                 .createInstance(Ci.nsIMessenger);
   gAccountManager = Cc["@mozilla.org/messenger/account-manager;1"].getService(Ci.nsIMsgAccountManager);
 
   gMsgCompose = null;
   gOriginalMsgURI = null;
   gWindowLocked = false;
   gContentChanged = false;
   gCurrentIdentity = null;
   defaultSaveOperation = "draft";
   gSendOrSaveOperationInProgress = false;
   gAutoSaving = false;
   gCloseWindowAfterSave = false;
   gSavedSendNowKey = null;
   gSendFormat = nsIMsgCompSendFormat.AskUser;
   gCharsetConvertManager = Cc['@mozilla.org/charset-converter-manager;1'].getService(Ci.nsICharsetConverterManager);
-  gMailSession = Cc["@mozilla.org/messenger/services/session;1"].getService(Ci.nsIMsgMailSession);
   gHideMenus = false;
   // We are storing the value of the bool logComposePerformance inorder to avoid logging unnecessarily.
   if (sMsgComposeService)
     gLogComposePerformance = sMsgComposeService.logComposePerformance;
 
   gLastWindowToHaveFocus = null;
   gReceiptOptionChanged = false;
   gDSNOptionChanged = false;
   gAttachVCardOptionChanged = false;
+  msgWindow = Cc["@mozilla.org/messenger/msgwindow;1"]
+                .createInstance(Ci.nsIMsgWindow);
+  MailServices.mailSession.AddMsgWindow(msgWindow);
 }
 InitializeGlobalVariables();
 
 function ReleaseGlobalVariables()
 {
   gAccountManager = null;
   gCurrentIdentity = null;
   gCharsetConvertManager = null;
   gMsgCompose = null;
+  gMessenger = null;
+  MailServices.mailSession.RemoveMsgWindow(msgWindow);
+  msgWindow = null;
   gOriginalMsgURI = null;
-  gMailSession = null;
 }
 
 function disableEditableFields()
 {
   gMsgCompose.editor.flags |= nsIPlaintextEditorMail.eEditorReadonlyMask;
   var disableElements = document.getElementsByAttribute("disableonsend", "true");
   for (let i = 0; i < disableElements.length; i++)
     disableElements[i].setAttribute('disabled', 'true');
@@ -1504,16 +1511,20 @@ function ComposeUnload()
   EditorCleanup();
 
   RemoveMessageComposeOfflineQuitObserver();
 
   if (gMsgCompose)
     gMsgCompose.UnregisterStateListener(stateListener);
   if (gAutoSaveTimeout)
     clearTimeout(gAutoSaveTimeout);
+  if (msgWindow)
+    msgWindow.closeWindow();
+
+  ReleaseGlobalVariables();
 }
 
 function ComposeSetCharacterSet(aEvent)
 {
   if (gMsgCompose)
     SetDocumentCharacterSet(aEvent.target.getAttribute("charset"));
   else
     dump("Compose has not been created!\n");
