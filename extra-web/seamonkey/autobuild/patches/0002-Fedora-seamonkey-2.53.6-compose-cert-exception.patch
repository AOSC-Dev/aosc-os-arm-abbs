--- a/comm/suite/mailnews/components/compose/content/MsgComposeCommands.js.orig	2021-01-31 04:53:17.436267756 +0300
+++ b/comm/suite/mailnews/components/compose/content/MsgComposeCommands.js	2021-01-31 05:05:41.918264249 +0300
@@ -1456,16 +1456,18 @@ function ComposeLoad()
            .getService(Ci.nsIRDFService);
   sNameProperty = sRDF.GetResource("http://home.netscape.com/NC-rdf#Name?sort=true");
 
   AddMessageComposeOfflineQuitObserver();
 
   if (gLogComposePerformance)
     sMsgComposeService.TimeStamp("Start initializing the compose window (ComposeLoad)", false);
 
+  msgWindow.notificationCallbacks = new ComposeBadCertHandler();
+
   try {
     SetupCommandUpdateHandlers();
     // This will do migration, or create a new account if we need to.
     // We also want to open the account wizard if no identities are found
     var state = verifyAccounts(WizCallback, true);
 
     if (otherHeaders) {
       var selectNode = document.getElementById('addressCol1#1');
@@ -3647,8 +3649,49 @@ function loadBlockedImage(aURL, aReturnD
   let editor = GetCurrentEditor();
   for (let img of editor.document.images) {
     if (img.src == aURL) {
       img.src = dataURL; // Swap to data URL.
       img.classList.remove("loading-internal");
     }
   }
 }
+
+/**
+ * Derived from the similar code from mailnews/content/mailTasksOverlay.js
+ */
+function ComposeBadCertHandler() {
+}
+
+ComposeBadCertHandler.prototype = {
+  // Suppress any certificate errors
+  notifyCertProblem: function(socketInfo, status, targetSite) {
+    if (!status)
+      return true;
+
+    setTimeout(ComposeInformUserOfCertError, 0, status, targetSite);
+    return true;
+  },
+
+  // nsIInterfaceRequestor
+  getInterface: function(iid) {
+    return this.QueryInterface(iid);
+  },
+
+  // nsISupports
+  QueryInterface: function(iid) {
+    if (!iid.equals(Ci.nsIBadCertListener2) &&
+        !iid.equals(Ci.nsIInterfaceRequestor) &&
+        !iid.equals(Ci.nsISupports))
+      throw Cr.NS_ERROR_NO_INTERFACE;
+    return this;
+  }
+};
+
+function ComposeInformUserOfCertError(status, targetSite)
+{
+  var params = { exceptionAdded : false,
+                 sslStatus : status,
+                 prefetchCert : true,
+                 location : targetSite };
+  window.openDialog('chrome://pippki/content/exceptionDialog.xul',
+                  '','chrome,centerscreen,modal', params);
+}
