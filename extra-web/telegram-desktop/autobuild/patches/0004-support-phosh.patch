diff --git a/Telegram/SourceFiles/core/launcher.cpp b/Telegram/SourceFiles/core/launcher.cpp
index 31e130a97..40baa98e8 100644
--- a/Telegram/SourceFiles/core/launcher.cpp
+++ b/Telegram/SourceFiles/core/launcher.cpp
@@ -61,7 +61,8 @@ FilteredCommandLineArguments::FilteredCommandLineArguments(
 #endif // !Q_OS_WIN
 	}
 #elif defined Q_OS_UNIX
-	if (Platform::DesktopEnvironment::IsGnome() && qEnvironmentVariableIsEmpty("QT_QPA_PLATFORM")) {
+	if (Platform::DesktopEnvironment::IsGnome() && !Platform::DesktopEnvironment::IsPhosh() &&
+	    qEnvironmentVariableIsEmpty("QT_QPA_PLATFORM")) {
 		pushArgument("-platform");
 		pushArgument("xcb;wayland");
 	}
diff --git a/Telegram/SourceFiles/platform/linux/linux_desktop_environment.cpp b/Telegram/SourceFiles/platform/linux/linux_desktop_environment.cpp
index 63865d56f..71a4716f2 100644
--- a/Telegram/SourceFiles/platform/linux/linux_desktop_environment.cpp
+++ b/Telegram/SourceFiles/platform/linux/linux_desktop_environment.cpp
@@ -61,6 +61,8 @@ std::vector<Type> Compute() {
 			result.push_back(Type::KDE);
 		} else if (desktop == qstr("mate")) {
 			result.push_back(Type::MATE);
+		} else if (desktop == qstr("phosh")) {
+			result.push_back(Type::Phosh);
 		}
 	};
 
@@ -110,6 +112,7 @@ std::vector<Type> ComputeAndLog() {
 			case Type::KDE: return qsl("KDE, ");
 			case Type::Unity: return qsl("Unity, ");
 			case Type::MATE: return qsl("MATE, ");
+			case Type::Phosh: return qsl("Phosh, ");
 			}
 			Unexpected("Type in Platform::DesktopEnvironment::ComputeAndLog");
 		}),
diff --git a/Telegram/SourceFiles/platform/linux/linux_desktop_environment.h b/Telegram/SourceFiles/platform/linux/linux_desktop_environment.h
index 121c97064..8a0998952 100644
--- a/Telegram/SourceFiles/platform/linux/linux_desktop_environment.h
+++ b/Telegram/SourceFiles/platform/linux/linux_desktop_environment.h
@@ -16,6 +16,7 @@ enum class Type {
 	KDE,
 	Unity,
 	MATE,
+	Phosh,
 };
 
 std::vector<Type> Get();
@@ -40,5 +41,9 @@ inline bool IsMATE() {
 	return ranges::contains(Get(), Type::MATE);
 }
 
+inline bool IsPhosh() {
+	return ranges::contains(Get(), Type::Phosh);
+}
+
 } // namespace DesktopEnvironment
 } // namespace Platform
