From 9e179f40d09884bcbe6176e07da66afdfb4e2ab4 Mon Sep 17 00:00:00 2001
From: shangyatsen <429839446@qq.com>
Date: Sun, 24 Mar 2024 11:03:47 +0800
Subject: [PATCH] HACK: add experimental support for LoongArch

Ref: https://github.com/FanFansfan/gmmlib/commit/5b95524c513b00f93bbcf0f23b4d7226facf773d
---
 .gitmodules                                   |  3 +++
 Source/GmmLib/CMakeLists.txt                  |  4 +++-
 Source/GmmLib/Linux.cmake                     | 20 ++-----------------
 .../Utility/CpuSwizzleBlt/CpuSwizzleBlt.c     |  9 ++++++++-
 third_party/simde                             |  1 +
 5 files changed, 17 insertions(+), 20 deletions(-)
 create mode 100644 .gitmodules
 create mode 160000 third_party/simde

diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..e5233a0
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,3 @@
+[submodule "third_party/simde"]
+	path = third_party/simde
+	url = https://github.com/simd-everywhere/simde
diff --git a/Source/GmmLib/CMakeLists.txt b/Source/GmmLib/CMakeLists.txt
index 8271b47..919486f 100644
--- a/Source/GmmLib/CMakeLists.txt
+++ b/Source/GmmLib/CMakeLists.txt
@@ -169,7 +169,7 @@ endif()
 if (${CMAKE_SYSTEM_PROCESSOR} MATCHES "^aarch")
     set(GMMLIB_MARCH "armv8-a+fp+simd")
 elseif("${GMMLIB_MARCH}" STREQUAL "")
-    set(GMMLIB_MARCH "corei7")
+    set(GMMLIB_MARCH "native")
 endif()
 
 MESSAGE("platform: ${CMAKE_HOST_SYSTEM_NAME}")
@@ -441,6 +441,8 @@ include_directories(BEFORE ${PROJECT_SOURCE_DIR})
 
 if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "^aarch")
     include_directories(${GFX_DEVELOPMENT_DIR}/third_party/sse2neon)
+elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "^loongarch")
+    include_directories(${GFX_DEVELOPMENT_DIR}/third_party/simde)
 endif()
 
 set(headers
diff --git a/Source/GmmLib/Linux.cmake b/Source/GmmLib/Linux.cmake
index 87b74d8..09783e6 100644
--- a/Source/GmmLib/Linux.cmake
+++ b/Source/GmmLib/Linux.cmake
@@ -77,25 +77,11 @@ else()
 
     # General optimization options
     -march=${GMMLIB_MARCH}
-    -mpopcnt
-    -msse
-    -msse2
-    -msse3
-    -mssse3
-    -msse4
-    -msse4.1
-    -msse4.2
-    -mfpmath=sse
     -finline-functions
     -fno-short-enums
     -Wa,--noexecstack
     -fno-strict-aliasing
     # Common defines
-    -DUSE_MMX
-    -DUSE_SSE
-    -DUSE_SSE2
-    -DUSE_SSE3
-    -DUSE_SSSE3
     # Other common flags
     -fstack-protector
     -fdata-sections
@@ -104,8 +90,6 @@ else()
     -fvisibility=hidden
     -fPIC
     -g
-    # -m32 or -m64
-    -m${GMMLIB_ARCH}
     )
 endif()
 
@@ -178,6 +162,6 @@ if (${CMAKE_SYSTEM_PROCESSOR} MATCHES "^aarch")
     SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}")
     SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS}")
 else()
-    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -m${GMMLIB_ARCH}")
-    SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -m${GMMLIB_ARCH}")
+    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}")
+    SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS}")
 endif()
diff --git a/Source/GmmLib/Utility/CpuSwizzleBlt/CpuSwizzleBlt.c b/Source/GmmLib/Utility/CpuSwizzleBlt/CpuSwizzleBlt.c
index cd87809..13716cf 100644
--- a/Source/GmmLib/Utility/CpuSwizzleBlt/CpuSwizzleBlt.c
+++ b/Source/GmmLib/Utility/CpuSwizzleBlt/CpuSwizzleBlt.c
@@ -324,6 +324,9 @@ extern void CpuSwizzleBlt(CPU_SWIZZLE_BLT_SURFACE *pDest, CPU_SWIZZLE_BLT_SURFAC
     #include <intrin.h>
 #elif defined(__ARM_ARCH)
     #include <sse2neon.h>
+#elif defined(__loongarch64)
+    #define SIMDE_X86_SSE2_ENABLE_NATIVE_ALIASES
+    #include <simde/x86/sse2.h>
 #elif((defined __clang__) ||(__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 5)))
     #include <cpuid.h>
     #include <x86intrin.h>
@@ -698,6 +701,9 @@ void CpuSwizzleBlt( // #########################################################
                 #elif(defined(__ARM_ARCH))
                     #define MOVNTDQA_R(Reg, Src) ((Reg) = (Reg))
                     StreamingLoadSupported = 0;
+		#elif(defined(__loongarch64))
+                    #define MOVNTDQA_R(Reg, Src) ((Reg) = (Reg))
+                    StreamingLoadSupported = 0;
                 #elif((defined __clang__) || (__GNUC__ > 4) || (__GNUC__ == 4) && (__GNUC_MINOR__ >= 5))
                     #define MOVNTDQA_R(Reg, Src) ((Reg) = _mm_stream_load_si128((__m128i *)(Src)))
                     unsigned int eax, ebx, ecx, edx;
@@ -1097,7 +1103,8 @@ void CpuSwizzleBlt( // #########################################################
 
             } // foreach(y)
 
-            _mm_sfence(); // Flush Non-Temporal Writes
+            //_mm_sfence(); // Flush Non-Temporal Writes
+            __sync_synchronize(); // simde有对应的__mm_sfence兼容，但没生效？
 
             #if(_MSC_VER)
                 #pragma warning(pop)
diff --git a/third_party/simde b/third_party/simde
new file mode 160000
index 0000000..4379740
--- /dev/null
+++ b/third_party/simde
@@ -0,0 +1 @@
+Subproject commit 4379740aae4f17fd04b992d2024d934eb70a1c18
-- 
2.44.0

