From 4690311b76fce0e07633f4ed6705717d38ce4bb3 Mon Sep 17 00:00:00 2001
From: Kexy Biscuit <kexybiscuit@aosc.io>
Date: Thu, 15 Aug 2024 04:34:59 +0800
Subject: [PATCH 15/16] Bug 1909587: Correct MoveEmitter switch case r=rhunt!

This seems to be a accidental change made in D198105.

https://phabricator.services.mozilla.com/D217671

Signed-off-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
Co-authored-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
---
 js/src/jit/mips64/MoveEmitter-mips64.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/js/src/jit/mips64/MoveEmitter-mips64.cpp b/js/src/jit/mips64/MoveEmitter-mips64.cpp
index 53ee23820a..70217a37f8 100644
--- a/js/src/jit/mips64/MoveEmitter-mips64.cpp
+++ b/js/src/jit/mips64/MoveEmitter-mips64.cpp
@@ -30,7 +30,7 @@ void MoveEmitterMIPS64::breakCycle(const MoveOperand& from,
         masm.storeFloat32(to.floatReg(), cycleSlot(slotId));
       }
       break;
-    case ABIType::Float64:
+    case MoveOp::DOUBLE:
       if (to.isMemory()) {
         FloatRegister temp = ScratchDoubleReg;
         masm.loadDouble(getAdjustedAddress(to), temp);
@@ -85,7 +85,7 @@ void MoveEmitterMIPS64::completeCycle(const MoveOperand& from,
         masm.loadFloat32(cycleSlot(slotId), to.floatReg());
       }
       break;
-    case ABIType::Float64:
+    case MoveOp::DOUBLE:
       if (to.isMemory()) {
         FloatRegister temp = ScratchDoubleReg;
         masm.loadDouble(cycleSlot(slotId), temp);
-- 
2.46.0.windows.1

