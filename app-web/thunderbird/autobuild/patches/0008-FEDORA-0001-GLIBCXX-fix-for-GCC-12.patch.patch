From 38301f42d7404c99786128ff4bee9456a2a64670 Mon Sep 17 00:00:00 2001
From: Eike Rathke <erack@redhat.com>
Date: Thu, 10 Oct 2024 07:35:30 +0800
Subject: [PATCH 08/18] FEDORA: 0001-GLIBCXX-fix-for-GCC-12.patch

Add gcc 12 build fixes

Borrowed from Firefox and partly adjusted.

This still does not solve the
"undefined references to `std::__glibcxx_assert_fail"
on f36 (waiting for a gcc 12 fix) but does on f37.

Link: https://src.fedoraproject.org/rpms/thunderbird/blob/bb39515b12560f79e7cad8d305131c5acdac5a09/f/0001-GLIBCXX-fix-for-GCC-12.patch
Co-authored-by: Jan Horak <jhorak@redhat.com>
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 build/unix/stdc++compat/stdc++compat.cpp | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/build/unix/stdc++compat/stdc++compat.cpp b/build/unix/stdc++compat/stdc++compat.cpp
index 0180f6bcfa..f587cff767 100644
--- a/build/unix/stdc++compat/stdc++compat.cpp
+++ b/build/unix/stdc++compat/stdc++compat.cpp
@@ -69,6 +69,19 @@ void __attribute__((weak)) __throw_bad_array_new_length() { MOZ_CRASH(); }
 }  // namespace std
 #endif
 
+#if _GLIBCXX_RELEASE >= 12
+namespace std {
+
+/* This avoids the GLIBCXX_3.4.30 symbol version. */
+void __attribute__((weak))
+__glibcxx_assert_fail(const char* __file, int __line, const char* __function,
+                      const char* __condition) {
+  MOZ_CRASH();
+}
+
+}  // namespace std
+#endif
+
 /* While we generally don't build with exceptions, we have some host tools
  * that do use them. libstdc++ from GCC 5.0 added exception constructors with
  * char const* argument. Older versions only have a constructor with
-- 
2.47.0

