From abd70bd23e0aaf363856ebb27d7b1828c89cf19b Mon Sep 17 00:00:00 2001
From: Mingcong Bai <jeffbai@aosc.xyz>
Date: Tue, 21 May 2024 10:56:06 +0800
Subject: [PATCH 07/16] expat: fix CVE-2022-25315

---
 parser/expat/lib/xmlparse.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/parser/expat/lib/xmlparse.c b/parser/expat/lib/xmlparse.c
index fe1501a972..550b2d00b9 100644
--- a/parser/expat/lib/xmlparse.c
+++ b/parser/expat/lib/xmlparse.c
@@ -2491,6 +2491,7 @@ storeRawNames(XML_Parser parser)
   while (tag) {
     int bufSize;
     int nameLen = sizeof(XML_Char) * (tag->name.strLen + 1);
+    size_t rawNameLen;
     char *rawNameBuf = tag->buf + nameLen;
     /* Stop if already stored.  Since tagStack is a stack, we can stop
        at the first entry that has already been copied; everything
@@ -2502,7 +2503,11 @@ storeRawNames(XML_Parser parser)
     /* For re-use purposes we need to ensure that the
        size of tag->buf is a multiple of sizeof(XML_Char).
     */
-    bufSize = nameLen + ROUND_UP(tag->rawNameLength, sizeof(XML_Char));
+    rawNameLen = ROUND_UP(tag->rawNameLength, sizeof(XML_Char));
+    /* Detect and prevent integer overflow. */
+    if (rawNameLen > (size_t)INT_MAX - nameLen)
+      return XML_FALSE;
+    bufSize = nameLen + (int)rawNameLen;
     if (bufSize > tag->bufEnd - tag->buf) {
       char *temp = (char *)REALLOC(tag->buf, bufSize);
       if (temp == NULL)
-- 
2.46.0.rc1.windows.1

