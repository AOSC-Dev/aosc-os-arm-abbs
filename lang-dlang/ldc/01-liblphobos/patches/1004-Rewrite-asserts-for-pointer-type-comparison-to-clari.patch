From 8687599bea9115cd824e11df02a7a38dc8cb969b Mon Sep 17 00:00:00 2001
From: Johan Engelen <jbc.engelen@gmail.com>
Date: Sat, 25 Nov 2023 14:05:47 +0100
Subject: [PATCH 04/17] Rewrite asserts for pointer type comparison to clarify
 what opaque pointer type comparison actually does.

---
 gen/dvalue.cpp    | 5 +++++
 gen/functions.cpp | 5 +++++
 2 files changed, 10 insertions(+)

diff --git a/gen/dvalue.cpp b/gen/dvalue.cpp
index 8ef2c3911f..762d01f929 100644
--- a/gen/dvalue.cpp
+++ b/gen/dvalue.cpp
@@ -157,7 +157,12 @@ DRValue *DLValue::getRVal() {
 ////////////////////////////////////////////////////////////////////////////////
 
 DSpecialRefValue::DSpecialRefValue(Type *t, LLValue *v) : DLValue(v, t) {
+#if LDC_LLVM_VER >= 1700 // LLVM >= 17 uses opaque pointers, type check boils
+                         // down to pointer check only.
+  assert(v->getType()->isPointerTy());
+#else
   assert(v->getType() == DtoPtrToType(t)->getPointerTo());
+#endif
 }
 
 DRValue *DSpecialRefValue::getRVal() {
diff --git a/gen/functions.cpp b/gen/functions.cpp
index 92d51ff7ca..d2f5d26162 100644
--- a/gen/functions.cpp
+++ b/gen/functions.cpp
@@ -876,7 +876,12 @@ void defineParameters(IrFuncTy &irFty, VarDeclarations &parameters) {
       if (irparam->arg->byref) {
         // The argument is an appropriate lvalue passed by reference.
         // Use the passed pointer as parameter storage.
+#if LDC_LLVM_VER >= 1700 // LLVM >= 17 uses opaque pointers, type check boils
+                         // down to pointer check only.
+        assert(irparam->value->getType()->isPointerTy());
+#else
         assert(irparam->value->getType() == DtoPtrToType(paramType));
+#endif
       } else {
         // Let the ABI transform the parameter back to an lvalue.
         irparam->value =
-- 
2.39.1

