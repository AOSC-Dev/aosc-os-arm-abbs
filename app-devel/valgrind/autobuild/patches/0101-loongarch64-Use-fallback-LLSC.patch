From 9c496810c6d3dade479c1052f7f544524eeddefe Mon Sep 17 00:00:00 2001
From: Feiyang Chen <chenfeiyang@loongson.cn>
Date: Wed, 23 Mar 2022 17:08:54 +0800
Subject: [PATCH v4 101/123] loongarch64: Use fallback LLSC

---
 VEX/pub/libvex.h        | 1 +
 coregrind/m_translate.c | 5 +++++
 2 files changed, 6 insertions(+)

diff --git a/VEX/pub/libvex.h b/VEX/pub/libvex.h
index c118400a0..88cb9e732 100644
--- a/VEX/pub/libvex.h
+++ b/VEX/pub/libvex.h
@@ -436,6 +436,7 @@ void LibVEX_default_VexArchInfo ( /*OUT*/VexArchInfo* vai );
       guest is mips32                     ==> applicable, default True
       guest is mips64                     ==> applicable, default True
       guest is arm64                      ==> applicable, default False
+      guest is loongarch64                ==> const True
 
    host_ppc_calls_use_fndescrs:
       host is ppc32-linux                 ==> False
diff --git a/coregrind/m_translate.c b/coregrind/m_translate.c
index 8ae06d2a6..8afaf8e0f 100644
--- a/coregrind/m_translate.c
+++ b/coregrind/m_translate.c
@@ -1750,6 +1750,11 @@ Bool VG_(translate) ( ThreadId tid,
            vex_archinfo.arm64_requires_fallback_LLSC;
 #  endif
 
+#  if defined(VGP_loongarch64_linux)
+   /* For now, we only use fallback LLSC */
+   vex_abiinfo.guest__use_fallback_LLSC = True;
+#  endif
+
    /* Set up closure args. */
    closure.tid    = tid;
    closure.nraddr = nraddr;
-- 
2.39.1

