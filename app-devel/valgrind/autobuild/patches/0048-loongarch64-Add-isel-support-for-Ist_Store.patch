From 508c2dbea3877b31fe16df22e9a2ca95215dbb74 Mon Sep 17 00:00:00 2001
From: Feiyang Chen <chenfeiyang@loongson.cn>
Date: Tue, 22 Mar 2022 09:50:10 +0800
Subject: [PATCH v4 048/123] loongarch64: Add isel support for Ist_Store

---
 VEX/priv/host_loongarch64_isel.c | 53 ++++++++++++++++++++++++++++++++
 1 file changed, 53 insertions(+)

diff --git a/VEX/priv/host_loongarch64_isel.c b/VEX/priv/host_loongarch64_isel.c
index fa6dca89c..f839ef0b1 100644
--- a/VEX/priv/host_loongarch64_isel.c
+++ b/VEX/priv/host_loongarch64_isel.c
@@ -493,6 +493,53 @@ static HReg iselFltExpr_wrk ( ISelEnv* env, IRExpr* e )
 /*--- ISEL: Statements                                  ---*/
 /*---------------------------------------------------------*/
 
+static void iselStmtStore ( ISelEnv* env, IRStmt* stmt )
+{
+   IRType tya  = typeOfIRExpr(env->type_env, stmt->Ist.Store.addr);
+   IRType tyd  = typeOfIRExpr(env->type_env, stmt->Ist.Store.data);
+
+   if (tya != Ity_I64 || stmt->Ist.Store.end != Iend_LE)
+      vpanic("iselStmt(loongarch64): Ist_Store");
+
+   Bool                 fp = False;
+   LOONGARCH64AMode*    am = iselIntExpr_AMode(env, stmt->Ist.Store.addr, tyd);
+   LOONGARCH64StoreOp   op;
+   LOONGARCH64FpStoreOp fop;
+   switch (tyd) {
+      case Ity_I8:
+         op = (am->tag == LAam_RI) ? LAstore_ST_B : LAstore_STX_B;
+         break;
+      case Ity_I16:
+         op = (am->tag == LAam_RI) ? LAstore_ST_H : LAstore_STX_H;
+         break;
+      case Ity_I32:
+         op = (am->tag == LAam_RI) ? LAstore_ST_W : LAstore_STX_W;
+         break;
+      case Ity_I64:
+         op = (am->tag == LAam_RI) ? LAstore_ST_D : LAstore_STX_D;
+         break;
+      case Ity_F32:
+         fop = (am->tag == LAam_RI) ? LAfpstore_FST_S : LAfpstore_FSTX_S;
+         fp = True;
+         break;
+      case Ity_F64:
+         fop = (am->tag == LAam_RI) ? LAfpstore_FST_D : LAfpstore_FSTX_D;
+         fp = True;
+         break;
+      default:
+         vpanic("iselStmt(loongarch64): Ist_Store");
+         break;
+   }
+
+   if (fp) {
+      HReg src = iselFltExpr(env, stmt->Ist.Store.data);
+      addInstr(env, LOONGARCH64Instr_FpStore(fop, am, src));
+   } else {
+      HReg src = iselIntExpr_R(env, stmt->Ist.Store.data);
+      addInstr(env, LOONGARCH64Instr_Store(op, am, src));
+   }
+}
+
 static void iselStmtExit ( ISelEnv* env, IRStmt* stmt )
 {
    if (stmt->Ist.Exit.dst->tag != Ico_U64)
@@ -556,6 +603,12 @@ static void iselStmt(ISelEnv* env, IRStmt* stmt)
    }
 
    switch (stmt->tag) {
+      /* --------- STORE --------- */
+      /* little-endian write to memory */
+      case Ist_Store:
+         iselStmtStore(env, stmt);
+         break;
+
       /* --------- INSTR MARK --------- */
       /* Doesn't generate any executable code ... */
       case Ist_IMark:
-- 
2.39.1

