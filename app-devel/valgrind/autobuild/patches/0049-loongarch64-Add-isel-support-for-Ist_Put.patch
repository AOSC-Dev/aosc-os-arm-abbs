From e07f1c625e7a937afadb576dd28727f57f20ef1f Mon Sep 17 00:00:00 2001
From: Feiyang Chen <chenfeiyang@loongson.cn>
Date: Tue, 22 Mar 2022 09:54:05 +0800
Subject: [PATCH v4 049/123] loongarch64: Add isel support for Ist_Put

---
 VEX/priv/host_loongarch64_isel.c | 49 ++++++++++++++++++++++++++++++++
 1 file changed, 49 insertions(+)

diff --git a/VEX/priv/host_loongarch64_isel.c b/VEX/priv/host_loongarch64_isel.c
index f839ef0b1..f49779dc2 100644
--- a/VEX/priv/host_loongarch64_isel.c
+++ b/VEX/priv/host_loongarch64_isel.c
@@ -540,6 +540,49 @@ static void iselStmtStore ( ISelEnv* env, IRStmt* stmt )
    }
 }
 
+static void iselStmtPut ( ISelEnv* env, IRStmt* stmt )
+{
+   IRType ty = typeOfIRExpr(env->type_env, stmt->Ist.Put.data);
+
+   Bool                 fp = False;
+   LOONGARCH64AMode*    am = mkLOONGARCH64AMode_RI(hregGSP(), stmt->Ist.Put.offset);
+   LOONGARCH64StoreOp   op;
+   LOONGARCH64FpStoreOp fop;
+   switch (ty) {
+      case Ity_I8:
+         op = LAstore_ST_B;
+         break;
+      case Ity_I16:
+         op = LAstore_ST_H;
+         break;
+      case Ity_I32:
+         op = LAstore_ST_W;
+         break;
+      case Ity_I64:
+         op = LAstore_ST_D;
+         break;
+      case Ity_F32:
+         fop = LAfpstore_FST_S;
+         fp = True;
+         break;
+      case Ity_F64:
+         fop = LAfpstore_FST_D;
+         fp = True;
+         break;
+      default:
+         vpanic("iselStmt(loongarch64): Ist_Put");
+         break;
+   }
+
+   if (fp) {
+      HReg src = iselFltExpr(env, stmt->Ist.Put.data);
+      addInstr(env, LOONGARCH64Instr_FpStore(fop, am, src));
+   } else {
+      HReg src = iselIntExpr_R(env, stmt->Ist.Put.data);
+      addInstr(env, LOONGARCH64Instr_Store(op, am, src));
+   }
+}
+
 static void iselStmtExit ( ISelEnv* env, IRStmt* stmt )
 {
    if (stmt->Ist.Exit.dst->tag != Ico_U64)
@@ -609,6 +652,12 @@ static void iselStmt(ISelEnv* env, IRStmt* stmt)
          iselStmtStore(env, stmt);
          break;
 
+      /* --------- PUT --------- */
+      /* write guest state, fixed offset */
+      case Ist_Put:
+         iselStmtPut(env, stmt);
+         break;
+
       /* --------- INSTR MARK --------- */
       /* Doesn't generate any executable code ... */
       case Ist_IMark:
-- 
2.39.1

