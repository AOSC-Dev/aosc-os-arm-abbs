From 06bd11fe6938b3077fac55f89b9071970990565a Mon Sep 17 00:00:00 2001
From: Feiyang Chen <chenfeiyang@loongson.cn>
Date: Thu, 30 Jun 2022 19:34:46 +0800
Subject: [PATCH v4 108/123] loongarch64: Add none test for atomic instructions

---
 none/tests/loongarch64/atomic.c          | 72 +++++++++++++++++++++++-
 none/tests/loongarch64/atomic.stdout.exp | 72 ++++++++++++++++++++++++
 none/tests/loongarch64/atomic.vgtest     |  1 +
 3 files changed, 144 insertions(+), 1 deletion(-)

diff --git a/none/tests/loongarch64/atomic.c b/none/tests/loongarch64/atomic.c
index f93ad3f9a..916d5f787 100644
--- a/none/tests/loongarch64/atomic.c
+++ b/none/tests/loongarch64/atomic.c
@@ -1,5 +1,75 @@
+#include <stdio.h>
+
+#define TESTINST_AM(insn, res, val, addr)  \
+   {                                       \
+      __asm__ __volatile__(                \
+         "move $t1, %1        \n\t"        \
+         "move $t2, %2        \n\t"        \
+         insn " $t0, $t1, $t2 \n\t"        \
+         "move %0, $t0        \n\t"        \
+         : "=r" (res)                      \
+         : "r" (val), "r" (addr)           \
+         : "$t0", "$t1", "$t2", "memory"); \
+   }
+
+#define TESTINST_AM_4(insn, v)                      \
+   {                                                \
+      printf(#insn ".w ::\n");                      \
+      TESTINST_AM(#insn ".w", res_i, v, &val_i);    \
+      printf("old: %d new: %d\n", res_i, val_i);    \
+                                                    \
+      printf(#insn "_db.w ::\n");                   \
+      TESTINST_AM(#insn "_db.w", res_i, v, &val_i); \
+      printf("old: %d new: %d\n", res_i, val_i);    \
+                                                    \
+      printf(#insn ".d ::\n");                      \
+      TESTINST_AM(#insn ".d", res_l, v, &val_l);    \
+      printf("old: %ld new: %ld\n", res_l, val_l);  \
+                                                    \
+      printf(#insn "_db.d ::\n");                   \
+      TESTINST_AM(#insn "_db.d", res_l, v, &val_l); \
+      printf("old: %ld new: %ld\n", res_l, val_l);  \
+   }
+
+#define TESTINST_AM_U_4(insn, v)                     \
+   {                                                 \
+      printf(#insn ".wu ::\n");                      \
+      TESTINST_AM(#insn ".wu", res_i, v, &val_i);    \
+      printf("old: %u new: %u\n", res_i, val_i);     \
+                                                     \
+      printf(#insn "_db.wu ::\n");                   \
+      TESTINST_AM(#insn "_db.wu", res_i, v, &val_i); \
+      printf("old: %u new: %u\n", res_i, val_i);     \
+                                                     \
+      printf(#insn ".du ::\n");                      \
+      TESTINST_AM(#insn ".du", res_l, v, &val_l);    \
+      printf("old: %lu new: %lu\n", res_l, val_l);   \
+                                                     \
+      printf(#insn "_db.du ::\n");                   \
+      TESTINST_AM(#insn "_db.du", res_l, v, &val_l); \
+      printf("old: %lu new: %lu\n", res_l, val_l);   \
+   }
+
+void test(void)
+{
+   int res_i;
+   long res_l;
+   int val_i = 1;
+   long val_l = 1;
+
+   TESTINST_AM_4(amswap, 2);
+   TESTINST_AM_4(amadd, 5);
+   TESTINST_AM_4(amand, 3);
+   TESTINST_AM_4(amor, 8);
+   TESTINST_AM_4(amxor, 4);
+   TESTINST_AM_4(ammax, 16);
+   TESTINST_AM_4(ammin, -1);
+   TESTINST_AM_U_4(ammax, 9);
+   TESTINST_AM_U_4(ammin, 6);
+}
+
 int main(void)
 {
-   /* TODO */
+   test();
    return 0;
 }
diff --git a/none/tests/loongarch64/atomic.stdout.exp b/none/tests/loongarch64/atomic.stdout.exp
index e69de29bb..7eab9ebd0 100644
--- a/none/tests/loongarch64/atomic.stdout.exp
+++ b/none/tests/loongarch64/atomic.stdout.exp
@@ -0,0 +1,72 @@
+amswap.w ::
+old: 1 new: 2
+amswap_db.w ::
+old: 2 new: 2
+amswap.d ::
+old: 1 new: 2
+amswap_db.d ::
+old: 2 new: 2
+amadd.w ::
+old: 2 new: 7
+amadd_db.w ::
+old: 7 new: 12
+amadd.d ::
+old: 2 new: 7
+amadd_db.d ::
+old: 7 new: 12
+amand.w ::
+old: 12 new: 0
+amand_db.w ::
+old: 0 new: 0
+amand.d ::
+old: 12 new: 0
+amand_db.d ::
+old: 0 new: 0
+amor.w ::
+old: 0 new: 8
+amor_db.w ::
+old: 8 new: 8
+amor.d ::
+old: 0 new: 8
+amor_db.d ::
+old: 8 new: 8
+amxor.w ::
+old: 8 new: 12
+amxor_db.w ::
+old: 12 new: 8
+amxor.d ::
+old: 8 new: 12
+amxor_db.d ::
+old: 12 new: 8
+ammax.w ::
+old: 8 new: 16
+ammax_db.w ::
+old: 16 new: 16
+ammax.d ::
+old: 8 new: 16
+ammax_db.d ::
+old: 16 new: 16
+ammin.w ::
+old: 16 new: -1
+ammin_db.w ::
+old: -1 new: -1
+ammin.d ::
+old: 16 new: -1
+ammin_db.d ::
+old: -1 new: -1
+ammax.wu ::
+old: 4294967295 new: 4294967295
+ammax_db.wu ::
+old: 4294967295 new: 4294967295
+ammax.du ::
+old: 18446744073709551615 new: 18446744073709551615
+ammax_db.du ::
+old: 18446744073709551615 new: 18446744073709551615
+ammin.wu ::
+old: 4294967295 new: 6
+ammin_db.wu ::
+old: 6 new: 6
+ammin.du ::
+old: 18446744073709551615 new: 6
+ammin_db.du ::
+old: 6 new: 6
diff --git a/none/tests/loongarch64/atomic.vgtest b/none/tests/loongarch64/atomic.vgtest
index 51295e709..8fe5ce5f3 100644
--- a/none/tests/loongarch64/atomic.vgtest
+++ b/none/tests/loongarch64/atomic.vgtest
@@ -1,2 +1,3 @@
+prereq: ../../../tests/loongarch64_features lam
 prog: atomic
 vgopts: -q
-- 
2.39.1

