From 9dbd3b22e707d1313395823fbb138b2f4d3a99a9 Mon Sep 17 00:00:00 2001
From: Feiyang Chen <chenfeiyang@loongson.cn>
Date: Mon, 4 Jul 2022 15:03:23 +0800
Subject: [PATCH v4 118/123] loongarch64: Add do_syscall_WRK macro for
 memcheck/tests/leak-segv-jmp

---
 memcheck/tests/leak-segv-jmp.c          | 15 ++++++++++++++-
 memcheck/tests/leak-segv-jmp.stderr.exp | 20 ++++++++++----------
 2 files changed, 24 insertions(+), 11 deletions(-)

diff --git a/memcheck/tests/leak-segv-jmp.c b/memcheck/tests/leak-segv-jmp.c
index 97bddaf23..4890f5bcf 100644
--- a/memcheck/tests/leak-segv-jmp.c
+++ b/memcheck/tests/leak-segv-jmp.c
@@ -182,6 +182,19 @@ extern UWord do_syscall_WRK (
    return out;
 }
 
+#elif defined(VGP_loongarch64_linux)
+extern UWord do_syscall_WRK (UWord a1, UWord a2, UWord a3, /* $a0, $a1, $a2 */
+                             UWord a4, UWord a5, UWord a6, /* $a3, $a4, $a5 */
+                             UWord syscall_no);            /* $a6 */
+asm (
+   ".text                                  \n\t"
+   ".globl do_syscall_WRK                  \n\t"
+   "do_syscall_WRK:                        \n\t"
+   "   move    $a7, $a6                    \n\t"           /* a7 = syscall_no */
+   "   syscall 0                           \n\t"
+   "   jr      $ra                         \n\t"
+);
+
 #elif defined(VGP_x86_solaris)
 extern ULong
 do_syscall_WRK(UWord a1, UWord a2, UWord a3,
@@ -338,7 +351,7 @@ static void non_simd_mprotect (long tid, void* addr, long len)
                                     &err);
    if (err)
       mprotect_result = -1;
-#elif defined(VGP_arm64_linux)
+#elif defined(VGP_arm64_linux) || defined (VGP_loongarch64_linux)
    mprotect_result = do_syscall_WRK((UWord) addr, len, PROT_NONE,
                                     0, 0, 0,
                                     __NR_mprotect);
diff --git a/memcheck/tests/leak-segv-jmp.stderr.exp b/memcheck/tests/leak-segv-jmp.stderr.exp
index b30fd76ac..0eea1785c 100644
--- a/memcheck/tests/leak-segv-jmp.stderr.exp
+++ b/memcheck/tests/leak-segv-jmp.stderr.exp
@@ -14,8 +14,8 @@ To see them, rerun with: --leak-check=full --show-leak-kinds=all
 expecting a leak
 1,000 bytes in 1 blocks are definitely lost in loss record ... of ...
    at 0x........: malloc (vg_replace_malloc.c:...)
-   by 0x........: f (leak-segv-jmp.c:389)
-   by 0x........: main (leak-segv-jmp.c:464)
+   by 0x........: f (leak-segv-jmp.c:402)
+   by 0x........: main (leak-segv-jmp.c:477)
 
 LEAK SUMMARY:
    definitely lost: 1,000 bytes in 1 blocks
@@ -30,8 +30,8 @@ mprotect result 0
 expecting a leak again
 1,000 bytes in 1 blocks are definitely lost in loss record ... of ...
    at 0x........: malloc (vg_replace_malloc.c:...)
-   by 0x........: f (leak-segv-jmp.c:389)
-   by 0x........: main (leak-segv-jmp.c:464)
+   by 0x........: f (leak-segv-jmp.c:402)
+   by 0x........: main (leak-segv-jmp.c:477)
 
 LEAK SUMMARY:
    definitely lost: 1,000 bytes in 1 blocks
@@ -46,8 +46,8 @@ full mprotect result 0
 expecting a leak again after full mprotect
 1,000 bytes in 1 blocks are definitely lost in loss record ... of ...
    at 0x........: malloc (vg_replace_malloc.c:...)
-   by 0x........: f (leak-segv-jmp.c:389)
-   by 0x........: main (leak-segv-jmp.c:464)
+   by 0x........: f (leak-segv-jmp.c:402)
+   by 0x........: main (leak-segv-jmp.c:477)
 
 LEAK SUMMARY:
    definitely lost: 1,000 bytes in 1 blocks
@@ -62,13 +62,13 @@ mprotect result 0
 expecting heuristic not to crash after full mprotect
 1,000 bytes in 1 blocks are definitely lost in loss record ... of ...
    at 0x........: malloc (vg_replace_malloc.c:...)
-   by 0x........: f (leak-segv-jmp.c:389)
-   by 0x........: main (leak-segv-jmp.c:464)
+   by 0x........: f (leak-segv-jmp.c:402)
+   by 0x........: main (leak-segv-jmp.c:477)
 
 200,000 bytes in 1 blocks are possibly lost in loss record ... of ...
    at 0x........: calloc (vg_replace_malloc.c:...)
-   by 0x........: f (leak-segv-jmp.c:436)
-   by 0x........: main (leak-segv-jmp.c:464)
+   by 0x........: f (leak-segv-jmp.c:449)
+   by 0x........: main (leak-segv-jmp.c:477)
 
 LEAK SUMMARY:
    definitely lost: 1,000 bytes in 1 blocks
-- 
2.39.1

