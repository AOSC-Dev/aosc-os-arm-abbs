From 8215ff988c8a632c653087b4ad7f25cedbd0050a Mon Sep 17 00:00:00 2001
From: Alexandre Bouvier <contact@amb.tf>
Date: Fri, 20 Aug 2021 06:07:12 +0200
Subject: [PATCH 1/3] cmake: Allow unbundling some external libraries

Add support for linking against the following system libraries:

* cubeb
* inih
* xbyak
* dynarmic
* httplib
---
 CMakeLists.txt                | 63 +++++++++++++++++++++++++++++++++++
 externals/CMakeLists.txt      | 12 ++++---
 externals/inih/CMakeLists.txt |  2 +-
 src/yuzu_cmd/config.cpp       |  2 +-
 4 files changed, 72 insertions(+), 7 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5f508d61a..722e181a8 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -28,6 +28,16 @@ option(YUZU_USE_BUNDLED_LIBUSB "Compile bundled libusb" OFF)
 
 option(YUZU_USE_BUNDLED_FFMPEG "Download/Build bundled FFmpeg" "${WIN32}")
 
+option(YUZU_USE_BUNDLED_XBYAK "Compile bundled xbyak" ON)
+
+option(YUZU_USE_BUNDLED_INIH "Compile bundled inih" ON)
+
+option(YUZU_USE_BUNDLED_CUBEB "Compile bundled cubeb" ON)
+
+option(YUZU_USE_BUNDLED_DYNARMIC "Compile bundled dynarmic" ON)
+
+option(YUZU_USE_BUNDLED_HTTPLIB "Compile bundled httplib" ON)
+
 option(YUZU_USE_QT_WEB_ENGINE "Use QtWebEngine for web applet implementation" OFF)
 
 option(ENABLE_CUBEB "Enables the cubeb audio backend" ON)
@@ -425,6 +435,59 @@ endif()
 set(THREADS_PREFER_PTHREAD_FLAG ON)
 find_package(Threads REQUIRED)
 
+if ((ARCHITECTURE_x86 OR ARCHITECTURE_x86_64) AND NOT YUZU_USE_BUNDLED_XBYAK)
+    find_package(xbyak)
+    if (xbyak_FOUND)
+        add_library(xbyak ALIAS xbyak::xbyak)
+    else()
+        message(STATUS "xbyak not found, falling back to externals")
+        set(YUZU_USE_BUNDLED_XBYAK ON)
+    endif()
+endif()
+
+if (NOT YUZU_USE_BUNDLED_INIH)
+    find_package(PkgConfig QUIET)
+    if (PKG_CONFIG_FOUND)
+        pkg_check_modules(inih IMPORTED_TARGET INIReader)
+    endif()
+    if (inih_FOUND)
+        add_library(inih ALIAS PkgConfig::inih)
+    else()
+        message(STATUS "inih not found, falling back to externals")
+        set(YUZU_USE_BUNDLED_INIH ON)
+    endif()
+endif()
+
+if (ENABLE_CUBEB AND NOT YUZU_USE_BUNDLED_CUBEB)
+    find_package(cubeb)
+    if (cubeb_FOUND)
+        add_library(cubeb ALIAS cubeb::cubeb)
+    else()
+        message(STATUS "cubeb not found, falling back to externals")
+        set(YUZU_USE_BUNDLED_CUBEB ON)
+    endif()
+endif()
+
+if (ARCHITECTURE_x86_64 AND NOT YUZU_USE_BUNDLED_DYNARMIC)
+    find_package(dynarmic)
+    if (dynarmic_FOUND)
+        add_library(dynarmic ALIAS dynarmic::dynarmic)
+    else()
+        message(STATUS "dynarmic not found, falling back to externals")
+        set(YUZU_USE_BUNDLED_DYNARMIC ON)
+    endif()
+endif()
+
+if (ENABLE_WEB_SERVICE AND NOT YUZU_USE_BUNDLED_HTTPLIB)
+    find_package(httplib)
+    if (httplib_FOUND)
+        add_library(httplib ALIAS httplib::httplib)
+    else()
+        message(STATUS "httplib not found, falling back to externals")
+        set(YUZU_USE_BUNDLED_HTTPLIB ON)
+    endif()
+endif()
+
 # Platform-specific library requirements
 # ======================================
 
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index 6d04ace1d..a137ffe67 100644
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -6,7 +6,7 @@ list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/externals/find-modules")
 include(DownloadExternals)
 
 # xbyak
-if (ARCHITECTURE_x86 OR ARCHITECTURE_x86_64)
+if ((ARCHITECTURE_x86 OR ARCHITECTURE_x86_64) AND NOT TARGET xbyak)
     add_library(xbyak INTERFACE)
     file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/xbyak/include)
     file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/xbyak/xbyak DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/xbyak/include)
@@ -15,7 +15,7 @@ if (ARCHITECTURE_x86 OR ARCHITECTURE_x86_64)
 endif()
 
 # Dynarmic
-if (ARCHITECTURE_x86_64)
+if (ARCHITECTURE_x86_64 AND NOT TARGET dynarmic)
     set(DYNARMIC_TESTS OFF)
     set(DYNARMIC_NO_BUNDLED_FMT ON)
     set(DYNARMIC_IGNORE_ASSERTS ON CACHE BOOL "" FORCE)
@@ -31,7 +31,9 @@ endif()
 add_subdirectory(glad)
 
 # inih
-add_subdirectory(inih)
+if (NOT TARGET inih)
+    add_subdirectory(inih)
+endif()
 
 # mbedtls
 add_subdirectory(mbedtls EXCLUDE_FROM_ALL)
@@ -79,7 +81,7 @@ add_subdirectory(enet)
 target_include_directories(enet INTERFACE ./enet/include)
 
 # Cubeb
-if(ENABLE_CUBEB)
+if (ENABLE_CUBEB AND NOT TARGET cubeb)
     set(BUILD_TESTS OFF CACHE BOOL "")
     add_subdirectory(cubeb EXCLUDE_FROM_ALL)
 endif()
@@ -93,7 +95,7 @@ endif()
 # Sirit
 add_subdirectory(sirit)
 
-if (ENABLE_WEB_SERVICE)
+if (ENABLE_WEB_SERVICE AND NOT TARGET httplib)
     find_package(OpenSSL 1.1)
     if (OPENSSL_FOUND)
         set(OPENSSL_LIBRARIES OpenSSL::SSL OpenSSL::Crypto)
diff --git a/externals/inih/CMakeLists.txt b/externals/inih/CMakeLists.txt
index b686e3cf5..827ac3bbc 100644
--- a/externals/inih/CMakeLists.txt
+++ b/externals/inih/CMakeLists.txt
@@ -9,4 +9,4 @@ add_library(inih
 )
 
 create_target_directory_groups(inih)
-target_include_directories(inih INTERFACE .)
+target_include_directories(inih INTERFACE inih/cpp)
diff --git a/src/yuzu_cmd/config.cpp b/src/yuzu_cmd/config.cpp
index bd0fb75f8..7e14049cc 100644
--- a/src/yuzu_cmd/config.cpp
+++ b/src/yuzu_cmd/config.cpp
@@ -15,7 +15,7 @@
 #pragma clang diagnostic pop
 #endif
 
-#include <inih/cpp/INIReader.h>
+#include <INIReader.h>
 #include "common/fs/file.h"
 #include "common/fs/fs.h"
 #include "common/fs/path_util.h"
-- 
2.37.1

