diff --git a/Cargo.lock b/Cargo.lock
index 3399488..07de507 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -111,6 +111,7 @@ dependencies = [
  "colored",
  "nix",
  "num_cpus",
+ "os-release",
  "rand",
 ]
 
@@ -136,6 +137,15 @@ dependencies = [
  "libc",
 ]
 
+[[package]]
+name = "os-release"
+version = "0.1.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "82f29ae2f71b53ec19cc23385f8e4f3d90975195aa3d09171ba3bef7159bec27"
+dependencies = [
+ "lazy_static",
+]
+
 [[package]]
 name = "ppv-lite86"
 version = "0.2.10"
diff --git a/Cargo.toml b/Cargo.toml
index 28bc259..f601b2e 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -22,3 +22,4 @@ nix = "0.20.0"
 bytesize = "1.0.1"
 clap = "2.33.3"
 rand = "0.8.3"
+os-release = "0.1"
diff --git a/src/read/general.rs b/src/read/general.rs
index 4c49d95..154e34f 100644
--- a/src/read/general.rs
+++ b/src/read/general.rs
@@ -40,25 +40,10 @@ pub fn hostname(fail: &mut Fail) -> String {
 
 /// Read distribution name from `/etc/os-release`
 pub fn distribution() -> String {
-    let file = fs::File::open("/etc/os-release");
-    match file {
+    use os_release::OsRelease;
+    match OsRelease::new() {
         Ok(content) => {
-            let head = Command::new("head")
-                .args(&["-n", "1"])
-                .stdin(Stdio::from(content))
-                .stdout(Stdio::piped())
-                .spawn()
-                .expect("ERROR: failed to start \"head\" process");
-
-            let output = head
-                .wait_with_output()
-                .expect("ERROR: failed to wait for \"head\" process to exit");
-
-            let distribution = String::from_utf8(output.stdout)
-                .expect("ERROR: \"ps\" process stdout was not valid UTF-8");
-            return pop_newline(String::from(
-                distribution.replace("\"", "").replace("NAME=", ""),
-            ));
+            return content.name;
         }
         Err(_e) => {
             return String::from("Unknown");
