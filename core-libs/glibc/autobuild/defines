PKGNAME=glibc
PKGSEC=libs
PKGDEP="linux+api libxcrypt"
PKGRECOM="glibc-legacy"
PKGDES="GNU C Library"

# The following configuration:
#
# 1.  Declares that libraries should be installed into /usr/lib instead of /lib64;
# 2.  Declares bug tracking URL (should not be changed unless you are building a derivative);
# 3.  Enables add-on support;
# 5.  Declares that Kernel verion 4.19.0 is the minimum accepted
#     (you may raise the version number as you like);
# 6.  Enables "bind now" (dynamic loader) support;
# 7.  Disables profiling support 
#     (you may enable, using --enable-profile to your need, however this is not realistic in
#     a "Core" environment);
# 8.  Enables various hardening features:
#     - Stackguard randomization
#     - Strong stack protection (libssp)
#     - _FORTIFY_SOURCE=3
# 9. Enables tunables (allows for altering of runtime libraries);
# 10. Enables lock elision (essential for GUILE, and many others that is lock-sensitive);
# 11. Enables multiple architecture support 
#     (mainly used to distinguish among different builds, multiarch is not supported);
# 12. Disables "warning as error";
# 13. Ensure that static libraries are installed for development purposes;
# 14. Enable deprecated NSL and RPC headers (<= 2.14) for compatibility;
# 15. Disables the deprecated legacy libcrypt.

AUTOTOOLS_AFTER="--libexecdir=/usr/lib \
                 --with-headers=/usr/include \
                 --with-bugurl=https://github.com/AOSC-Dev/aosc-os-abbs/issues \
                 --disable-add-ons \
                 --enable-kernel=4.19.0 \
                 --disable-profile \
                 --disable-tunables \
                 --enable-lock-elision \
                 --disable-multi-arch \
                 --disable-werror \
                 --enable-static \
                 --disable-multi-arch \
                 --with-__thread \
                 --enable-obsolete-nsl \
                 --enable-obsolete-rpc \
                 --enable-bind-now \
                 --enable-stackguard-randomization \
                 --enable-stack-protector=strong \
                 --enable-fortify-source=3 \
                 --disable-crypt"

NOSTATIC=0

AB_FLAGS_FTF=0
AB_FLAGS_SSP=0
AB_FLAGS_SPECS=0

# /usr/bin/ld: /var/cache/acbs/build/acbs.qw8_5fk4/glibc-2.40/build/elf/librtld.os: in function `_dl_open_check':
# /var/cache/acbs/build/acbs.qw8_5fk4/glibc-2.40/elf/../sysdeps/x86/dl-prop.h:80:(.text+0xb308): undefined reference to `_dl_cet_open_check'
# /usr/bin/ld: /var/cache/acbs/build/acbs.qw8_5fk4/glibc-2.40/build/elf/librtld.os: in function `_dl_start_user':
# (.text+0x1c374): undefined reference to `_dl_cet_setup_features'
# /usr/bin/ld: /var/cache/acbs/build/acbs.qw8_5fk4/glibc-2.40/build/elf/librtld.os: in function `_rtld_main_check':
# /var/cache/acbs/build/acbs.qw8_5fk4/glibc-2.40/elf/../sysdeps/x86/dl-prop.h:71:(.text+0x1f611): undefined reference to `_dl_cet_check'
# /usr/bin/ld: /var/cache/acbs/build/acbs.qw8_5fk4/glibc-2.40/build/elf/ld.so.new: hidden symbol `_dl_cet_open_check' isn't defined
# /usr/bin/ld: final link failed: bad value
# collect2: error: ld returned 1 exit status
# Using hardening switches provided by the build system from glibc.
AB_FLAGS_HARDEN=0

# FIXME: Causes linkage failure (2.38).
# /nscd/gai.o: in function `cancel_handler':
# /nscd/../sysdeps/unix/sysv/linux/check_pf.c:300:(.text+0x2570): undefined reference to `_Unwind_Resume'
# ...
# /usr/bin/ld: .../nscd/gai.o:(.data.rel.local.DW.ref.__gcc_personality_v0[DW.ref.__gcc_personality_v0]+0x0):
# undefined reference to `__gcc_personality_v0'
AB_FLAGS_EXC=0

AB_FLAGS_O3__ARMV4=0
AB_FLAGS_O3__ARMV6HF=0
AB_FLAGS_O3__I486=0
AB_FLAGS_O3__LOONGSON2F=0
AB_FLAGS_O3__M68K=0
AB_FLAGS_O3__POWERPC=0
AB_FLAGS_O3__PPC64=0
AB_FLAGS_OS__ARMV4=0
AB_FLAGS_OS__ARMV6HF=0
AB_FLAGS_OS__ARMV7HF=0
AB_FLAGS_OS__I486=0
AB_FLAGS_OS__LOONGSON2F=0
AB_FLAGS_OS__M68K=0
AB_FLAGS_OS__POWERPC=0
AB_FLAGS_OS__PPC64=0

AB_HWCAPS=1

# error: "SIG_BLOCK" is not defined [-Werror=undef]
# LTO breaks build with a warning-as-error, not taking the chances though.
NOLTO=1

# CAUTION: possible hazard while downgrading
# dpkg tries to run the postrm script after glibc in HWCAPS subdirectories
# has been removed, leading to a symbol lookup error.
# Since Bash is fork()ed and exec()ed, the dynamic linker still wants to
# load the non-existant libc in HWCAPS subdirectories. We tried various ways
# to address this, including invaiidating ld.so.cache, using LD_PRELOAD, etc.
# but all of these failed.
# So we will skip installing an empty postrm script, which prevents dpkg from
# running it.
# Without the postrm script, the downgrade process works fine.
AB_SKIP_MAINTSCRIPTS=('postrm')

LOCALEGENVER="20160914"

# Merges locale-gen at Core 4.
PKGREP="locale-gen<=20160429"
PKGBREAK="locale-gen<=20160429"

PKGEPOCH=1
