From d4641a6a309379a270dda3cff9fb5df4cef44d66 Mon Sep 17 00:00:00 2001
From: caiyinyu <caiyinyu@loongson.cn>
Date: Thu, 6 Jul 2023 17:25:43 +0800
Subject: [PATCH 10/38] LoongArch: config: Rewrite check on static PIE.

It's better to add "\" before "EOF" and remove "\"
before "$".
---
 sysdeps/loongarch/configure    | 14 +++++++-------
 sysdeps/loongarch/configure.ac | 14 +++++++-------
 2 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/sysdeps/loongarch/configure b/sysdeps/loongarch/configure
index b3c203ba..52bd08a9 100644
--- a/sysdeps/loongarch/configure
+++ b/sysdeps/loongarch/configure
@@ -10,14 +10,14 @@ if ${libc_cv_static_pie_on_loongarch+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  cat > conftest1.S << EOF
+  cat > conftest1.S <<\EOF
 .global _start
 .type _start, @function
 _start:
-  li.w \$a7, 93
+  li.w $a7, 93
   /* This ensures the assembler supports explicit reloc.  */
-  pcalau12i \$a0, %pc_hi20(x)
-  ld.w \$a0, \$a0, %pc_lo12(x)
+  pcalau12i $a0, %pc_hi20(x)
+  ld.w $a0, $a0, %pc_lo12(x)
   syscall 0
 
 .data
@@ -26,13 +26,13 @@ x:
   /* This should produce an R_LARCH_RELATIVE in the static PIE.  */
   .dword _start
 EOF
-  cat > conftest2.S << EOF
+  cat > conftest2.S <<\EOF
 .global f
 .type f, @function
 f:
   /* The linker should be able to handle this and produce a PLT entry.  */
-  la.pcrel \$t0, \$t0, external_func
-  jirl \$zero, \$t0, 0
+  la.pcrel $t0, $t0, external_func
+  jirl $zero, $t0, 0
 EOF
 
   libc_cv_static_pie_on_loongarch=no
diff --git a/sysdeps/loongarch/configure.ac b/sysdeps/loongarch/configure.ac
index eaee4a9f..b01549b7 100644
--- a/sysdeps/loongarch/configure.ac
+++ b/sysdeps/loongarch/configure.ac
@@ -13,14 +13,14 @@ dnl satisify the requirement, but a distro may backport static PIE support into
 dnl earlier GCC or Binutils releases as well.
 AC_CACHE_CHECK([if the toolchain is sufficient to build static PIE on LoongArch],
 libc_cv_static_pie_on_loongarch, [
-  cat > conftest1.S << EOF
+  cat > conftest1.S <<\EOF
 .global _start
 .type _start, @function
 _start:
-  li.w \$a7, 93
+  li.w $a7, 93
   /* This ensures the assembler supports explicit reloc.  */
-  pcalau12i \$a0, %pc_hi20(x)
-  ld.w \$a0, \$a0, %pc_lo12(x)
+  pcalau12i $a0, %pc_hi20(x)
+  ld.w $a0, $a0, %pc_lo12(x)
   syscall 0
 
 .data
@@ -29,13 +29,13 @@ x:
   /* This should produce an R_LARCH_RELATIVE in the static PIE.  */
   .dword _start
 EOF
-  cat > conftest2.S << EOF
+  cat > conftest2.S <<\EOF
 .global f
 .type f, @function
 f:
   /* The linker should be able to handle this and produce a PLT entry.  */
-  la.pcrel \$t0, \$t0, external_func
-  jirl \$zero, \$t0, 0
+  la.pcrel $t0, $t0, external_func
+  jirl $zero, $t0, 0
 EOF
 
   libc_cv_static_pie_on_loongarch=no
-- 
2.39.1

