From 5a7ffd517131033e9bb5cf418392e115526b0027 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Thu, 27 Jan 2022 15:01:50 +0100
Subject: [PATCH 15/39] topology: rename function free_pre_preprocessor to
 free_pre_processor

Line up this name with others.

Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 topology/pre-processor.c | 2 +-
 topology/topology.c      | 6 +++---
 topology/topology.h      | 2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/topology/pre-processor.c b/topology/pre-processor.c
index e4483b4..581365e 100644
--- a/topology/pre-processor.c
+++ b/topology/pre-processor.c
@@ -167,7 +167,7 @@ static int pre_process_config(struct tplg_pre_processor *tplg_pp, snd_config_t *
 	return 0;
 }
 
-void free_pre_preprocessor(struct tplg_pre_processor *tplg_pp)
+void free_pre_processor(struct tplg_pre_processor *tplg_pp)
 {
 	snd_output_close(tplg_pp->output);
 	snd_output_close(tplg_pp->dbg_output);
diff --git a/topology/topology.c b/topology/topology.c
index b766927..8d65768 100644
--- a/topology/topology.c
+++ b/topology/topology.c
@@ -281,7 +281,7 @@ static int pre_process_run(struct tplg_pre_processor **tplg_pp,
 	free(inc_path);
 
 	if (err < 0)
-		free_pre_preprocessor(*tplg_pp);
+		free_pre_processor(*tplg_pp);
 	free(config);
 	return err;
 }
@@ -299,7 +299,7 @@ static int pre_process_conf(const char *source_file, const char *output_file,
 		return err;
 
 	/* free pre-processor */
-	free_pre_preprocessor(tplg_pp);
+	free_pre_processor(tplg_pp);
 	return err;
 }
 
@@ -332,7 +332,7 @@ static int compile(const char *source_file, const char *output_file, int cflags,
 		err = load_topology(&tplg, pconfig, size, cflags);
 
 		/* free pre-processor */
-		free_pre_preprocessor(tplg_pp);
+		free_pre_processor(tplg_pp);
 	} else {
 		err = load_topology(&tplg, config, config_size, cflags);
 	}
diff --git a/topology/topology.h b/topology/topology.h
index e200825..3a09c20 100644
--- a/topology/topology.h
+++ b/topology/topology.h
@@ -35,5 +35,5 @@ int pre_process(struct tplg_pre_processor *tplg_pp, char *config, size_t config_
 		const char *pre_processor_defs, const char *inc_path);
 int init_pre_processor(struct tplg_pre_processor **tplg_pp, snd_output_type_t type,
 		       const char *output_file);
-void free_pre_preprocessor(struct tplg_pre_processor *tplg_pp);
+void free_pre_processor(struct tplg_pre_processor *tplg_pp);
 #endif
-- 
2.36.0

